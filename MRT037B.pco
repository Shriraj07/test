       IDENTIFICATION DIVISION.
       PROGRAM-ID. MRT037B.
       AUTHOR. CalWIN Team.
       INSTALLATION. CalWIN.
       DATE-WRITTEN. 04/07/2004.
      *
      *============================================================
      ***                        PROGRAM TITLE
      *           ABAWD and FSET Placement Quarterly extract
      *============================================================
      *                          Version - 0.1
      *============================================================
      ***                        PROGRAM DESCRIPTION
      *This program creates an extract MRA037E and MRB037E containing
      *information about ABAWD and FSET individuals participation
      *in the reporting quarter. The program retrieves information
      *about individuals and also retrieves the different activities
      *they are participating in.
      *============================================================
      ***                        SUBROUTINES CALLED
      *****************************************************************
      *1. AA0001S
      *2. AA0009S
      *3. AA0016S
      *4. AA0029S
      *5. AA0032S
      *6. AA0056S
      *============================================================
      ***                      PROGRAM MAINTENANCE LOG
      *============================================================
      *DATE        | NAME        | CHANGE    |  DESCRIPTION        |
      *            |             | REQUEST # |                     |
      *============================================================
      * MM/DD/YYYY |             |           |                     |
      *============================================================
      * 03/02/2005 |Goverdhan    |PTEST 8976 | Handle Multiple
      *            |             |           | Records             |
      * 03/02/2005 |Goverdhan    |PTEST 8996 | RETROFIT from Prod
      *            |             |           | PT 8976
      *============================================================
      * 07/05/2005 |Nata Muth    |PTEST 10699| SR18923 fixed to run
      *            |             |           | faster and SQL's tunned.
      *============================================================
      * 04/15/2006 |Nata Muth    |PTEST 13090| SR53057 fixes
      *============================================================
      * 08/21/2006 | Suzie Tao   |CR#3709    |Recompiled to pick up
      *            |             |           |the changes of MRC017C.
      *            |             |           |Changed the file
      *            |             |           |MR0219EI record length
      *            |             |           |from 1001 to 1006.
      *============================================================
      * 10/20/2006 | Suzie Tao   |CR#3709    |Program modified and
      *            |             |TDR#21837  |recompiled for
      *            |             |           |revisions to CR3709.
      *            |             |           |Changed the file
      *            |             |           |MR0219EI record
      *            |             |           |length from 1006 to
      *            |             |           |1004.
      *============================================================
      * 10/16/2006 |Nata Muth    |PTEST 14667| SR57803 fixes
      *============================================================
      *03/06/2007  |TCS Reddy    |Ptest#15694|Changed input file
      *            |             |TDR# 22800 |MR0219EI record length
      *            |             |           |from 1004 to 1015 and
      *            |             |           |added Exempt code 65
      *            |             |           |in where clause of sql#03
      *            |             |           |(AG_INDV_TM_LIM_CLK_EXMT)
      **=============================================================
      *07/26/2007  |TCS Reddy    |Ptest#16734|Program modified to add
      *            |             |TDR#23598  |Clock type 'WA' in where
      *            |             |           |clause of
      *            |             |           |AG_INDV_TM_LIM_CLK_EXMT
      *            |             |           |sql and removed
      *            |             |           |unneccessary code.
      **=============================================================
      *08/12/2007  |TCS Reddy    |Ptest#16734|1.Program modified to get
      *            |             |TDR#23907  |latest authorized record
      *            |             |SR#122339 &|for the month instead of
      *            |             |SR#121797  |using EDBC_SEQ from
      *            |             |           |MR0017B.
      *            |             |           |2.The way of setting FS
      *            |             |           |Dicontinue switch also
      *            |             |           |changed.
      *            |             |           |3.The logic of getting
      *            |             |           |ABAWD individuals from
      *            |             |           |INDV_WRK_REQ is changed to
      *            |             |           |see INC_RPT_MTHD_IND from
      *            |             |           |AG_ELIG_RSLT.
      **=============================================================
      * 10/19/2007 | Suzie Tao   |CR#4142    |Recompiled to pick up
      *            |             |TDR#23974  |the changes of MRC017C.
      *            |             |           |Changed the file
      *            |             |           |MR0219EI record length
      *            |             |           |from 1015 to 1017.
      *=================================================================
      * 02/13/08   |Datta Lahane |CR#4615    |Modified SQL#  120 to|
      *            |             |TDR#24750  |include PAY_MNTH DESC|
      *            |             |           |before EDBC_SEQ in   |
      *            |             |           |the order by clause. |
      *            |             |           |                     |
      *==============================================================
      * 04/26/2011 |Keri Whitney |CR# 5349   |Recompiled to pick up
      *            |             |TDR# 30560 |the changes of MRC017C.
      *            |             |           |Changed the file
      *            |             |           |MR0219EI record length
      *            |             |           |from 1017 to 1020.
      *============================================================
      * 04/10/2012 |MJ Parsons   |CR#4667 TDR#31681
      *------------------------------------------------------------
      * 1. Add pay_mnth desc & edbc_seq desc to order by on SQL# 10
      * 2. Add edbc_seq desc to order by on SQL# 50
      * 3. Removed G's and commented code
      * 4. Removed unreferenced data from working storage
      * 5. Removed ORDER BY from SQL's 80, 85, 100 & 110 per DBA's
      * 6. Add effective date check for RT_ACT_TYP on SQL 100
      * 7. Add join to WSH-CS-ID in the WHERE clause on SQL 60
      * 8. Add distinct to SELECT in SQL 100 & 110
      *==============================================================
      * 10/08/2012 |Keri Whitney |CR# 3725 TDR# 32099
      *--------------------------------------------------------------
      * 1. Recompiled to pick up the changes of MRC017C.
      *    Changed the file MR0017EI record length from 1020 to 1022.
      ***************************************************************
      *12/06/2013  |Murali Potti |CR # 6232 TDR # 34446
      *--------------------------------------------------------------
      * 1. Recompiled to pick up the changes of MRC017C.
      *    Changed the file MR0017EI record length from 1020 to 1022.
      ***************************************************************
      *10/28/2016  |Dan Loomis   |PPM# 33371 TDR # 40314             
      *--------------------------------------------------------------
      * 1. Revised supporting logic around MRB037E_ES_ASG_ACT_CUR    
      * 2. Added WSH-MRB037-JOB-RETN-ACPT-SW                         
      *          WSH-MRB037-JOB-RETN-DESC to MRB037C extract         
      * 3  Modify SQL 010 to include cases with nulls in the ABAWD   
      *    indicator.                                                
      * 4. Include Non-ABAWD Work Registered cases in MRA037E extract
      * 5. Use work registration indicator as a proxy for ABAWD      
      * 6. Add Federal Fiscal Year constraints                       
      ***************************************************************
      *11/09/2016  |Dan Loomis   |PPM# 33371 TDR # 40355             
      *--------------------------------------------------------------
      * 1. Replaced SQL# 120 with new ES SQL and added SQL 115       
      *    to set New Placement switch once per activity in a        
      *    federal fiscal year (FFY)                                 
      ***************************************************************
      *11/22/2016  |Dan Loomis   |PPM# 33371 TDR # 40448             
      *--------------------------------------------------------------
      * 1. Converted SQL 40 to a cursor.   Added constraints for     
      *    exemptions 31 and 42.   Added code to set ABAWD indicator 
      *    to N when CWIN has exemption 31 or 42                     
      ***************************************************************
      *12/12/2016  |Dan Loomis   |PPM# 33371 TDR # 40533             
      *--------------------------------------------------------------
      * 1. Temporary version to support historical runs with code    
      *    that can check for pregnancy or child in CalFresh HH      
      *    ABAWD waiver without being dependent on timeclock         
      *    exemption codes.                                          
      * 2. Changes to 15% exemption switch logic                     
      * 3. Skip non work registrants on MRB037 extract               
      ***************************************************************
      *02/09/2017  |Dan Loomis   |PPM# 33371 TDR # 40554             
      *--------------------------------------------------------------
      * 1. Authorization in current month revisions.                 
      *    Added SQL 180, 190 and 200.                               
      *    Added two month loop for cases authorized in the current  
      *    month.                                                    
      ***************************************************************
      *02/17/2017  |Dan Loomis   |PPM# 33371 TDR # 40791             
      *--------------------------------------------------------------
      * 1. Added Cancelled to historical EDBC queries.               
      *    Revised logic to skip ABAWD processing when elig-sts      
      *    is other than passed.                                     
      ***************************************************************
      *03/03/2017  |Dan Loomis   |PPM# 33371 TDR # 40873             
      *--------------------------------------------------------------
      * 1. Revised FFY logic to look for non-ABAWD state in prior    
      *    months in case EDBC wasn't run in current month.          
      *                                                              
      ***************************************************************
      *03/22/2017  |Dan Loomis   |PPM# 33371 TDR # 40817             
      *--------------------------------------------------------------
      * 1. Revised FFY logic to handle new cases with zero           
      *    transitions in the FFY.                                   
      *                                                              
      ***************************************************************
      *03/27/2017  |Dan Loomis   |PPM# 33371 TDR # 40978             
      *--------------------------------------------------------------
      * 1. Retrofit 40978 to WP484                                   
      *                                                              
      ***************************************************************
      *04/12/2017  |Dan Loomis   |PPM# 33371 TDR # 41412             
      *--------------------------------------------------------------
      * 1. Revisions to identification of new ABAWDs in 12000-       
      *    paragraphs                                                
      ***************************************************************
      *04/21/2017  |Dan Loomis   |PPM# 33371 TDR # 41412             
      *--------------------------------------------------------------
      * 1. Refinement of peek behind the FFY curtain logic.          
      *    Added ag_eff_start_dt query.                              
      ***************************************************************
      *05/05/2017  |Dan Loomis   |PPM# 33371 TDR # 41412             
      *--------------------------------------------------------------
      * 1. ABAWD with exemption considered ABAWD=Y for STAT47        
      *                                                              
      ***************************************************************
      *05/12/2017  |Dan Loomis   |PPM# 33371 TDR # 41412             
      *--------------------------------------------------------------
      * 1. Remove Cancelled from history cursors.                    
      *                                                              
      ***************************************************************
      *06/27/2017  |Dan Loomis   |PPM# 33371 TDR # 41422             
      *--------------------------------------------------------------
      * 1. Retrofit 41412 to WP 503                                  
      *                                                              
      ***************************************************************
      *06/27/2017  |Dan Loomis   |PPM# 33371 TDR # 41426             
      *--------------------------------------------------------------
      * 1. Retrofit 41412 to WP 496                                  
      *                                                              
      ***************************************************************
      *07/26/2017  |Dan Loomis   |PPM# 33371 TDR # 41568             
      *--------------------------------------------------------------
      * 1. Fix 4 add ABAWD only exemptions to EDBC history lookups   
      *                                                              
      ***************************************************************
      *08/03/2017  |Dan Loomis   |PPM# 33371 TDR # 41806             
      *--------------------------------------------------------------
      * 1. Change #5 Break in Aid.                                   
      *                                                              
      ***************************************************************
      *08/17/2017  |Dan Loomis   |PPM# 33371 TDR # 41806             
      *--------------------------------------------------------------
      * 1. Change #6 Fifteen Percent Exemption                       
      *                                                              
      ***************************************************************
      *08/16/2017  |Dan Loomis   |PPM# 33371 TDR # 41806             
      *--------------------------------------------------------------
      * 1. Change #7 Merge PPM# 40668 TDR # 41085 into MRT037B.      
      *    MRT037B has to function properly before and after         
      *    ABAWD Phase 1B.                                           
      *    The HAS_ABAWD_WVER_SW or the ABAWD_EXMT_STS_CD are        
      *    queried depending on the reporting period.                
      ***************************************************************
      *08/16/2017  |Dan Loomis   |PPM# 33371 TDR # 41857             
      *--------------------------------------------------------------
      * 1. Retrofit of TDR41806 from WP505.4 into WP513              
      ***************************************************************
      *
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT MRA037E-ABAWD-QUARTERLY-FILE
                  ASSIGN TO EXTERNAL MRA037EO
                  ORGANIZATION IS LINE SEQUENTIAL
                  ACCESS MODE IS SEQUENTIAL
                  FILE STATUS IS WSH-MRA037E-FILE-STATUS.

           SELECT MRB037E-FSET-QUARTERLY-FILE
                  ASSIGN TO EXTERNAL MRB037EO
                  ORGANIZATION IS LINE SEQUENTIAL
                  ACCESS MODE IS SEQUENTIAL
                  FILE STATUS IS WSH-MRB037E-FILE-STATUS.

           SELECT MR0017E-CSLOAD-MOVEMNT-FILE
                  ASSIGN TO EXTERNAL MR0219EI
                  ORGANIZATION IS LINE SEQUENTIAL
                  ACCESS MODE IS SEQUENTIAL
                  FILE STATUS IS WSH-MR0017E-FILE-STATUS.

           SELECT MR0099E-REPORTING-PERIOD-FILE
                  ASSIGN TO EXTERNAL MRB099EO
                  ORGANIZATION IS LINE SEQUENTIAL
                  ACCESS MODE IS SEQUENTIAL
                  FILE STATUS IS WSH-MR0099E-FILE-STATUS.

       DATA DIVISION.
       FILE SECTION.

       FD  MR0017E-CSLOAD-MOVEMNT-FILE
           RECORDING MODE IS F
           RECORD CONTAINS 1028 CHARACTERS.
       01  WSH-MR0017E-REC                     PIC  X(1028).

       FD  MRA037E-ABAWD-QUARTERLY-FILE
           RECORDING MODE IS F
           RECORD CONTAINS 184 CHARACTERS.
       01  WSH-MRA037E-REC                     PIC  X(184).

       FD  MRB037E-FSET-QUARTERLY-FILE
           RECORDING MODE IS F
           RECORD CONTAINS 311 CHARACTERS.
       01  WSH-MRB037E-REC                     PIC  X(311).

       FD  MR0099E-REPORTING-PERIOD-FILE
           RECORDING MODE IS F
           RECORD CONTAINS 58 CHARACTERS.
       01  MR0099E-REPORTING-PERIOD-REC        PIC  X(58).

       WORKING-STORAGE SECTION.
       01  FILLER                              PIC  X(40) VALUE
           'WORKING STORAGE STARTS HERE'.

           EXEC SQL BEGIN DECLARE SECTION END-EXEC.

      **********************************************************
      *** ACCUMULATORS - WSA
      *** These variables are numeric fields used to keep track of
      *** of rolling totals, numbers of records, lines printed,
      *** pages printed, etc.
      ****************************************************************
      *
      ****************************************************************
      *** CONSTANTS - WSC
      *** Data elements whose values do not change during program
      *** execution.
      ****************************************************************
       01  WSC-CONSTANTS.
           05 WSC-MRA037E                     PIC  X(07)
                                              VALUE "MRA037E".
           05 WSC-MRB037E                     PIC  X(07)
                                              VALUE "MRB037E".
           05 WSC-MRA037Q                     PIC  X(07)
                                              VALUE "MRA037Q".
           05 WSC-MRB037Q                     PIC  X(07)
                                              VALUE "MRB037Q".
           05 WSC-MRT037B                     PIC  X(07)
                                              VALUE "MRT037B".
           05 WSC-AA0016S                     PIC  X(07)
                                              VALUE "AA0016S".
           05 WSC-AA0001S                     PIC  X(07)
                                              VALUE "AA0001S".
           05 WSC-AA0009S                     PIC  X(07)
                                              VALUE "AA0009S".
           05 WSC-AA0032S                     PIC  X(07)
                                              VALUE "AA0032S".
           05 WSC-AA0056S                     PIC  X(07)
                                              VALUE "AA0056S".
           05 WSC-YES                         PIC  X(01) VALUE "Y".
           05 WSC-NO                          PIC  X(01) VALUE "N".
           05 WSC-ZERO-N                      PIC  9(01) VALUE 0.
           05 WSC-DEFAULT-COMMIT-FREQ         PIC  9(9) COMP-5.
           05 WSC-PASS                        PIC  X(02) VALUE 'PS'.
           05 WSC-1                           PIC  9(01) VALUE 1.
           05 WSC-1-N                         PIC S9(04) COMP VALUE +1.
           05 WSC-2                           PIC  9(01) VALUE 2.
           05 WSC-10                          PIC  9(02) VALUE 10.
           05 WSC-11                          PIC  9(02) VALUE 11.
           05 WSC-01                          PIC  9(02) VALUE 01.
           05 WSC-02                          PIC  9(02) VALUE 02.
           05 WSC-12                          PIC  9(02) VALUE 12.
           05 WSC-TK                          PIC  X(02) VALUE "TK".
           05 WSC-NW                          PIC  X(02) VALUE "NW".
           05 WSC-CO                          PIC  X(02) VALUE "CO".
           05 WSC-A1                          PIC  X(02) VALUE "A1".
           05 WSC-A2                          PIC  X(02) VALUE "A2".
           05 WSC-A3                          PIC  X(02) VALUE "A3".
           05 WSC-A4                          PIC  X(02) VALUE "A4".
           05 WSC-A5                          PIC  X(02) VALUE "A5".
           05 WSC-A6                          PIC  X(02) VALUE "A6".
           05 WSC-A7                          PIC  X(02) VALUE "A7".
           05 WSC-A8                          PIC  X(02) VALUE "A8".
           05 WSC-A9                          PIC  X(02) VALUE "A9".
           05 WSC-D1                          PIC  X(02) VALUE "D1".
           05 WSC-D2                          PIC  X(02) VALUE "D2".
           05 WSC-D3                          PIC  X(02) VALUE "D3".
           05 WSC-D4                          PIC  X(02) VALUE "D4".
           05 WSC-D5                          PIC  X(02) VALUE "D5".
           05 WSC-D6                          PIC  X(02) VALUE "D6".
           05 WSC-D7                          PIC  X(02) VALUE "D7".
           05 WSC-D8                          PIC  X(02) VALUE "D8".
           05 WSC-D9                          PIC  X(02) VALUE "D9".
           05 WSC-WA                          PIC  X(02) VALUE "WA".
           05 WSC-CA                          PIC  X(02) VALUE "CA".
           05 WSC-03                          PIC  X(02) VALUE "03".
           05 WSC-OCT                         PIC  9(02) VALUE 10.
           05 WSC-AA-DA-INS-BTCH-SUMRY        PIC  X(40) VALUE
                                'aa_da_insert_af_btch_sumry'.
           05 WSC-AA-DA-BTCH-SUMRY-INIT       PIC  X(40) VALUE
                                'aa_da_af_btch_sumry_init'.
           05 WSC-FAN006                      PIC  X(06) VALUE "FAN006".
           05 WSC-FAN019                      PIC  X(06) VALUE "FAN019".
           05 WSC-FAN049                      PIC  X(06) VALUE "FAN049".
           05 WSC-FAN018                      PIC  X(06) VALUE "FAN018".

           05 WSC-FAS051                      PIC  X(06) VALUE 'FAS051'.
           05 WSC-IN                          PIC  X(02) VALUE 'IN'.
           05 WSC-MI                          PIC  X(02) VALUE 'MI'.
           05 WSC-IE                          PIC  X(02) VALUE 'IE'.
           05 WSC-SN                          PIC  X(02) VALUE 'SN'.
           05 WSC-EX                          PIC  X(02) VALUE 'EX'.

           05 WSC-S                           PIC  X(01) VALUE 'S'.
           05 WSC-FSET                        PIC  X(02) VALUE "FT".
           05 WSC-EXM                         PIC  X(01) VALUE "E".
           05 WSC-EXM-CD-27                   PIC  X(02) VALUE "27".
           05 WSC-EXM-CD-31                   PIC  X(02) VALUE "31".
           05 WSC-EXM-CD-37                   PIC  X(02) VALUE "37".
           05 WSC-EXM-CD-41                   PIC  X(02) VALUE "41".
           05 WSC-EXM-CD-42                   PIC  X(02) VALUE "42".
           05 WSC-EXM-CD-43                   PIC  X(02) VALUE "43".
           05 WSC-EXM-CD-65                   PIC  X(02) VALUE "65".
           05 WSC-EXM-CD-86                   PIC  X(02) VALUE "86".
           05 WSC-EXM-CD-88                   PIC  X(02) VALUE "88".
           05 WSC-DISC-OTHER                  PIC  X(01) VALUE "Y".
           05 WSC-DISC-TM                     PIC  X(01) VALUE "T".
           05 WSC-ABAWD                       PIC  X(01) VALUE "Y".
           05 WSC-NOT-FS                      PIC  X(01) VALUE "N".
           05 WSC-30                          PIC  9(02) VALUE 30.
           05 WSC-SEP                         PIC  9(02) VALUE 09.
           05 WSC-AUTHORIZED                  PIC  X(01) VALUE "A".
           05 WSC-CANCELLED                   PIC  X(01) VALUE "C".
           05 WSC-Q                           PIC  X(01) VALUE "Q".
           05 WSC-SPACE                       PIC  X(01) VALUE SPACES.
           05 WSC-CHILD                       PIC  X(02) VALUE 'CH'.
           05 WSC-ABAWDWAIVR                  PIC  X(10)
                                                   VALUE "ABAWDWAIVR".
           05 WSC-JOB-RETN-DESC               PIC  X(25)
              VALUE 'Job Retention'.

           05 WSC-ABAWD-PHASE1-DT              PIC  X(10) 
                                               VALUE '2017-01-01'.
           05 WSC-ABAWD-PHASE1B-DT             PIC  X(10) 
                                               VALUE '2017-08-14'.

      ****************************************************************
      *The following copybook contains all thE SQLCODEs and the file
      *status codes.
      ****************************************************************
       COPY AA0033C.
      ****************************************************************
      *The following copybook contains all the CalWIN error codes
      ****************************************************************

       COPY MRW100C.
      *
      ****************************************************************
      *** HOLD VARIABLES - WSH
      *** These variables are used as storage fields for the
      *** manipulation of data or as holding fields for control
      *** field comparison.
      ****************************************************************
       01  WSH-HOLD-VARIABLES.
           05 WSH-FREQ-COUNT                   PIC S9(04) COMP.
           05 WSH-COMMIT-FREQ                  PIC S9(04) COMP.
           05 WSH-MRA037E-FILE-STATUS          PIC  X(02).
           05 WSH-MRB037E-FILE-STATUS          PIC  X(02).
           05 WSH-MR0017E-FILE-STATUS          PIC  X(02).
           05 WSH-MR0099E-FILE-STATUS          PIC  X(02).
           05 WSH-WHEN-COMPILED                PIC  X(21).
           05 WSH-EDBC-SEQ                     PIC  9(10).
           05 WSH-FUT-EDBC-SEQ                 PIC  9(10).
           05 WSH-CS-ID                        PIC  X(07).

           05 WSH-INC-RPT-MTHD-IND             PIC  X(01).

           05 WSH-FIRST-DAY-OF-FFY.
              10 WSH-FIRST-DAY-OF-FED-FISCAL-YY PIC  9(04).
              10 FILLER                         PIC  X VALUE '-'.
              10 WSH-FIRST-DAY-OF-FED-FISCAL-MM PIC  9(02).
              10 FILLER                         PIC  X VALUE '-'.
              10 WSH-FIRST-DAY-OF-FED-FISCAL-DD PIC  9(02).

           05 WSH-FIRST-DAY-OF-FFY-X            PIC  X(10) REDEFINES
              WSH-FIRST-DAY-OF-FFY.

           05 WSH-LAST-DAY-OF-FFY.
              10 WSH-LAST-DAY-OF-FED-FISCAL-YY  PIC  9(04).
              10 FILLER                         PIC  X VALUE '-'.
              10 WSH-LAST-DAY-OF-FED-FISCAL-MM  PIC  9(02).
              10 FILLER                         PIC  X VALUE '-'.
              10 WSH-LAST-DAY-OF-FED-FISCAL-DD  PIC  9(02).

           05 WSH-LAST-DAY-OF-FFY-X       PIC  X(10) REDEFINES
              WSH-LAST-DAY-OF-FFY.

           05 WSH-FIRST-DAY-OF-QTR-R             PIC  X(10).
           05 WSH-FIRST-DAY-OF-QTR
                        REDEFINES WSH-FIRST-DAY-OF-QTR-R.
              10 WSH-FIRST-DAY-OF-QTR-YR       PIC  9(04).
              10 FILLER REDEFINES WSH-FIRST-DAY-OF-QTR-YR.
                 15 FILLER                     PIC  9(02).
                 15 WSH-FIRST-DAY-OF-QTR-YY    PIC  9(02).
              10 FILLER                        PIC  X(01).
              10 WSH-FIRST-DAY-OF-QTR-MM       PIC  9(02).
              10 FILLER                        PIC  X(01).
              10 WSH-FIRST-DAY-OF-QTR-DD       PIC  9(02).
           05 WSH-LAST-DAY-OF-QTR-R              PIC  X(10).
           05 WSH-LAST-DAY-OF-QTR
                       REDEFINES WSH-LAST-DAY-OF-QTR-R.
              10 WSH-LAST-DAY-OF-QTR-YR        PIC  9(04).
              10 FILLER                        PIC  X(01).
              10 WSH-LAST-DAY-OF-QTR-MM        PIC  9(02).
              10 FILLER                        PIC  X(01).
              10 WSH-LAST-DAY-OF-QTR-DD        PIC  9(02).

      *****CR# 4615, TDR# 24750
           05 WSH-CURR-MONTH                   PIC  X(06).
           05 WSH-CURRENT-MONTH.
              10 WSH-CURRENT-MONTH-YYYY        PIC  X(04).
              10 WSH-CURRENT-MONTH-MM          PIC  X(02).

           05 WSH-TEMP-DT.
              10 WSH-TEMP-DT-CCYY.
                 15 WSH-TEMP-DT-CC             PIC  9(02).
                 15 WSH-TEMP-DT-YY             PIC  9(02).
              10 WSH-TEMP-DT-CCYY-N            PIC  9(04) REDEFINES
                 WSH-TEMP-DT-CCYY.
              10 FILLER                        PIC  X VALUE '-'.
              10 WSH-TEMP-DT-MM                PIC  9(02).
              10 FILLER                        PIC  X VALUE '-'.
              10 WSH-TEMP-DT-DD                PIC  9(02).

           05 WSH-TEMP-DT1.
              10 WSH-TEMP-DT1-CCYY.
                 15 WSH-TEMP-DT1-CC            PIC  9(02).
                 15 WSH-TEMP-DT1-YY            PIC  9(02).
              10 FILLER                        PIC  X VALUE '-'.
              10 WSH-TEMP-DT1-MM               PIC  9(02).
              10 FILLER                        PIC  X VALUE '-'.
              10 WSH-TEMP-DT1-DD               PIC  9(02).

           05 WSH-REPORTING-MONTH-GR.
              10 WSH-REPORTING-MONTH-CCYY      PIC  9(04).
              10 WSH-REPORTING-MONTH-MM        PIC  9(02).
           05 WSH-REPORTING-MONTH              PIC  9(06) REDEFINES
              WSH-REPORTING-MONTH-GR.

           05 WSH-AS-OF-DT.
              10 WSH-AS-OF-DT-CCYY             PIC  9(04).
              10 FILLER                        PIC  X VALUE '-'.
              10 WSH-AS-OF-DT-MM               PIC  9(02).
              10 FILLER                        PIC  X VALUE '-'.
              10 WSH-AS-OF-DT-DD               PIC  9(02).

           05 WSH-FORMATTED-DT.
              10 WSH-FORMATTED-DT-MM           PIC  9(02).
              10 FILLER                        VALUE '/'.
              10 WSH-FORMATTED-DT-YY           PIC  9(02).

           05 WSH-FORMATT-DT.
              10 WSH-FORMATT-DT-MM             PIC  9(02).
              10 FILLER                        PIC  X(01) VALUE '/'.
              10 WSH-FORMATT-DT-DD             PIC  9(02).
              10 FILLER                        PIC  X(01) VALUE '/'.
              10 WSH-FORMATT-DT-CCYY           PIC  9(04).

           05 WSH-START-DTM                    PIC  X(19).
           05 WSH-FIRST-DAY-OF-PRV-RPT-DT      PIC  X(10).
           05 WSH-LAST-DAY-OF-PRV-RPT-DT       PIC  X(10).

           05 WSH-FIRST-DAY-ABAWD-CHK-DT       PIC  X(10).

           05 WSH-LAST-DAY-ABAWD-CHK-DT        PIC  X(10).

           05 WSH-FIRST-DAY-AOE-DT             PIC  X(10).

           05 WSH-LAST-DAY-AOE-DT              PIC  X(10).

           05 WSH-START-AOE-DT                 PIC  X(10).

           05 WSH-FIRST-DAY-BIA-DT             PIC  X(10).

           05 WSH-FIRST-DAY-BIA-DT-P           PIC  X(10).

           05 WSH-LAST-DAY-BIA-DT              PIC  X(10).

           05 WSH-LAST-DAY-BIA-DT-P            PIC  X(10).

           05 WSH-AG-EFF-START-DAY-02          PIC  X(10).

           05 WSH-LAST-DAY-ABAWD-HIST-DT       PIC  X(10).

           05 WSH-FIRST-DAY-OF-REPT-DT         PIC  X(10).
           05 WSH-FIRST-DAY-OF-REPT-R
               REDEFINES WSH-FIRST-DAY-OF-REPT-DT.
              10 WSH-FIRST-DAY-OF-REPT-YYYY    PIC  9(04).
              10 FILLER REDEFINES WSH-FIRST-DAY-OF-REPT-YYYY.
                 15 FILLER                     PIC  9(02).
                 15 WSH-FIRST-DAY-OF-REPT-YY   PIC  9(02).
              10 FILLER                        PIC  X(01).
              10 WSH-FIRST-DAY-OF-REPT-MM      PIC  9(02).
              10 FILLER                        PIC  X(01).
              10 WSH-FIRST-DAY-OF-REPT-DD      PIC  9(02).
           05 WSH-LAST-DAY-OF-REPT-DT          PIC  X(10).
           05 WSH-LAST-DAY-OF-REPT-R REDEFINES WSH-LAST-DAY-OF-REPT-DT.
              10 WSH-LAST-DAY-OF-REPT-YYYY     PIC  9(04).
              10 FILLER REDEFINES WSH-LAST-DAY-OF-REPT-YYYY.
                 15 FILLER                     PIC  9(02).
                 15 WSH-LAST-DAY-OF-REPT-YY    PIC  9(02).
              10 FILLER                        PIC  X(01).
              10 WSH-LAST-DAY-OF-REPT-MM       PIC  9(02).
              10 FILLER                        PIC  X(01).
              10 WSH-LAST-DAY-OF-REPT-DD       PIC  9(02).


           05 WSH-ACTL-BGN-DT.
              10 WSH-ACTL-BGN-MM               PIC  X(02).
              10 FILLER                        PIC  X(01) VALUE '/'.
              10 WSH-ACTL-BGN-DD               PIC  X(02).
              10 FILLER                        PIC  X(01) VALUE '/'.
              10 WSH-ACTL-BGN-YYYY             PIC  X(04).

           05 WSH-ACT-ACTL-BGN-DT.
              10 WSH-ACT-ACTL-BGN-YYYY         PIC  X(04).
              10 FILLER                        PIC  X(01).
              10 WSH-ACT-ACTL-BGN-MM           PIC  X(02).
              10 FILLER                        PIC  X(01).
              10 WSH-ACT-ACTL-BGN-DD           PIC  X(02).

           05 WSH-AG-EFF-START-DT              PIC  X(10).

           05 WSH-ABAWD-EXMT-DT                PIC  X(10).

           05 WSH-NEW-PLACE-ABAWD-IND          PIC  X(01).
           05 WSH-ELIG-STS-FAIL-SW             PIC  X(01).
           05 WSH-CS-FIRST-NM                  PIC  X(25).
           05 WSH-CS-LAST-NM                   PIC  X(25).
           05 WSH-INDV-FIRST-NM                PIC  X(25).
           05 WSH-INDV-LAST-NM                 PIC  X(25).
           05 WSH-CS-FULL-NM                   PIC  X(52).
           05 WSH-INDV-FULL-NM                 PIC  X(52).
           05 WSH-NEW-PARTC-SW                 PIC  X(01).
           05 WSH-ACT-ID                       PIC  9(09).
           05 WSH-ASG-ACT-ID                   PIC  9(09).
           05 WSH-ACT-ACTL-END-DT              PIC  X(10).
           05 WSH-ES-TYP-CD                    PIC  X(02).
           05 WSH-ES-PGM-ACT-DESC              PIC  X(32).
           05 WSH-REC-FOUND1                   PIC  X(01).
           05 WSH-REC-FOUND2                   PIC  X(01).
           05 WSH-REC-FOUND3                   PIC  X(01).
           05 WSH-ABAWD-EXMT-SW                PIC  X(01).
           05 WSH-AG-INDV-CWIN                 PIC  9(09).
           05 WSH-AG-INDV-CWIN-HOLD            PIC  9(09) VALUE 0.
           05 WSH-FS-DISC-SW                   PIC  X(01).
           05 WSH-RSN-CD                       PIC  X(06).
           05 WSH-FS-DISC-DT                   PIC  X(10).
           05 WSH-ELIG-STS-CD                  PIC  X(02).
           05 WSH-FS-ELIG-STS-CD               PIC  X(02).
           05 WSH-ABAWD-IND                    PIC  X(01).
           05 WSH-ABAWD-IND-EXT                PIC  X(01) VALUE SPACES.
           05 WSH-PGM-AID-CD                   PIC  X(02).
           05 WSH-PGM-TYP-CD                   PIC  X(02).
           05 WSH-MNTH-BGN-SW                  PIC  X(01).
           05 WSH-NEW-ELIG-STS-CD              PIC  X(02).
           05 WSH-WRK-REG-IND                  PIC  X(01).
           05 WSH-MAX-EDBC-SEQ                 PIC  9(10).
           05 WSH-MAX-AG-EFF-START-DT          PIC  X(10).
           05 WSH-MAX-AG-EFF-START-DT-I        PIC  S9(04) COMP.
           05 WSH-APP-DT                       PIC  X(10).
           05 WSH-LZ                           PIC  9(01).
           05 WSH-EXMT-CD                      PIC  X(02).
           05 WSH-ABAWD-TRN-CT                 PIC  S9(04) COMP.
           05 WSH-WR-TRN-CT                    PIC  S9(04) COMP.
           05 WSH-ABAWD-HIST-CT                PIC  S9(04) COMP.
           05 WSH-WR-HIST-CT                   PIC  S9(04) COMP.

           05 WSH-COUNTY-CD                    PIC  X(02) VALUE SPACES.

           05 WSH-IA-BGN-DT-P                  PIC  X(10) 
                                               VALUE '9999-12-31'.
           05 WSH-IA-END-DT-P                  PIC  X(10) VALUE SPACES.
           05 WSH-IA-BGN-DT                    PIC  X(10) VALUE SPACES.
           05 WSH-IA-END-DT                    PIC  X(10) VALUE SPACES.
           05 WSH-IA-DIFF                      PIC  S9(09) COMP
                                               VALUE +0. 

      *** -P For previous row
           05 WSH-STAT47-EDBC-SEQ              PIC  9(10).
           05 WSH-STAT47-EDBC-SEQ-P            PIC  9(10).
           05 WSH-STAT47-ABAWD-IND             PIC  X(01).
           05 WSH-STAT47-ABAWD-IND-P           PIC  X(01).
           05 WSH-STAT47-WORK-REG-IND          PIC  X(01).
           05 WSH-STAT47-WORK-REG-IND-P        PIC  X(01).
           05 WSH-STAT47-AG-EFF-START-DT       PIC  X(10).
           05 WSH-STAT47-AG-EFF-START-DT-P     PIC  X(10).
           05 WSH-STAT47-HIDDEN-EXMT           PIC  X(01).
           05 WSH-STAT47-HIDDEN-EXMT-P         PIC  X(01).

      *** -Q For peek back logic
           05 WSH-STAT47-ABAWD-IND-Q           PIC  X(01).
           05 WSH-STAT47-WORK-REG-IND-Q        PIC  X(01).

      *** -B For break in aid logic
           05 WSH-STAT47-ABAWD-IND-B           PIC  X(01).
           05 WSH-STAT47-WRK-REG-IND-B         PIC  X(01).

           05 WSH-BIA-EDBC-SEQ                 PIC  9(10).

           05 WSH-ABAWD-TRN-CT-D               PIC +9(04) DISPLAY.
           05 WSH-WR-TRN-CT-D                  PIC +9(04) DISPLAY.
           05 WSH-CWIN-I-D                     PIC +9(04) DISPLAY.
           05 WSH-SQLCODE-D                    PIC +9(09) DISPLAY.
           05 WSH-IA-DIFF-D                    PIC +9(09) DISPLAY.

      ****************************************************************
      *** SWITCHES - WSS
      *** These variables are used to control program flow and logic
      ****************************************************************
       01  WSS-SWITCHES.
           05 WSS-END-OF-PROCESSING-SW         PIC  X(01) VALUE 'N'.
              88 WSS-END-OF-PROCESSING                    VALUE 'Y'.
              88 WSS-N-END-OF-PROCESSING                  VALUE 'N'.
           05 WSS-END-OF-FILE-SW               PIC  X(01) VALUE 'N'.
              88 WSS-END-OF-FILE                          VALUE 'Y'.

           05 WSS-CURSOR-STATUS-SW2            PIC  X(01) VALUE 'E'.
              88 WSS-END-OF-CUR2                          VALUE 'E'.
              88 WSS-BGN-OF-CUR2                          VALUE 'B'.

           05 WSS-CURSOR-STATUS-SW             PIC  X(01) VALUE 'E'.
              88 WSS-END-OF-CUR1                          VALUE 'E'.
              88 WSS-BGN-OF-CUR1                          VALUE 'B'.

           05 WSS-STAT47-CUR-SW                PIC  X(01) VALUE ' '.
              88 WSS-END-STAT47-CUR                       VALUE 'E'.

           05 WSS-AUTH-CUR-SW                  PIC  X(01) VALUE ' '.
              88 WSS-END-AUTH-CUR                         VALUE 'E'.

           05 WSS-END-BIA-CUR-SW               PIC  X(01) VALUE ' '.
              88 WSS-END-BIA-CUR                          VALUE 'E'.

           05 WSS-AG-TIME-CLK-CUR-SW           PIC  X(01) VALUE ' '.
              88 WSS-END-AG-TIME-CLK-CUR                  VALUE 'E'.

           05 WSS-JOB-RETN-ACPT-SW             PIC  X(01) VALUE ' '.
              88 WSS-JOB-RETN-ACPT                        VALUE 'Y'.

           05 WSS-MONTH-NUMBER                  PIC  X(02).
              88 WSS-RUN-IN-FIRST-QTR          VALUE '01' THRU '03'.
              88 WSS-RUN-IN-SECOND-QTR         VALUE '04' THRU '06'.
              88 WSS-RUN-IN-THIRD-QTR          VALUE '07' THRU '09'.
              88 WSS-RUN-IN-FOURTH-QTR         VALUE '10' THRU '12'.
              88 WSS-BGN-FIRST-QTR             VALUE '01'.
              88 WSS-BGN-SECOND-QTR            VALUE '04'.
              88 WSS-BGN-THIRD-QTR             VALUE '07'.
              88 WSS-BGN-FOURTH-QTR            VALUE '10'.

           05 WSS-NEW-PLACEMENT-SW             PIC  X(01) VALUE 'N'.
              88 WSS-Y-NEW-PLACEMENT-SW        VALUE 'Y'.
              88 WSS-N-NEW-PLACEMENT-SW        VALUE 'N'.

           05 WSS-STAT47-DONE-SW               PIC  X(01) VALUE 'N'.
              88 WSS-STAT47-DONE               VALUE 'Y'.

           05 WSS-BIA-DONE-SW                  PIC  X(01) VALUE ' '.
              88 WSS-BIA-DONE                             VALUE 'Y'.

           05 WSS-NO-BIA-CHECK-SW              PIC  X(01) VALUE ' '.
              88 WSS-NO-BIA-CHECK                         VALUE 'Y'.

           05 WSS-BIA-SW                       PIC  X(01) VALUE ' '.
              88 WSS-DO-BIA                               VALUE 'Y'.
              88 WSS-SKIP-BIA                             VALUE 'N'.

           05 WSS-ABAWD-NEW-SW                 PIC  X(01) VALUE 'N'.
              88 WSS-ABAWD-NEW                 VALUE 'Y'.

           05 WSS-WR-NEW-SW                    PIC  X(01) VALUE 'N'.
              88 WSS-WR-NEW                    VALUE 'Y'.

           05 WSS-ZT-RAN-SW                    PIC  X(01) VALUE 'N'.
              88 WSS-ZT-RAN                    VALUE 'Y'.
           05 WSS-AUTH-DATE-SW                 PIC  X(01) VALUE 'N'.
              88 WSS-AUTH-DATE-YES             VALUE 'Y'.

           05 WSS-STAT47-ABAWD-SW              PIC  X(01) VALUE 'N'.
              88 WSS-STAT47-ABAWD-CHK          VALUE 'Y'.
              88 WSS-STAT47-ABAWD-HIST         VALUE 'H'.

           05 WSS-STAT47-WR-SW                 PIC  X(01) VALUE 'N'.
              88 WSS-STAT47-WR-CHK             VALUE 'Y'.
              88 WSS-STAT47-WR-HIST            VALUE 'H'.

           05 WSS-BIA-ABAWD-SW                 PIC  X(01) VALUE 'N'.
              88 WSS-BIA-ABAWD-CHK             VALUE 'Y'.
              88 WSS-BIA-ABAWD-HIST            VALUE 'H'.

           05 WSS-BIA-WR-SW                    PIC  X(01) VALUE 'N'.
              88 WSS-BIA-WR-CHK                VALUE 'Y'.
              88 WSS-BIA-WR-HIST               VALUE 'H'.

           05 WSS-AUTH-ABAWD-SW                PIC  X(01) VALUE 'N'.
              88 WSS-AUTH-ABAWD-CHK            VALUE 'Y'.
              88 WSS-AUTH-ABAWD-HIST           VALUE 'Y'.

           05 WSS-AUTH-WR-SW                   PIC  X(01) VALUE 'N'.
              88 WSS-AUTH-WR-CHK               VALUE 'Y'.
              88 WSS-AUTH-WR-HIST              VALUE 'Y'.

           05 WSS-PEEK-NOT-FOUND-SW            PIC  X(01) VALUE 'N'.
              88 WSS-PEEK-NOT-FOUND            VALUE 'Y'.
           05 WSS-ABAWD-SAME-SW                PIC  X(01) VALUE 'N'.
              88 WSS-ABAWD-SAME                VALUE 'Y'.
           05 WSS-ABAWD-FFY-SW                 PIC  X(01) VALUE 'N'.
              88 WSS-ABAWD-FFY                 VALUE 'Y'.

           05 WSS-WR-SAME-SW                   PIC  X(01) VALUE 'N'.
              88 WSS-WR-SAME                   VALUE 'Y'.
           05 WSS-WR-FFY-SW                    PIC  X(01) VALUE 'N'.
              88 WSS-WR-FFY                    VALUE 'Y'.

           05 WSS-ABAWD-EXMT-SW                PIC  X(01) VALUE 'N'.
              88 WSS-ABAWD-EXMT-NOT-FOUND      VALUE 'Y'.
              88 WSS-ABAWD-EXMT-FOUND          VALUE 'N'.

           05 WSS-FPE-SW                       PIC  X(01) VALUE 'Y'.
              88 WSS-FPE-YEP                   VALUE 'Y'.
              88 WSS-FPE-NOPE                  VALUE 'N'.

           05 WSS-ABAWD-WAIVER-SW              PIC  X(02) VALUE SPACES.
              88 WSS-ABAWD-WAIVER-OK           VALUE 'OK'.
              88 WSS-ABAWD-WAIVER-NF           VALUE 'NF'.

           05 WSS-ABAWD-EXMT-STS-CD-SW         PIC  X(02) VALUE SPACES.
              88 WSS-ABAWD-EXMT-STS-CD-OK      VALUE 'OK'.
              88 WSS-ABAWD-EXMT-STS-CD-NF      VALUE 'NF'.

           05 WSS-BIA-ABAWD-EXMT-SW            PIC  X(01) VALUE SPACES.
              88 WSS-BIA-ABAWD-EXMT-YES        VALUE 'Y'.
              88 WSS-BIA-ABAWD-EXMT-NO         VALUE 'N'.


      ****************************************************************
      *** ERROR ROUTINE PARAMETERS - WSL
      ****************************************************************
       01  WSL-ERROR-LOG.
      ****************************************************************
      *The following copybook contains all the variables used by the
      *error logging subroutine AA0016S
      ****************************************************************
       COPY AA0016C.

      ****************************************************************
      *** COPY BOOKS
      ****************************************************************
       01  LNK-AA0032S-VARIABLES.
      ****************************************************************
      *The followibg copybook containis the output variables used by the
      *database connectivity subroutine AA0032S.
      ****************************************************************
       COPY AA0032C.

      ****************************************************************
      *The following copybook contains the variables necessary for
      *setting the pointer for the data access layer
      ****************************************************************
       COPY AA0053C.

       01  LNK-AA0009C-PARMS.
      ****************************************************************
      *The following copybook contains the output variables used by the
      *subroutine AA0009S that supplies the system and as of date
      ****************************************************************
       COPY AA0009C.

       01  LNK-AA0001S-VARIABLES.
      ****************************************************************
      *The following copybook contains all the input and out variables
      *used by the date subroutine AA0001S.
      ****************************************************************
       COPY AA0001C.

       01  LNK-AA0029S-VARIABLES.
      ****************************************************************
      *   Date validation subroutine copybook
       COPY AA0008C.
       01  LNK-AA0008C-VARIABLES.

      ****************************************************************
      *Following copubook contains variables used by the subroutine that
      *retrieves the caseload, user, office and unit information.
      ****************************************************************
       COPY AA0029C.

       01  LNK-COMMON-PARMS.
      ****************************************************************
      *The following copybook contains the common variables that are
      *necessary while calling subroutines
      ****************************************************************
       COPY AA0052C.

       01  LNK-OVERRIDE-PARMS.
      ****************************************************************
      *The following copybook contains all the variables necessary for
      *accepting any external parameter.
      ****************************************************************
       COPY AA0050C.

       01  LNK-AA0055C-PARMS.
      ****************************************************************
      *The following copybook contains the variables used by the audit
      *trail subroutine AA0056S
      ****************************************************************
       COPY AA0055C.

      ****************************************************************
      *Following copybook contains layout for the ABAWD output extract
      ******************************************************************
       COPY MRA037C.
      ******************************************************************
      *Following copybook contains layout for the FSET output extract
      ****************************************************************
       COPY MRB037C.
      ****************************************************************
      *Following copybook contains the layout for the Input File
      ****************************************************************
       COPY MRC017C.
      ****************************************************************
      *Following copybook contains the layout for the file MR0099E
      *containing the reporting extract.
      ****************************************************************
       COPY MR0099C.
      ****************************************************************
       01 WSD-DB-TABL-VARS.
           EXEC SQL
              INCLUDE MR0037C
           END-EXEC.

      *****************************************************************
      *** SQL SECTION
      ****************************************************************
           EXEC SQL
              INCLUDE SQLCA
           END-EXEC.

      *================================================================
      **This cursor retrieves all ABAWD individuals
      ******************************************************************
      *                        SQL# 10
      ******************************************************************
      * CR4667 - added order by clause with pay_mnth desc and
      * edbc_seq desc.
      ******************************************************************
           EXEC SQL
             DECLARE MR0037A_ELIG_RSLT_CUR CURSOR WITH HOLD FOR

               SELECT
                     A.CWIN
                    ,NVL(A.ABAWD_IND,:WSC-SPACE)
                    ,A.ELIG_STS_CD
                    ,A.EDBC_SEQ
                    ,NVL(A.WRK_REG_IND,:WSC-SPACE)
                    ,B.INC_RPT_MTHD_IND
                    ,TO_CHAR(B.AG_EFF_START_DT,'YYYY-MM-DD')
               FROM
                     AG_INDV_ELIG_RSLT A
                    ,AG_ELIG_RSLT      B
               WHERE
                     A.CS_ID        = :WSH-CS-ID
                 AND A.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                 AND NVL(A.ABAWD_IND,:WSC-SPACE) IN
                        (:WSC-ABAWD, :WSC-EXM, :WSC-SPACE)
                 AND A.CS_ID        = B.CS_ID
                 AND A.PGM_TYP_CD   = B.PGM_TYP_CD
                 AND A.EDBC_SEQ     = B.EDBC_SEQ
                 AND B.DELT_RCRD_SW = :WSC-NO
                 AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
                 AND B.AG_EFF_START_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(B.AG_EFF_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
               ORDER BY B.PAY_MNTH DESC, B.EDBC_SEQ DESC
           END-EXEC.

      ******************************************************************
      * This Process Retrieves Activities of Individuals.               
      ******************************************************************
      *                        SQL# 20                                  
      ******************************************************************
           EXEC SQL
              DECLARE  MRB037E_ES_ASG_ACT_CUR CURSOR WITH HOLD FOR

              SELECT
                  ACT_ID
                 ,ASG_ACT_ID
                 ,TO_CHAR(ACTL_BGN_DT,'YYYY-MM-DD')
                 ,TO_CHAR(ACTL_END_DT,'YYYY-MM-DD')
              FROM
                  ES_ASG_ACT
              WHERE
                     CWIN         = :WSH-AG-INDV-CWIN
                 AND PGM_TYP_CD   = :WSC-FSET
                 AND ACTL_BGN_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(ACTL_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
           END-EXEC.

      ******************************************************************
      * Descriptions from RT_TM_CLK_EXMT                                
      * WSC-EXM-CD-43 Individual Living in an Area With an ABAWD Waiver.
      * WSC-EXM-CD-65 County Wide ABAWD waiver                          
      *                                                                 
      * AG_INDV_TM_LIM_CLK_EXMT.EXMT_CD is NOT NULL on the table so     
      * a null indicator is not needed.                                 
      *                          SQL#  40                               
      ******************************************************************

           EXEC SQL
              DECLARE MRB037E_AG_TIME_CLK_CUR CURSOR WITH HOLD FOR
              SELECT
                 EXMT_CD
              FROM
                 AG_INDV_TM_LIM_CLK_EXMT
              WHERE
                    CWIN       = :WSH-AG-INDV-CWIN
                AND CS_ID      = :WSH-CS-ID
                AND EDBC_SEQ   = :WSH-EDBC-SEQ
                AND PGM_TYP_CD = :WSH-PGM-TYP-CD
                AND EXMT_CD    IN(:WSC-EXM-CD-43
                                 ,:WSC-EXM-CD-65)
                AND CLK_TYP_CD IN  
                                 (:WSC-A1,:WSC-A2,:WSC-A3 
                                 ,:WSC-A4,:WSC-A5,:WSC-A6 
                                 ,:WSC-A7,:WSC-A8,:WSC-A9 
                                 ,:WSC-D1,:WSC-D2,:WSC-D3 
                                 ,:WSC-D4,:WSC-D5,:WSC-D6 
                                 ,:WSC-D7,:WSC-D8,:WSC-D9 
                                 ,:WSC-WA)
                AND EXMT_BGN_DT <=
                    TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                AND NVL(EXMT_END_DT, F_HIGH_DT()) >=
                    TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
           END-EXEC.

      ******************************************************************
      * This cursor is used to parse EDBC history for changes to        
      * ABAWD_IND or WORK_REG_IND to detect if a change is new within   
      * the federal fiscal year (FFY).  The start date is bounded by    
      * the beginning of the FFY and the last day of the reporting      
      * period.  The result set is ordered by EDBC_SEQ descending.      
      * Important.  The date constraint on this query is different      
      * for cases authorized in the reporting month.                    
      * For such cases the WSH-LAST-DAY-ABAWD-CHK-DT is moved to        
      * WSH-LAST-DAY-ABAWD-HIST-DT.  This date is one day less than     
      * start date of the two previous month window used to find ABAWD  
      * transitions.                                                    
      * For cases authorized in a prior month WSH-LAST-DAY-OF-REPT-DT is
      * moved to WSH-LAST-DAY-ABAWD-HIST-DT.   This is the last day of  
      * the current reporting period.                                   
      ******************************************************************
      *                        SQL#  170                                
      ******************************************************************
           EXEC SQL
              DECLARE MRB037E_STAT47_ABAWD_CUR CURSOR WITH HOLD FOR
              SELECT
                     A.EDBC_SEQ
                    ,NVL(A.ABAWD_IND,:WSC-SPACE)
                    ,NVL(A.WRK_REG_IND,:WSC-SPACE)
                    ,TO_CHAR(B.AG_EFF_START_DT,'YYYY-MM-DD')
              FROM
                    AG_INDV_ELIG_RSLT A
                   ,AG_ELIG_RSLT      B
              WHERE
                    A.CS_ID        = :WSH-CS-ID
                AND A.CWIN         = :WSH-AG-INDV-CWIN
                AND A.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                AND A.EDBC_SEQ    <= :WSH-MAX-EDBC-SEQ
                AND A.CS_ID        = B.CS_ID
                AND A.PGM_TYP_CD   = B.PGM_TYP_CD
                AND A.EDBC_SEQ     = B.EDBC_SEQ
                AND B.DELT_RCRD_SW = :WSC-NO
                AND A.ELIG_STS_CD  = :WSC-PASS
                AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
                AND B.AG_EFF_START_DT >=
                    TO_DATE(:WSH-FIRST-DAY-OF-FFY-X,'YYYY-MM-DD')
                AND B.AG_EFF_START_DT <=
                    TO_DATE(:WSH-LAST-DAY-ABAWD-HIST-DT,'YYYY-MM-DD')
               ORDER BY B.AG_EFF_START_DT DESC
                       ,A.EDBC_SEQ DESC
           END-EXEC.

      ******************************************************************
      * This cursor is used to parse EDBC history in the prior month    
      * to detect an ABAWD transition for cases authorized in the       
      * current data month.  The start date is bounded by first and     
      * last day of the prior data month.                               
      * The result set is ordered by EDBC_SEQ descending.               
      ******************************************************************
      *                        SQL#  200                                
      ******************************************************************
           EXEC SQL
              DECLARE MRB037E_STAT47_PRIOR_CUR CURSOR WITH HOLD FOR
              SELECT
                     A.EDBC_SEQ
                    ,NVL(A.ABAWD_IND,:WSC-SPACE)
                    ,NVL(A.WRK_REG_IND,:WSC-SPACE)
                    ,TO_CHAR(B.AG_EFF_START_DT,'YYYY-MM-DD')
              FROM
                    AG_INDV_ELIG_RSLT A
                   ,AG_ELIG_RSLT      B
              WHERE
                    A.CS_ID        = :WSH-CS-ID
                AND A.CWIN         = :WSH-AG-INDV-CWIN
                AND A.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                AND A.EDBC_SEQ    <= :WSH-MAX-EDBC-SEQ
                AND A.CS_ID        = B.CS_ID
                AND A.PGM_TYP_CD   = B.PGM_TYP_CD
                AND A.EDBC_SEQ     = B.EDBC_SEQ
                AND B.DELT_RCRD_SW = :WSC-NO
                AND A.ELIG_STS_CD  = :WSC-PASS
                AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
                AND B.AG_EFF_START_DT >=
                    TO_DATE(:WSH-FIRST-DAY-ABAWD-CHK-DT,'YYYY-MM-DD')
                AND B.AG_EFF_START_DT <=
                    TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
               ORDER BY B.AG_EFF_START_DT DESC
                       ,A.EDBC_SEQ DESC
           END-EXEC.

      ******************************************************************
      * This cursor is used to parse CalFresh aid history for a         
      * break in aid                                                    
      ******************************************************************
      *                        SQL#  250                                
      ******************************************************************
           EXEC SQL
              DECLARE MRB037E_STAT47_BIA_CUR CURSOR WITH HOLD FOR
                SELECT 
                  TO_CHAR(BGN_DT,'YYYY-MM-DD')
                 ,TO_CHAR(NVL(END_DT,F_HIGH_DT()),'YYYY-MM-DD')
                 ,TO_CHAR(LAST_DAY(BGN_DT),'YYYY-MM-DD')
                FROM INDV_ASST
                WHERE PGM_TYP_CD      = :WSH-PGM-TYP-CD
                  AND PRIOR_CS_ID     = :WSH-CS-ID
                  AND CWIN            = :WSH-AG-INDV-CWIN
                  AND AID_FRM_CNTY_CD = :WSH-COUNTY-CD
                  AND AID_FRM_STA_CD  = :WSC-CA
                  AND BGN_DT <=
                    TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                  AND EFF_END_DT IS NULL
                  ORDER BY BGN_DT DESC
           END-EXEC.

      ******************************************************************

           EXEC SQL END DECLARE SECTION END-EXEC.

       PROCEDURE DIVISION.

      *****************************************************************
      *The following paragraph controls the flow of the program
      *****************************************************************
       00000-CONTROL.

           PERFORM 01000-INITIATE
           PERFORM 02000-OPEN
           PERFORM 03000-MAIN
           PERFORM 80000-BATCH-CNTL-SUMRY
           PERFORM 90000-CLOSE
           .

      *****************************************************************
      *The following paragraph does the database connection and gets the
      *Run date and any other required external parameter.
      *****************************************************************
       01000-INITIATE.
           MOVE '01000-INITIATE'               TO WSL-PARA-NAME
           MOVE WSC-MRT037B TO WSL-PROGRAM-ID
                               WSL-MAIN-PROGRAM-ID
                               WSL-USER-ID
                               LNK-AA0052C-MAIN-PROGRAM-ID
                               LNK-AA0052C-USR-ID
           INITIALIZE WSH-MRA037E-REC
                      WSH-MR0017E-REC
                      WSH-MRB037E-REC
                      MR0099E-REPORTING-PERIOD-REC
           SET WSS-N-END-OF-PROCESSING TO TRUE
      * Connect to database
           CALL WSC-AA0032S USING LNK-AA0032S-VARIABLES
           END-CALL
           IF LNK-RETURN-CODE = WSC-ZERO-N
              CONTINUE
           ELSE
              MOVE LNK-RETURN-CODE         TO WSL-ERROR-VALUE
              MOVE WSC-ERROR-IN-CALL-CLWIN TO WSL-CALWIN-ERROR-CODE
              MOVE "ERROR IN CALLING ROUTINE AA0032S"
                TO WSL-MISC-ERROR-TXT
              SET  WSL-TERMINAL            TO TRUE
              PERFORM 91000-ERROR
           END-IF

      * Copybook to set data access layer entry point address and to
      * set the address of the data access SQLCODE and SQLTEXT variables
           COPY AA0057C.
      * Get system datetime, current date and county code
           CALL WSC-AA0009S USING  LNK-COMMON-PARMS
                                   LNK-AA0009C-PARMS
           END-CALL
           IF LNK-AA0009C-RETURN-CD-OK
              MOVE LNK-AA0009C-SYSTEM-DTM TO WSH-START-DTM
           ELSE
              MOVE LNK-AA0009C-OUT-RETURN-CD
                TO WSL-ERROR-VALUE
              MOVE WSC-ERROR-IN-CALL-CLWIN TO WSL-CALWIN-ERROR-CODE
              MOVE "ERROR IN CALLING ROUTINE AA0009S"
                TO WSL-MISC-ERROR-TXT
              SET  WSL-TERMINAL TO TRUE
              PERFORM 91000-ERROR
           END-IF
           MOVE LNK-AA0009C-COUNTY-CODE    TO LNK-AA0052C-COUNTY-CODE

      * Accept override parameters from shell and unstring to variables
           COPY AA0051C.
           MOVE LNK-AA0009C-CURRENT-YYYY   TO WSH-AS-OF-DT-CCYY
           MOVE LNK-AA0009C-CURRENT-MM     TO WSH-AS-OF-DT-MM
           MOVE LNK-AA0009C-CURRENT-DD     TO WSH-AS-OF-DT-DD

           MOVE WSH-AS-OF-DT
             TO LNK-AA0052C-CALWIN-CURRENT-DT
           PERFORM 04000-GET-REPORT-PERIOD

           MOVE WSC-DEFAULT-COMMIT-FREQ    TO WSH-COMMIT-FREQ
           MOVE LNK-AA0009C-COUNTY-CODE    TO WSH-COUNTY-CD
           .

      ****************************************************************
      *The following paragraph calculates the reporting period and
      *populates other date related variables
      ****************************************************************
       04000-GET-REPORT-PERIOD.
           MOVE '04000-GET-REPORT-PERIOD' TO WSL-PARA-NAME

           MOVE LNK-AA0009C-CURRENT-DT TO LNK-AA0008C-DATE
      **  Subtract a day to get the last day of reporting period
           INITIALIZE LNK-AA0001C-PARM
           MOVE LNK-AA0008C-DATE TO WSH-FIRST-DAY-OF-REPT-DT
           MOVE WSC-1 TO WSH-FIRST-DAY-OF-REPT-DD
           MOVE WSH-FIRST-DAY-OF-REPT-DT TO LNK-AA0001C-IN-FROM-DATE
           SET LNK-SUBT-CALENDER-DAYS-CD TO TRUE
           MOVE WSC-1 TO LNK-AA0001C-IN-DAY-MN-YR-NUM
      * Subtract one calender day from date
           CALL WSC-AA0001S USING LNK-COMMON-PARMS
                                  LNK-AA0001C-PARM
           END-CALL
           IF LNK-AA0001C-NORMAL-RETURN-CD
              MOVE LNK-AA0001C-OUT-DATE TO WSH-LAST-DAY-OF-REPT-DT
                                           WSH-FIRST-DAY-OF-REPT-DT
              MOVE WSC-1 TO WSH-FIRST-DAY-OF-REPT-DD
      *****CR# 4615, TDR# 24750
           MOVE WSH-FIRST-DAY-OF-REPT-MM
                                              TO WSH-CURRENT-MONTH-MM
           MOVE WSH-FIRST-DAY-OF-REPT-YYYY TO WSH-CURRENT-MONTH-YYYY
           MOVE WSH-CURRENT-MONTH             TO WSH-CURR-MONTH
      *****CR# 4615, TDR# 24750
           ELSE
              MOVE LNK-AA0001C-OUT-RETURN-CD TO WSL-ERROR-VALUE
              MOVE WSC-ERROR-IN-CALL-CLWIN TO WSL-CALWIN-ERROR-CODE
              MOVE 'ERROR IN CALLING AA0001S' TO
                   WSL-MISC-ERROR-TXT
              SET WSL-TERMINAL TO TRUE
               PERFORM 91000-ERROR
           END-IF
           MOVE WSH-FIRST-DAY-OF-REPT-DT TO WSH-FIRST-DAY-OF-PRV-RPT-DT

           MOVE WSH-FIRST-DAY-OF-PRV-RPT-DT TO LNK-AA0001C-IN-FROM-DATE
           SET LNK-SUBT-MONTH-CD TO TRUE
           MOVE WSC-1 TO LNK-AA0001C-IN-DAY-MN-YR-NUM

           CALL WSC-AA0001S USING LNK-COMMON-PARMS
                                  LNK-AA0001C-PARM
           END-CALL
           IF LNK-AA0001C-NORMAL-RETURN-CD
              MOVE LNK-AA0001C-OUT-DATE TO WSH-FIRST-DAY-OF-PRV-RPT-DT
           ELSE
              MOVE LNK-AA0001C-OUT-RETURN-CD TO WSL-ERROR-VALUE
              MOVE WSC-ERROR-IN-CALL-CLWIN TO WSL-CALWIN-ERROR-CODE
              MOVE 'ERROR IN CALLING AA0001S' TO
                   WSL-MISC-ERROR-TXT
              SET WSL-TERMINAL TO TRUE
               PERFORM 91000-ERROR
           END-IF

      * Subtract one calender day from date
           MOVE WSH-FIRST-DAY-OF-REPT-DT TO LNK-AA0001C-IN-FROM-DATE
           SET LNK-SUBT-CALENDER-DAYS-CD   TO TRUE
           PERFORM 01110-CALL-AA0001S
           MOVE LNK-AA0001C-OUT-DATE       TO WSH-LAST-DAY-OF-PRV-RPT-DT

      * Current month plus two month envelope for cases authorized 
      * in current month.
           MOVE WSH-FIRST-DAY-OF-PRV-RPT-DT TO LNK-AA0001C-IN-FROM-DATE
           SET LNK-SUBT-MONTH-CD TO TRUE
           MOVE WSC-1 TO LNK-AA0001C-IN-DAY-MN-YR-NUM
           PERFORM 01110-CALL-AA0001S
           MOVE LNK-AA0001C-OUT-DATE      TO WSH-FIRST-DAY-ABAWD-CHK-DT

      * Subtract one calender day from date
           MOVE WSH-FIRST-DAY-ABAWD-CHK-DT TO LNK-AA0001C-IN-FROM-DATE
           SET LNK-SUBT-CALENDER-DAYS-CD   TO TRUE
           PERFORM 01110-CALL-AA0001S
           MOVE LNK-AA0001C-OUT-DATE       TO WSH-LAST-DAY-ABAWD-CHK-DT

           INITIALIZE LNK-AA0001C-PARM
           MOVE WSH-FIRST-DAY-OF-REPT-DT  TO LNK-AA0001C-IN-FROM-DATE
                                          WSH-FIRST-DAY-OF-QTR
           MOVE WSH-FIRST-DAY-OF-QTR-MM    TO  WSS-MONTH-NUMBER

           EVALUATE TRUE
               WHEN WSS-RUN-IN-FIRST-QTR
                    SET WSS-BGN-FIRST-QTR     TO TRUE
               WHEN WSS-RUN-IN-SECOND-QTR
                    SET WSS-BGN-SECOND-QTR    TO TRUE
               WHEN WSS-RUN-IN-THIRD-QTR
                    SET WSS-BGN-THIRD-QTR     TO TRUE
               WHEN WSS-RUN-IN-FOURTH-QTR
                    SET WSS-BGN-FOURTH-QTR    TO TRUE
               WHEN OTHER
                    MOVE WSC-INVALID-STATUS TO WSL-CALWIN-ERROR-CODE
                    MOVE 'ERROR CALCULATING REPORTING PERIOD'
                                            TO WSL-MISC-ERROR-TXT
                    SET WSL-TERMINAL        TO TRUE
                    PERFORM 91000-ERROR
           END-EVALUATE

           MOVE WSS-MONTH-NUMBER   TO WSH-FIRST-DAY-OF-QTR-MM
           MOVE WSC-1              TO WSH-FIRST-DAY-OF-QTR-DD

           INITIALIZE LNK-AA0001C-PARM
           MOVE WSH-FIRST-DAY-OF-QTR  TO LNK-AA0001C-IN-FROM-DATE
      **  Subtract a day to get the last day of reporting quarter
           SET LNK-ADD-MONTH-CD TO TRUE
           MOVE WSC-2                  TO LNK-AA0001C-IN-DAY-MN-YR-NUM
      * Subtract one calender day from date
           CALL WSC-AA0001S USING LNK-COMMON-PARMS
                                  LNK-AA0001C-PARM
           END-CALL
           IF LNK-AA0001C-NORMAL-RETURN-CD
              MOVE LNK-AA0001C-OUT-DATE       TO WSH-LAST-DAY-OF-QTR
           ELSE
              MOVE LNK-AA0001C-OUT-RETURN-CD  TO WSL-ERROR-VALUE
              MOVE WSC-ERROR-IN-CALL-CLWIN    TO WSL-CALWIN-ERROR-CODE
              MOVE 'ERROR IN CALLING AA0001S' TO
                                                 WSL-MISC-ERROR-TXT
              SET WSL-TERMINAL                TO TRUE
              PERFORM 91000-ERROR
           END-IF

           INITIALIZE LNK-AA0001C-PARM
           MOVE WSH-LAST-DAY-OF-QTR     TO LNK-AA0001C-IN-FROM-DATE
           SET LNK-LAST-CALENDER-DAY-CD TO TRUE
           CALL WSC-AA0001S USING LNK-COMMON-PARMS
                                  LNK-AA0001C-PARM
           END-CALL
           IF LNK-AA0001C-NORMAL-RETURN-CD
              MOVE LNK-AA0001C-OUT-DATE       TO WSH-LAST-DAY-OF-QTR
           ELSE
              MOVE LNK-AA0001C-OUT-RETURN-CD  TO WSL-ERROR-VALUE
              MOVE WSC-ERROR-IN-CALL-CLWIN    TO WSL-CALWIN-ERROR-CODE
              MOVE 'ERROR IN CALLING AA0001S' TO WSL-MISC-ERROR-TXT
              SET WSL-TERMINAL                TO TRUE
              PERFORM 91000-ERROR
           END-IF

           IF WSH-FIRST-DAY-OF-REPT-MM   = WSC-10 OR
              WSH-FIRST-DAY-OF-REPT-MM   = WSC-11 OR
              WSH-FIRST-DAY-OF-REPT-MM   = WSC-12
              MOVE WSH-FIRST-DAY-OF-REPT-YYYY  TO
                   WSH-FIRST-DAY-OF-FED-FISCAL-YY
           ELSE
              INITIALIZE LNK-AA0001C-PARM
              MOVE WSH-FIRST-DAY-OF-REPT-DT
                     TO LNK-AA0001C-IN-FROM-DATE
              MOVE WSC-1               TO LNK-AA0001C-IN-DAY-MN-YR-NUM
              SET LNK-SUBT-YEAR-CD TO TRUE

              CALL WSC-AA0001S USING LNK-COMMON-PARMS
                                  LNK-AA0001C-PARM
              END-CALL
              IF LNK-AA0001C-NORMAL-RETURN-CD
                 MOVE LNK-AA0001C-OUT-DATE       TO WSH-FIRST-DAY-OF-FFY
              ELSE
                 MOVE LNK-AA0001C-OUT-RETURN-CD  TO WSL-ERROR-VALUE
                 MOVE WSC-ERROR-IN-CALL-CLWIN   TO WSL-CALWIN-ERROR-CODE
                 MOVE 'ERROR IN CALLING AA0001S' TO WSL-MISC-ERROR-TXT
                 SET WSL-TERMINAL                TO TRUE
                 PERFORM 91000-ERROR
              END-IF
           END-IF
           MOVE WSC-01 TO  WSH-FIRST-DAY-OF-FED-FISCAL-DD
           MOVE WSC-OCT TO WSH-FIRST-DAY-OF-FED-FISCAL-MM

           MOVE WSH-FIRST-DAY-OF-FFY  TO   WSH-LAST-DAY-OF-FFY

           INITIALIZE LNK-AA0001C-PARM
           MOVE WSH-LAST-DAY-OF-FFY
                  TO LNK-AA0001C-IN-FROM-DATE
           MOVE WSC-1               TO LNK-AA0001C-IN-DAY-MN-YR-NUM
           SET LNK-ADD-YEAR-CD TO TRUE

           CALL WSC-AA0001S USING LNK-COMMON-PARMS
                               LNK-AA0001C-PARM
           END-CALL
           IF LNK-AA0001C-NORMAL-RETURN-CD
              MOVE LNK-AA0001C-OUT-DATE       TO WSH-LAST-DAY-OF-FFY
           ELSE
              MOVE LNK-AA0001C-OUT-RETURN-CD  TO WSL-ERROR-VALUE
              MOVE WSC-ERROR-IN-CALL-CLWIN   TO WSL-CALWIN-ERROR-CODE
              MOVE 'ERROR IN CALLING AA0001S' TO WSL-MISC-ERROR-TXT
              SET WSL-TERMINAL                TO TRUE
              PERFORM 91000-ERROR
           END-IF

           MOVE WSC-30  TO  WSH-LAST-DAY-OF-FED-FISCAL-DD
           MOVE WSC-SEP TO  WSH-LAST-DAY-OF-FED-FISCAL-MM

      *Get Reporting month(YYYYMM).
           MOVE WSH-LAST-DAY-OF-REPT-DT    TO WSH-TEMP-DT1
           MOVE WSH-TEMP-DT1-MM            TO WSH-REPORTING-MONTH-MM
           MOVE WSH-TEMP-DT1-CCYY          TO WSH-REPORTING-MONTH-CCYY
           .

      *****************************************************************
      *Following paragraph CALLs the date subroutine AA0001S
      *****************************************************************
       01110-CALL-AA0001S.
           MOVE '01110-CALL-AA0001S'           TO WSL-PARA-NAME
      * Perform date calculation
           CALL WSC-AA0001S USING  LNK-COMMON-PARMS
                                   LNK-AA0001S-VARIABLES
           END-CALL
           IF LNK-AA0001C-NORMAL-RETURN-CD
              CONTINUE
           ELSE
              MOVE LNK-AA0001C-OUT-RETURN-CD
                TO WSL-ERROR-VALUE
              MOVE WSC-ERROR-IN-CALL-CLWIN     TO WSL-CALWIN-ERROR-CODE
              MOVE "ERROR IN CALLING ROUTINE AA0001S"
                TO WSL-MISC-ERROR-TXT
              SET  WSL-TERMINAL                TO TRUE
              PERFORM 91000-ERROR
           END-IF
           .
      ****************************************************************
      *The following paragraph downloads all the activity types
      *from the reference table RT_ACT_TYP
      ****************************************************************
       03130-DOWNLOAD-ACTIVE-TYPE.
           MOVE '03130-DOWNLOAD-ACTIVE-TYPE' TO WSL-PARA-NAME

      ****************************************************************
      *                        SQL#  30
      ****************************************************************
      * Select details from activity type reference table
           EXEC SQL
              SELECT
                  NVL(ACT_TYP_CD,' ')
                 ,NVL(ACT_TYP_DESC,' ')
                 ,USR_SELCT_SW
                 ,TO_CHAR(EFF_BGN_DT,'YYYY-MM-DD')
                 ,TO_CHAR(NVL(EFF_END_DT, F_HIGH_DT()),'YYYY-MM-DD')
              INTO
                 :WSD-RT-ACT-TYP
              FROM
                 RT_ACT_TYP
              WHERE
                     EFF_BGN_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')

           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-NOT-FOUND
                    CONTINUE
               WHEN OTHER
                    MOVE SQLCODE               TO WSL-ERROR-VALUE
                    MOVE WSC-ERROR-SELECTING-CLWIN
                      TO WSL-CALWIN-ERROR-CODE
                    MOVE 'ERROR SELECTING FROM RT_ACT_TYP TABLE'
                    TO WSL-MISC-ERROR-TXT
                    SET  WSL-TERMINAL          TO TRUE
                    PERFORM 91000-ERROR
           END-EVALUATE
           .

      ****************************************************************
      *The following paragraph opens the output file
      ****************************************************************
       02000-OPEN.
           MOVE '02000-OPEN'                   TO WSL-PARA-NAME

           OPEN OUTPUT MRA037E-ABAWD-QUARTERLY-FILE
           EVALUATE WSH-MRA037E-FILE-STATUS
              WHEN WSC-FILE-OK
                   CONTINUE
              WHEN OTHER
                   MOVE WSC-ERROR-OPENING-CLWIN
                                  TO WSL-CALWIN-ERROR-CODE
                   STRING
                      "ERROR OPENING MRA037E-ABAWD-QUARTERLY-FILE "
                            WSH-MRA037E-FILE-STATUS
                      INTO  WSL-MISC-ERROR-TXT
                   END-STRING
                   SET  WSL-TERMINAL            TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE

           OPEN OUTPUT MRB037E-FSET-QUARTERLY-FILE
           EVALUATE WSH-MRB037E-FILE-STATUS
              WHEN WSC-FILE-OK
                    CONTINUE
              WHEN OTHER
                   MOVE WSC-ERROR-OPENING-CLWIN
                        TO WSL-CALWIN-ERROR-CODE
                   STRING
                       "ERROR OPENING MRB037E-FSET-QUARTERLY-FILE  "
                            WSH-MRB037E-FILE-STATUS
                      INTO  WSL-MISC-ERROR-TXT
                   END-STRING
                   SET  WSL-TERMINAL            TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE

           OPEN INPUT MR0017E-CSLOAD-MOVEMNT-FILE
           IF WSH-MR0017E-FILE-STATUS = WSC-FILE-OK
              CONTINUE
           ELSE
              MOVE WSC-ERROR-OPENING-CLWIN TO WSL-CALWIN-ERROR-CODE
              STRING "ERROR OPENING MR0017E-CSLOAD-MOVEMNT-FILE "
                      WSH-MR0017E-FILE-STATUS
                INTO  WSL-MISC-ERROR-TXT
              END-STRING
              SET  WSL-TERMINAL            TO TRUE
              PERFORM 91000-ERROR
           END-IF
           .

      *=================================================================
      *    The following paragraph opens the driving cursor
      *              MR0037B-AG_ELIG-RSLT cursor.
      ***************************************************************
       02010-OPEN-AG-RSLT-CUR.
           MOVE '02010-OPEN-AG-RSLT-CUR' TO WSL-PARA-NAME

           EXEC SQL
              OPEN MR0037A_ELIG_RSLT_CUR
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                   CONTINUE
              WHEN OTHER
                   MOVE SQLCODE TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-OPENING-CUR-CLWIN
                     TO WSL-CALWIN-ERROR-CODE
                   MOVE 'ERROR OPENING MR0037A_ELIG_RSLT_CUR CURSOR'
                     TO WSL-MISC-ERROR-TXT
                   SET WSL-TERMINAL TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE
           .

      *=================================================================
      *    The following paragraph opens the Cursor
      *              MRB037E_ES_ASG_ACT_CUR cursor.
      ***************************************************************
       02020-ES-ASG-ACT-OPEN-CUR.
           MOVE '02020-ES-ASG-ACT-OPEN-CUR' TO WSL-PARA-NAME

           EXEC SQL
              OPEN MRB037E_ES_ASG_ACT_CUR
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                   CONTINUE
              WHEN OTHER
                   MOVE SQLCODE TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-OPENING-CUR-CLWIN
                     TO WSL-CALWIN-ERROR-CODE
                   MOVE 'ERROR OPENING MRB037E_ES_ASG_ACT_CUR CURSOR'
                     TO WSL-MISC-ERROR-TXT
                   SET  WSL-TERMINAL TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE
           .

      ****************************************************************
      *The following paragraph performs various other paragraphs
      *to write the file containing the reporting period.
      ****************************************************************
       03000-MAIN.
           MOVE '03000-MAIN' TO WSL-PARA-NAME

           PERFORM 03130-DOWNLOAD-ACTIVE-TYPE
           PERFORM 20000-READ-PROCESS  UNTIL WSS-END-OF-FILE
           PERFORM 03200-CREATE-MR0099E
           .

      *****************************************************************
      *The following paragraph contains the main application logic.
      *****************************************************************
       10000-APPLICATION-LOGIC.
           MOVE '10000-APPLICATION-LOGIC'      TO WSL-PARA-NAME

           PERFORM 20600-GET-INDV-NAME
           PERFORM 20700-GET-CASE-NAME

      ***  Process the row for the MRA037E extract.   
      ***  Work Registrants only as of 33371 STAT 47.
           IF WSH-WRK-REG-IND = WSC-YES

               MOVE WSC-NO  TO  WSH-REC-FOUND1
                                WSH-REC-FOUND2
                                WSH-REC-FOUND3
                                WSH-ABAWD-EXMT-SW
               PERFORM 10600-ABAWD-INDV-PROCESS

               IF WSH-REC-FOUND1  = WSC-YES
               OR WSH-REC-FOUND2  = WSC-YES
               OR WSH-REC-FOUND3  = WSC-YES
               OR WSH-WRK-REG-IND = WSC-YES
                  PERFORM 10760-GET-BGN-MNTH-SW
      ***         Compare YYYY-MM to YYYY-MM
      ***         EDBC run must be in data month
                  IF WSH-AG-EFF-START-DT(1:7) = 
                     WSH-FIRST-DAY-OF-REPT-DT(1:7)
                  AND WSH-WRK-REG-IND = WSC-YES
                      PERFORM 12000-STAT47-ABAWD-CT
                  END-IF
                  PERFORM 50000-POPULATE-MRA037E-EXT
               END-IF
           END-IF

           IF WSH-ABAWD-IND = WSC-EXM
               EVALUATE TRUE
                   WHEN WSH-WRK-REG-IND = WSC-YES
                       MOVE WSC-YES TO WSH-ABAWD-IND

                   WHEN WSH-WRK-REG-IND = WSC-EXM
                       MOVE WSC-NO TO WSH-ABAWD-IND

                   WHEN OTHER
                       MOVE WSC-NO TO WSH-ABAWD-IND
               END-EVALUATE
           END-IF 

      ***  Process the row for the MRB037E extract
           IF WSH-WRK-REG-IND = WSC-YES
               PERFORM 02020-ES-ASG-ACT-OPEN-CUR
               SET WSS-BGN-OF-CUR2 TO TRUE
               PERFORM 10700-FSET-INDV-PROCESS UNTIL WSS-END-OF-CUR2
           END-IF
           .

      ******************************************************************
      *The following paragraph determines eligiblity status code and
      *performs the ABAWD individuals
      ******************************************************************
       10600-ABAWD-INDV-PROCESS.
           MOVE '10600-ABAWD-INDV-PROCESS'      TO WSL-PARA-NAME

           IF WSH-ELIG-STS-CD = WSC-PASS
              INITIALIZE WSH-ABAWD-EXMT-DT
              IF WSH-ABAWD-IND  = WSC-EXM
                 PERFORM 10650-AG-INDV-TM-LIM-CLK-EXMT
                 IF WSH-REC-FOUND1 = WSC-YES OR
                    WSH-REC-FOUND3 = WSC-YES
                    IF WSH-MR0017-TERMINATED-SW = WSC-YES
                       PERFORM 10675-AG-INDV-ELIG-RSN
                    ELSE
                       MOVE WSC-NO TO WSH-ELIG-STS-FAIL-SW
                       PERFORM 10660-FS-DISCONT-DT
                       IF WSH-ELIG-STS-FAIL-SW = WSC-YES
                          PERFORM 10670-AG-INDV-ELIG-RSN
                       END-IF
                    END-IF
                 END-IF
              ELSE
                 MOVE WSC-YES  TO WSH-REC-FOUND2
                 IF WSH-MR0017-TERMINATED-SW = WSC-YES
                    PERFORM 10675-AG-INDV-ELIG-RSN
                 ELSE
                    MOVE WSC-NO TO WSH-ELIG-STS-FAIL-SW
                    PERFORM 10660-FS-DISCONT-DT
                    IF WSH-ELIG-STS-FAIL-SW = WSC-YES
                       PERFORM 10670-AG-INDV-ELIG-RSN
                    END-IF
                 END-IF
              END-IF
           ELSE
               MOVE SPACES TO WSH-WRK-REG-IND
                              WSH-ABAWD-IND
           END-IF
           .

      ******************************************************************
      * This paragraph checks time clock exemptions.                    
      * 43 Individual Living in an Area With an ABAWD Waiver.           
      * 65 County Wide ABAWD waiver                                     
      *                                                                 
      * ABAWD Only Exemption codes for reference                        
      * Descriptions from RT_TM_CLK_EXMT                                
      * ABAWD Phase 1                                                   
      * 31 Pregnant and Cannot Work                                     
      * 37 Incapable of Working                                         
      * 42 Dependent Child Under 18 in FS Household                     
      *                                                                 
      * ABAWD Phase 1C                                                  
      * 27 Disabled                                                     
      * 41 Domestic Violence                                            
      * 86 Chronically Homeless                                         
      * 88 Unfit for Work                                               
      *                                                                 
      * When adding new exemptions be sure to set the switch to suppress
      * fifteen percent exemptions (WSS-FPE-NOPE) to true.              
      ******************************************************************
       10650-AG-INDV-TM-LIM-CLK-EXMT.
           MOVE '10650-AG-INDV-TM-LIM-CLK-EXMT'      TO WSL-PARA-NAME

           SET WSS-FPE-YEP TO TRUE

      * Special code for period when timeclocks were not set.
      * WSC-EXM-CD-31 Pregnant and cannot work
      * WSC-EXM-CD-42 Dependent Child Under 18 in FS Household.

      ***  Pregnancy or Living in a CalFresh Household with a 
      ***  child under eighteen
      ***  No need to run this query unless the ABAWD ind is E

      ***  PREGNANCY
           EXEC SQL
               SELECT DISTINCT :WSC-NO
                 INTO :WSH-ABAWD-IND
               FROM INDV_PREG
               WHERE CWIN = :WSH-AG-INDV-CWIN
                 AND EFF_BGN_DT <= 
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(EFF_END_DT,F_HIGH_DT) >=
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(PREG_END_DT,F_HIGH_DT) >=
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                  MOVE WSC-NO  TO WSH-ABAWD-IND
                                  WSH-ABAWD-EXMT-SW
                  SET WSS-FPE-NOPE TO TRUE

              WHEN WSC-NOT-FOUND
                  CONTINUE

              WHEN OTHER
                MOVE SQLCODE          TO WSL-ERROR-VALUE
                MOVE WSC-ERROR-SELECTING-CLWIN
                  TO WSL-CALWIN-ERROR-CODE
                STRING 'ERROR SELECTING FROM INDV_PREG TABLE'
                       ' CS-ID: ' WSH-CS-ID 
                       ' CWIN: ' WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                SET  WSL-TERMINAL          TO TRUE
                PERFORM 91000-ERROR
           END-EVALUATE

      ***  CHILD UNDER 18 IN HH
      ***  The prior IF statement may set the ABAWD indicator to N
      ***  No need to run this query unless the ABAWD ind is E
           IF WSH-ABAWD-IND <> WSC-NO
             EXEC SQL 
               SELECT DISTINCT :WSC-NO
                 INTO :WSH-ABAWD-IND
                 FROM AG_INDV_ELIG_RSLT A
                     ,AG_ELIG_RSLT B
                 WHERE A.CS_ID        = :WSH-CS-ID
                   AND B.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                   AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
                   AND B.DELT_RCRD_SW = :WSC-NO
                   AND B.AG_EFF_START_DT <= 
                       TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                   AND NVL(B.AG_EFF_END_DT,F_HIGH_DT) >=
                       TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                   AND A.CS_ID    = B.CS_ID
                   AND A.EDBC_SEQ = B.EDBC_SEQ
                   AND (   (A.PRM_PRTCP_STS_CD IN
                           (:WSC-IN,:WSC-MI,:WSC-IE,:WSC-SN)
                           )
                        OR (    A.PRM_PRTCP_STS_CD = :WSC-EX
                            AND EXISTS
                               (SELECT 1
                                FROM AG_INDV_ELIG_RSN C
                                WHERE C.CS_ID    = A.CS_ID
                                  AND C.EDBC_SEQ = A.EDBC_SEQ
                                  AND C.CWIN     = A.CWIN
                                  AND C.RSN_COD  = :WSC-FAS051)
                           )
                       )
                   AND A.INDV_TYP_CD = :WSC-CHILD
             END-EXEC

             EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    MOVE WSC-NO  TO WSH-ABAWD-IND
                                    WSH-ABAWD-EXMT-SW
                    SET WSS-FPE-NOPE TO TRUE

                WHEN WSC-NOT-FOUND
                  CONTINUE

                 WHEN OTHER
                   MOVE SQLCODE           TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-SELECTING-CLWIN
                     TO WSL-CALWIN-ERROR-CODE
                   STRING 'ERROR SELECTING CHILD IN HH QUERY'
                          ' CS-ID: ' WSH-CS-ID 
                          ' CWIN: ' WSH-AG-INDV-CWIN
                     DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                   SET  WSL-TERMINAL          TO TRUE
                   PERFORM 91000-ERROR
             END-EVALUATE

      **PTEST 10699 - This code rewritten for PPM 33371 in 2016
      **   If the ABAWD ind was changed to N in the preceeding code
      **   then the following code can be skipped.
           IF WSH-ABAWD-IND = WSC-EXM
               MOVE WSH-FIRST-DAY-OF-REPT-DT
                 TO WSH-START-AOE-DT

               INITIALIZE WSH-EXMT-CD
                          WSS-AG-TIME-CLK-CUR-SW

               PERFORM 11900-OPEN-AG-TIME-CLK-CUR

      ***      Fetch the first row.
               PERFORM 11920-FETCH-AG-TIME-CLK-CUR

      ***      Not found on the first row.
               IF WSS-END-AG-TIME-CLK-CUR
                   EVALUATE TRUE
      ***              QUARTERLY REPORTING (OBSOLETE)
                       WHEN WSH-INC-RPT-MTHD-IND = WSC-Q
                          PERFORM 11200-GET-15-PCT-ABAWD-SW

      ***              SAR REPORTING
                       WHEN WSH-INC-RPT-MTHD-IND = WSC-S
                          PERFORM 11200-GET-15-PCT-ABAWD-SW

      ***              MONTHLY REPORTING
                       WHEN OTHER
                          PERFORM 11100-GET-15-PCT-ABAWD-SW
                   END-EVALUATE
               ELSE
      ***          Check each exemption
                   PERFORM 11000-PROCESS-EXMT
                       UNTIL WSS-END-AG-TIME-CLK-CUR
               END-IF

               PERFORM 11940-CLOSE-AG-TIME-CLK-CUR
           END-IF
           .

      *****************************************************************
      * This Process sets the Discontinue switch if the individual is
      * discontinued
      ******************************************************************
      *                      SQL# 50
      ******************************************************************
       10660-FS-DISCONT-DT.
           MOVE '10660-FS-DISCONT-DT'      TO WSL-PARA-NAME

           INITIALIZE
                       WSD-ELIG-STS-CD     OF WSD-AG-INDV-ELIG-RSLT
                       WSH-FS-ELIG-STS-CD
      ******************************************************************
      * CR4667 - added edbc_seq desc to the order by clause.
      ******************************************************************
           EXEC SQL
              SELECT
                   B.ELIG_STS_CD
                INTO
                   :WSD-AG-INDV-ELIG-RSLT.WSD-ELIG-STS-CD
                   :WSD-AG-INDV-ELIG-RSLT.WSD-ELIG-STS-CD-I
                FROM
                   AG_ELIG_RSLT      A
                  ,AG_INDV_ELIG_RSLT B
                  ,AG_AUTH  C
                WHERE
                       A.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                   AND A.EDBC_SEQ     = :WSH-FUT-EDBC-SEQ
                   AND A.DELT_RCRD_SW = :WSC-NO
                   AND A.PGM_TYP_CD   = B.PGM_TYP_CD
                   AND A.EDBC_SEQ     = B.EDBC_SEQ
                   AND B.CWIN         = :WSH-AG-INDV-CWIN
                   AND C.CS_ID        = A.CS_ID
                   AND A.CS_ID        = B.CS_ID
                   AND C.PGM_TYP_CD   = A.PGM_TYP_CD
                   AND C.EDBC_SEQ     = A.EDBC_SEQ
                   AND NVL(C.CNFRM_DT, F_HIGH_DT()) <=
                       TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                   AND A.AG_EFF_START_DT <=
                       TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                   AND NVL(A.AG_EFF_END_DT, F_HIGH_DT()) >=
                       TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                ORDER BY A.PAY_MNTH DESC, A.EDBC_SEQ DESC

           END-EXEC

           MOVE WSH-CS-ID                      TO WSL-IDENTIFIER
           SET  WSL-CS                         TO TRUE
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-MULTIPLE-ROWS
                   MOVE WSD-ELIG-STS-CD OF WSD-AG-INDV-ELIG-RSLT
                                        TO WSH-FS-ELIG-STS-CD
                   IF WSH-FS-ELIG-STS-CD = WSC-PASS
                      MOVE WSC-NO TO WSH-FS-DISC-SW
                   ELSE
                      MOVE WSC-YES TO WSH-ELIG-STS-FAIL-SW
                   END-IF
              WHEN WSC-NOT-FOUND
                   MOVE WSC-NO TO WSH-FS-DISC-SW
              WHEN OTHER
                   MOVE SQLCODE            TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-SELECTING-CLWIN
                       TO WSL-CALWIN-ERROR-CODE
                   MOVE 'ERROR IN SELECTING 10660-FS-DISCONT-DT '
                        TO WSL-MISC-ERROR-TXT
                   SET  WSL-TERMINAL       TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE
           .
      ******************************************************************
      *This Process checks for the Reason code if the individual is
      *discontinued
      ******************************************************************
      *                       SQL# 60
      ******************************************************************
       10670-AG-INDV-ELIG-RSN.
           MOVE '10670-AG-INDV-ELIG-RSN'     TO WSL-PARA-NAME

           INITIALIZE  WSD-RSN-COD           OF WSD-AG-INDV-ELIG-RSN
                       WSH-RSN-CD
                       WSH-FS-DISC-SW
                       WSH-FS-DISC-DT
      ******************************************************************
      * CR4667 - Per DBA's add CS_ID to WHERE clause
      ******************************************************************
           EXEC SQL
              SELECT
                 RSN_COD
              INTO
                 :WSD-AG-INDV-ELIG-RSN.WSD-RSN-COD
                 :WSD-AG-INDV-ELIG-RSN.WSD-RSN-COD-I
              FROM
                 AG_INDV_ELIG_RSN
              WHERE
                     CWIN        = :WSH-AG-INDV-CWIN
                 AND CS_ID       = :WSH-CS-ID
                 AND PGM_TYP_CD  = :WSH-PGM-TYP-CD
                 AND EDBC_SEQ    = :WSH-EDBC-SEQ

           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-MULTIPLE-ROWS
                    MOVE WSH-LAST-DAY-OF-REPT-DT TO WSH-FS-DISC-DT
                    MOVE WSD-RSN-COD             OF WSD-AG-INDV-ELIG-RSN
                                                 TO WSH-RSN-CD

                    IF WSH-RSN-CD =  WSC-FAN006  OR
                       WSH-RSN-CD =  WSC-FAN018  OR
                       WSH-RSN-CD =  WSC-FAN019  OR
                       WSH-RSN-CD =  WSC-FAN049
                       MOVE WSC-DISC-TM    TO WSH-FS-DISC-SW
                    ELSE
                       MOVE WSC-DISC-OTHER TO WSH-FS-DISC-SW
                    END-IF
              WHEN WSC-NOT-FOUND
                   MOVE WSC-NO             TO  WSH-FS-DISC-SW
              WHEN OTHER
                   MOVE SQLCODE            TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-SELECTING-CLWIN
                       TO WSL-CALWIN-ERROR-CODE
                   MOVE
                    'ERROR IN SELECTING 10670-AG-INDV-ELIG-RSN '
                                           TO WSL-MISC-ERROR-TXT
                   SET  WSL-TERMINAL       TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE
           .

      ******************************************************************
      *This Process checks for the Reason code if the individual is
      *discontinued
      ******************************************************************
      *                       SQL#70
      ******************************************************************
       10675-AG-INDV-ELIG-RSN.
           MOVE '10675-AG-INDV-ELIG-RSN'       TO WSL-PARA-NAME
      **PTEST 10699
           INITIALIZE  WSD-RSN-COD      OF WSD-AG-INDV-ELIG-RSN
                       WSH-RSN-CD
                       WSH-FS-DISC-SW
                       WSH-FS-DISC-DT
      ******************************************************************
           EXEC SQL
              SELECT
                 RSN_COD
              INTO
                  :WSD-AG-INDV-ELIG-RSN.WSD-RSN-COD
                  :WSD-AG-INDV-ELIG-RSN.WSD-RSN-COD-I
              FROM
                  AG_INDV_ELIG_RSN
              WHERE
                     CWIN        = :WSH-AG-INDV-CWIN
                 AND CS_ID       = :WSH-CS-ID
                 AND PGM_TYP_CD  = :WSH-PGM-TYP-CD
                 AND EDBC_SEQ    = :WSH-FUT-EDBC-SEQ
           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-MULTIPLE-ROWS
                    MOVE WSH-MR0017-TERMINATED-DT TO WSH-FS-DISC-DT
                    MOVE WSD-RSN-COD       OF WSD-AG-INDV-ELIG-RSN
                                           TO WSH-RSN-CD
                    IF WSH-RSN-CD =  WSC-FAN006    OR
                       WSH-RSN-CD =  WSC-FAN018    OR
                       WSH-RSN-CD =  WSC-FAN019    OR
                       WSH-RSN-CD =  WSC-FAN049
                       MOVE WSC-DISC-TM    TO WSH-FS-DISC-SW
                    ELSE
                       MOVE WSC-DISC-OTHER TO WSH-FS-DISC-SW
                    END-IF
              WHEN WSC-NOT-FOUND
                   MOVE WSH-MR0017-TERMINATED-DT TO WSH-FS-DISC-DT
                   MOVE WSC-DISC-OTHER TO  WSH-FS-DISC-SW
              WHEN OTHER
                   MOVE SQLCODE            TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-SELECTING-CLWIN
                       TO WSL-CALWIN-ERROR-CODE
                   MOVE
                     'ERROR IN SELECTING 10675-AG-INDV-ELIG-RSN'
                                           TO WSL-MISC-ERROR-TXT
                   SET  WSL-TERMINAL       TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE
           .

      ******************************************************************
      ** This paragraph provides all the FSET individual was
      *                 in during the quarter.
      ******************************************************************
       10700-FSET-INDV-PROCESS.
           MOVE '10700-FSET-INDV-PROCESS'       TO WSL-PARA-NAME

           INITIALIZE  WSD-ACT-ID        OF WSD-ES-ASG-ACT
                       WSD-ASG-ACT-ID    OF WSD-ES-ASG-ACT
                       WSD-ACTL-BGN-DT   OF WSD-ES-ASG-ACT
                       WSD-ACTL-END-DT   OF WSD-ES-ASG-ACT
                       WSH-ACT-ID
                       WSH-ASG-ACT-ID
                       WSH-ACT-ACTL-BGN-DT
                       WSH-ACT-ACTL-END-DT
      ******************************************************************
      * Fetch next row from cursor MRB037E_ES_ASG_ACT_CUR
           EXEC SQL
             FETCH MRB037E_ES_ASG_ACT_CUR
              INTO
                :WSD-ES-ASG-ACT.WSD-ACT-ID
                :WSD-ES-ASG-ACT.WSD-ACT-ID-I
               ,:WSD-ES-ASG-ACT.WSD-ASG-ACT-ID
                :WSD-ES-ASG-ACT.WSD-ASG-ACT-ID-I
               ,:WSD-ES-ASG-ACT.WSD-ACTL-BGN-DT
                :WSD-ES-ASG-ACT.WSD-ACTL-BGN-DT-I
               ,:WSD-ES-ASG-ACT.WSD-ACTL-END-DT
                :WSD-ES-ASG-ACT.WSD-ACTL-END-DT-I
           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK

                   MOVE WSD-ACT-ID             OF  WSD-ES-ASG-ACT
                                               TO  WSH-ACT-ID
                   MOVE WSD-ASG-ACT-ID         OF  WSD-ES-ASG-ACT
                                               TO  WSH-ASG-ACT-ID
                   MOVE WSD-ACTL-BGN-DT        OF  WSD-ES-ASG-ACT
                                               TO  WSH-ACT-ACTL-BGN-DT
                   MOVE WSH-ACT-ACTL-BGN-MM    TO  WSH-ACTL-BGN-MM
                   MOVE WSH-ACT-ACTL-BGN-DD    TO  WSH-ACTL-BGN-DD
                   MOVE WSH-ACT-ACTL-BGN-YYYY  TO  WSH-ACTL-BGN-YYYY
                   MOVE WSD-ACTL-END-DT        OF  WSD-ES-ASG-ACT
                                               TO  WSH-ACT-ACTL-END-DT

                   PERFORM 10720-GET-ES-PGM-ACT
              WHEN WSC-NOT-FOUND
                    SET WSS-END-OF-CUR2 TO TRUE
                    PERFORM 90150-CLOSE-CUR
              WHEN OTHER
                   MOVE SQLCODE            TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-SELECTING-CLWIN
                       TO WSL-CALWIN-ERROR-CODE
                   MOVE 'ERROR FETCHING MR0037B_ES_ASG_ACT_CUR CURSOR '
                        TO WSL-MISC-ERROR-TXT
                   SET  WSL-TERMINAL       TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE
           .

      *****************************************************************
      *This Process gets Activity type code and Activity Description
      *from ES Pgm Activity for an Individual
      ******************************************************************
      *                        SQL# 95
      ******************************************************************
       10720-GET-ES-PGM-ACT.
           MOVE '10720-GET-ES-PGM-ACT'       TO WSL-PARA-NAME

           INITIALIZE   WSD-TYP-CD           OF WSD-ES-PGM-ACT
                        WSD-ACT-DESC         OF WSD-ES-PGM-ACT
                        WSH-ES-TYP-CD
                        WSH-ES-PGM-ACT-DESC
      ******************************************************************
           EXEC SQL
              SELECT
                  A.TYP_CD
                 ,A.ACT_DESC
              INTO
                :WSD-ES-PGM-ACT.WSD-TYP-CD
                :WSD-ES-PGM-ACT.WSD-TYP-CD-I
               ,:WSD-ES-PGM-ACT.WSD-ACT-DESC
                :WSD-ES-PGM-ACT.WSD-ACT-DESC-I

              FROM
                 ES_PGM_ACT A
              WHERE
                     A.ACT_ID      = :WSH-ACT-ID
                 AND A.PGM_TYP_CD  = :WSC-FSET
                 AND A.ACT_BGN_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(A.ACT_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')

           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE
           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
              WHEN WSC-MULTIPLE-ROWS
                   MOVE WSD-TYP-CD      OF WSD-ES-PGM-ACT
                                        TO WSH-ES-TYP-CD
                   MOVE WSD-ACT-DESC    OF WSD-ES-PGM-ACT
                                        TO WSH-ES-PGM-ACT-DESC
                   PERFORM 10740-GET-NEW-PARTP-SW
              WHEN WSC-NOT-FOUND
                   CONTINUE
              WHEN OTHER
                MOVE SQLCODE            TO WSL-ERROR-VALUE
                MOVE WSC-ERROR-SELECTING-CLWIN
                    TO WSL-CALWIN-ERROR-CODE
                STRING 'ERROR SELECTING TYP_CD FROM ES_PGM_ACTIVITY'
                       ' CS-ID: ' WSH-CS-ID
                       ' CWIN: ' WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                SET  WSL-TERMINAL       TO TRUE
                PERFORM 91000-ERROR
           END-EVALUATE
           .

      *****************************************************************
       10740-GET-NEW-PARTP-SW.

           PERFORM 10750-GET-NEW-PARTPT-SW
           PERFORM 10770-GET-NEW-PLACEMENT-SW
           PERFORM 30400-GET-JOB-RETENTION
           PERFORM 50010-POPULATE-MRB037E-EXT
           .
      ******************************************************************
      * This process sets Switch depending on wheather the Individual is
      *Participating in activity for the first time in a Fiscal Year
      ******************************************************************
      *                         SQL# 100
      ******************************************************************
      ** CR4667 - Per DBA's removed order by a.act_id desc and add
      ** distinct to select
      ******************************************************************

       10750-GET-NEW-PARTPT-SW.
           MOVE '10750-GET-NEW-PARTPT-SW'     TO WSL-PARA-NAME

           INITIALIZE WSD-CWIN  OF WSD-ES-ASG-ACT
                      WSH-NEW-PARTC-SW

      ***Check for an actual begin date in the reporting period 
           EXEC SQL  
              SELECT 
                    DISTINCT A.CWIN
              INTO
                 :WSD-ES-ASG-ACT.WSD-CWIN
                 :WSD-ES-ASG-ACT.WSD-CWIN-I
               FROM
                  ES_ASG_ACT A
                 ,ES_PGM_ACT B
              WHERE
                     A.CWIN       = :WSH-AG-INDV-CWIN
                 AND A.ACT_ID     = B.ACT_ID
                 AND A.PGM_TYP_CD = B.PGM_TYP_CD
                 AND A.ASG_ACT_ID = :WSH-ASG-ACT-ID
                 AND A.ACTL_BGN_DT >=
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND A.ACTL_BGN_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(A.ACTL_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND EXISTS 
                  (SELECT 1 
                   FROM RT_ACT_TYP C
                   WHERE C.ACT_TYP_CD = :WSH-ES-TYP-CD
                     AND C.EFF_BGN_DT <=
                         TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                     AND NVL(C.EFF_END_DT, F_HIGH_DT()) >=
                         TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD'))
           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE
           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                 IF WSH-AG-INDV-CWIN <> WSH-AG-INDV-CWIN-HOLD
                    MOVE WSC-YES TO  WSH-NEW-PARTC-SW
                    MOVE WSH-AG-INDV-CWIN TO WSH-AG-INDV-CWIN-HOLD
                 ELSE
                    MOVE WSC-NO  TO  WSH-NEW-PARTC-SW 
                 END-IF
              WHEN WSC-NOT-FOUND
                 MOVE WSC-NO  TO  WSH-NEW-PARTC-SW
              WHEN OTHER
                 MOVE SQLCODE            TO WSL-ERROR-VALUE
                 MOVE WSC-ERROR-SELECTING-CLWIN
                     TO WSL-CALWIN-ERROR-CODE
                 MOVE 'ERROR SELECTING 10750-GET-NEW-PARTPT-SW '
                      TO WSL-MISC-ERROR-TXT
                 SET  WSL-TERMINAL       TO TRUE
                 PERFORM 91000-ERROR
           END-EVALUATE

      *  Exclude participation earlier in the fiscal year.  
      *                         SQL# 105
           EXEC SQL  
              SELECT 
                    DISTINCT A.CWIN
              INTO
                 :WSD-ES-ASG-ACT.WSD-CWIN
                 :WSD-ES-ASG-ACT.WSD-CWIN-I
               FROM
                  ES_ASG_ACT A
                 ,ES_PGM_ACT B
                 ,RT_ACT_TYP C
              WHERE
                     A.CWIN       = :WSH-AG-INDV-CWIN
                 AND A.ACT_ID     = B.ACT_ID
                 AND A.PGM_TYP_CD = B.PGM_TYP_CD
                 AND C.ACT_TYP_CD = :WSH-ES-TYP-CD
                 AND A.ASG_ACT_ID < :WSH-ASG-ACT-ID
                 AND A.ACTL_BGN_DT <
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND A.ACTL_BGN_DT >=
                     TO_DATE(:WSH-FIRST-DAY-OF-FFY-X,'YYYY-MM-DD')
                 AND EXISTS 
                 (SELECT 1 
                  FROM RT_ACT_TYP C
                  WHERE C.ACT_TYP_CD = :WSH-ES-TYP-CD
                    AND C.EFF_BGN_DT <
                      TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                    AND NVL(C.EFF_END_DT, F_HIGH_DT()) >=
                      TO_DATE(:WSH-FIRST-DAY-OF-FFY-X,'YYYY-MM-DD'))
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                   MOVE WSC-NO   TO  WSH-NEW-PARTC-SW
              WHEN WSC-NOT-FOUND
                   CONTINUE
              WHEN OTHER
                   MOVE SQLCODE            TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-SELECTING-CLWIN
                       TO WSL-CALWIN-ERROR-CODE
                   MOVE 'ERROR SELECTING 10750-GET-NEW-PARTPT-SW '
                        TO WSL-MISC-ERROR-TXT
                   SET  WSL-TERMINAL       TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE
           .

      ******************************************************************
      *                         SQL# 110
      ******************************************************************
      ** CR4667 - Per DBA's removed order by a.act_id desc and add
      ** distinct to select
      ******************************************************************

       10760-GET-BGN-MNTH-SW.
           MOVE '10760-GET-BGN-MNTH-SW'       TO WSL-PARA-NAME

           INITIALIZE WSD-CWIN OF WSD-INDV-TM-LIM-CLK
                      WSH-MNTH-BGN-SW
           EXEC SQL
              SELECT DISTINCT
                 CWIN
              INTO
                :WSD-INDV-TM-LIM-CLK.WSD-CWIN
                :WSD-INDV-TM-LIM-CLK.WSD-CWIN-I
              FROM
                 INDV_TM_LIM_CLK
              WHERE
                     CWIN            = :WSH-AG-INDV-CWIN
                 AND CLK_STS_BGN_DT >=
                     TO_DATE(:WSH-FIRST-DAY-OF-PRV-RPT-DT,'YYYY-MM-DD')
                 AND CLK_STS_END_DT <
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND CRT_DTM <
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND CLK_STS_CD     IN  (:WSC-TK,:WSC-NW,:WSC-CO)
                 AND CLK_TYP_CD     IN  ( :WSC-A1
                                         ,:WSC-A2
                                         ,:WSC-A3
                                         ,:WSC-A4
                                         ,:WSC-A5
                                         ,:WSC-A6
                                         ,:WSC-A7
                                         ,:WSC-A8
                                         ,:WSC-A9
                                         ,:WSC-D1
                                         ,:WSC-D2
                                         ,:WSC-D3
                                         ,:WSC-D4
                                         ,:WSC-D5
                                         ,:WSC-D6
                                         ,:WSC-D7
                                         ,:WSC-D8
                                         ,:WSC-D9
                                         ,:WSC-WA
                                         )
           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-MULTIPLE-ROWS
                    MOVE WSC-YES TO WSH-MNTH-BGN-SW
               WHEN WSC-NOT-FOUND
                    MOVE WSC-NO TO WSH-MNTH-BGN-SW
               WHEN OTHER
                    MOVE SQLCODE               TO WSL-ERROR-VALUE
                    MOVE WSC-ERROR-SELECTING-CLWIN
                      TO WSL-CALWIN-ERROR-CODE
                    SET WSL-TERMINAL           TO TRUE
                    PERFORM 91000-ERROR
           END-EVALUATE
           .

      ******************************************************************
      * This process sets New placements Switch
       10770-GET-NEW-PLACEMENT-SW.
           MOVE '10770-GET-NEW-PLACEMENT-SW'       TO WSL-PARA-NAME

      ******************************************************************
      *                         SQL# 115
      ******************************************************************
           EXEC SQL
              SELECT 
                    DISTINCT A.CWIN
              INTO
                 :WSD-ES-ASG-ACT.WSD-CWIN
                 :WSD-ES-ASG-ACT.WSD-CWIN-I
               FROM
                  ES_ASG_ACT A
                 ,ES_PGM_ACT B
              WHERE
                     A.CWIN       = :WSH-AG-INDV-CWIN
                 AND A.ACT_ID     = B.ACT_ID
                 AND A.PGM_TYP_CD = B.PGM_TYP_CD
                 AND B.TYP_CD     = :WSH-ES-TYP-CD
                 AND A.ASG_ACT_ID = :WSH-ASG-ACT-ID
                 AND A.ACTL_BGN_DT >=
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND A.ACTL_BGN_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(A.ACTL_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE

           EVALUATE SQLCODE
             WHEN WSC-SQL-OK
                  SET WSS-Y-NEW-PLACEMENT-SW TO TRUE
             WHEN WSC-NOT-FOUND
                   SET WSS-N-NEW-PLACEMENT-SW TO TRUE
             WHEN OTHER
               MOVE SQLCODE            TO WSL-ERROR-VALUE
               MOVE WSC-ERROR-SELECTING-CLWIN
                   TO WSL-CALWIN-ERROR-CODE
               MOVE 'ERROR SELECTING 10770-GET-NEW-PLACEMENT-SW '
                    TO WSL-MISC-ERROR-TXT
               SET  WSL-TERMINAL       TO TRUE
               PERFORM 91000-ERROR
           END-EVALUATE

      ******************************************************************
      *                         SQL# 120
      ******************************************************************
           EXEC SQL
              SELECT 
                    DISTINCT A.CWIN
              INTO
                 :WSD-ES-ASG-ACT.WSD-CWIN
                 :WSD-ES-ASG-ACT.WSD-CWIN-I
               FROM
                  ES_ASG_ACT A
                 ,ES_PGM_ACT B
              WHERE
                     A.CWIN       = :WSH-AG-INDV-CWIN
                 AND A.ACT_ID     = B.ACT_ID
                 AND A.PGM_TYP_CD = B.PGM_TYP_CD
                 AND B.TYP_CD     = :WSH-ES-TYP-CD
                 AND A.ASG_ACT_ID < :WSH-ASG-ACT-ID
                 AND A.ACTL_BGN_DT <
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND A.ACTL_BGN_DT >=
                     TO_DATE(:WSH-FIRST-DAY-OF-FFY-X,'YYYY-MM-DD')
           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE

           EVALUATE SQLCODE
             WHEN WSC-SQL-OK
                  SET WSS-N-NEW-PLACEMENT-SW TO TRUE
             WHEN WSC-NOT-FOUND
                   CONTINUE
             WHEN OTHER
               MOVE SQLCODE            TO WSL-ERROR-VALUE
               MOVE WSC-ERROR-SELECTING-CLWIN
                   TO WSL-CALWIN-ERROR-CODE
               MOVE 'ERROR SELECTING 10770-GET-NEW-PLACEMENT-SW '
                    TO WSL-MISC-ERROR-TXT
               SET  WSL-TERMINAL       TO TRUE
               PERFORM 91000-ERROR
           END-EVALUATE
           .

      ******************************************************************
      * This para checks time clock exemptions.                         
      * 43 Individual Living in an Area With an ABAWD Waiver.           
      * 65 County Wide ABAWD waiver                                     
      *                                                                 
      * ABAWD Only Exemption codes for reference                        
      * Descriptions from RT_TM_CLK_EXMT                                
      * ABAWD Phase 1                                                   
      * 31 Pregnant and Cannot Work                                     
      * 37 Incapable of Working                                         
      * 42 Dependent Child Under 18 in FS Household                     
      *                                                                 
      * ABAWD Phase 1C                                                  
      * 27 Disabled                                                     
      * 41 Domestic Violence                                            
      * 86 Chronically Homeless                                         
      * 88 Unfit for Work                                               
      *                                                                 
      * When adding new exemptions be sure to set the switch to suppress
      * fifteen percent exemptions (WSS-FPE-NOPE) to true.              
      ******************************************************************
       11000-PROCESS-EXMT.
           MOVE '11000-PROCESS-EXMT'       TO WSL-PARA-NAME

           EVALUATE TRUE
      ***      Individual Living in an Area With an ABAWD Waiver.
      ***      Used for 15% exemption prior to ABAWD Phase 1B
               WHEN WSH-EXMT-CD = WSC-EXM-CD-43
                   IF WSH-WRK-REG-IND = WSC-YES
                       MOVE WSC-YES   TO WSH-ABAWD-IND-EXT
                   END-IF
                   MOVE WSC-YES       TO WSH-ABAWD-EXMT-SW
                   MOVE WSH-FIRST-DAY-OF-REPT-DT
                     TO WSH-ABAWD-EXMT-DT
                   MOVE WSC-YES          TO WSH-REC-FOUND1

      ***      County Wide ABAWD waiver.
               WHEN WSH-EXMT-CD = WSC-EXM-CD-65
                   MOVE WSC-NO         TO WSH-ABAWD-EXMT-SW
                   MOVE SPACES         TO WSH-ABAWD-EXMT-DT
                   MOVE WSC-YES        TO WSH-REC-FOUND1
                   SET WSS-FPE-NOPE    TO TRUE
           END-EVALUATE

           PERFORM 11920-FETCH-AG-TIME-CLK-CUR
           .

      **Monthly*********************************************************
      * Get the has ABAWD waiver switch for 15% exemption reporting     
      ******************************************************************
       11100-GET-15-PCT-ABAWD-SW.
           MOVE '11100-GET-15-PCT-ABAWD-SW'       TO WSL-PARA-NAME

           MOVE SPACES TO WSS-ABAWD-WAIVER-SW
                          WSS-ABAWD-EXMT-STS-CD-SW

           EVALUATE TRUE
             WHEN WSH-FIRST-DAY-OF-REPT-DT(1:7) <
                  WSC-ABAWD-PHASE1B-DT(1:7)
                 PERFORM 11120-GET-HAS-ABAWD-SW
                 IF WSS-ABAWD-WAIVER-OK 
                     PERFORM 11130-PROC-HAS-ABAWD-SW
                 ELSE
                     MOVE WSC-NO TO WSH-ABAWD-EXMT-SW
                     MOVE SPACES TO WSH-ABAWD-EXMT-DT
                 END-IF

             WHEN WSH-FIRST-DAY-OF-REPT-DT(1:7) >
                  WSC-ABAWD-PHASE1B-DT(1:7)
                 PERFORM 11160-GET-ABAWD-EXMT-STS-CD
                 IF WSS-ABAWD-EXMT-STS-CD-OK
                     PERFORM 11170-PROC-ABAWD-EXMT-STS-CD
                 ELSE
                     MOVE WSC-NO TO WSH-ABAWD-EXMT-SW
                     MOVE SPACES TO WSH-ABAWD-EXMT-DT
                 END-IF

             WHEN WSH-FIRST-DAY-OF-REPT-DT(1:7) =
                  WSC-ABAWD-PHASE1B-DT(1:7)
                 PERFORM 11120-GET-HAS-ABAWD-SW
                 PERFORM 11160-GET-ABAWD-EXMT-STS-CD

                 EVALUATE TRUE
                   WHEN WSS-ABAWD-WAIVER-OK 
                     PERFORM 11130-PROC-HAS-ABAWD-SW

                   WHEN WSS-ABAWD-EXMT-STS-CD-OK
                     PERFORM 11170-PROC-ABAWD-EXMT-STS-CD

                   WHEN OTHER
                     MOVE WSC-NO TO WSH-ABAWD-EXMT-SW
                     MOVE SPACES TO WSH-ABAWD-EXMT-DT
                 END-EVALUATE
           END-EVALUATE
           .

      **Monthly*********************************************************
      * Get the has ABAWD waiver switch for 15% exemption reporting     
      * Usage of this switch is discontinued with ABAWD Phase1B         
      ** CR4667 - Per DBA's removed order by eff_end_dt desc            
      ******************************************************************
       11120-GET-HAS-ABAWD-SW.
           MOVE '11120-GET-HAS-ABAWD-SW'       TO WSL-PARA-NAME

      ******************************************************************
      *                         SQL# 80
      ******************************************************************
           EXEC SQL
              SELECT DISTINCT :WSC-1
              INTO :WSH-LZ
              FROM
                 INDV_WRK_REQR A
              WHERE
                     A.CWIN              = :WSH-AG-INDV-CWIN
                 AND A.HAS_ABAWD_WVER_SW = :WSC-YES
                 AND A.EFF_BGN_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE
           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                  SET WSS-ABAWD-WAIVER-OK TO TRUE

              WHEN WSC-NOT-FOUND
                  SET WSS-ABAWD-WAIVER-NF TO TRUE

              WHEN OTHER
                MOVE SQLCODE            TO WSL-ERROR-VALUE
                MOVE WSC-ERROR-SELECTING-CLWIN
                  TO WSL-CALWIN-ERROR-CODE
                STRING 'ERROR IN SELECTING FROM INDV_WRK_REQR'
                       ' CWIN: '
                       WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                  SET  WSL-TERMINAL       TO TRUE
                  PERFORM 91000-ERROR
           END-EVALUATE
           .

      **Monthly*********************************************************
      * Process the ABAWD waiver switch for 15% exemption reporting     
      ******************************************************************
       11130-PROC-HAS-ABAWD-SW.
           MOVE '11130-PROC-HAS-ABAWD-SW'       TO WSL-PARA-NAME

           IF WSH-WRK-REG-IND = WSC-YES
               MOVE WSC-YES   TO WSH-ABAWD-IND-EXT
           END-IF
           MOVE WSC-YES TO WSH-REC-FOUND3
           IF WSS-FPE-YEP
               MOVE WSC-YES       TO WSH-ABAWD-EXMT-SW
               MOVE WSH-FIRST-DAY-OF-REPT-DT TO WSH-ABAWD-EXMT-DT
           ELSE
               MOVE WSC-NO        TO WSH-ABAWD-EXMT-SW
               MOVE SPACES        TO WSH-ABAWD-EXMT-DT
           END-IF
           .

      **Monthly*********************************************************
      * Check for ABAWD_EXMT_STS_CD = 03 for 15% exemption reporting    
      * Usage of this switch introduced with ABAWD Phase1B              
      ** CR4667 - Per DBA's removed order by eff_end_dt desc            
      ******************************************************************
       11160-GET-ABAWD-EXMT-STS-CD.
           MOVE '11160-GET-ABAWD-EXMT-STS-CD'       TO WSL-PARA-NAME

      ******************************************************************
      *                         SQL# 260
      ******************************************************************
           EXEC SQL
              SELECT DISTINCT :WSC-1
              INTO :WSH-LZ
              FROM
                 INDV_WRK_REQR A
              WHERE
                     A.CWIN            = :WSH-AG-INDV-CWIN
                 AND ABAWD_EXMT_STS_CD = :WSC-03 
                 AND NVL(ABAWD_EXMT_BGN_DT,
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')) <= 
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD') 
                 AND NVL(ABAWD_EXMT_END_DT,F_HIGH_DT) >= 
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE
           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                  SET WSS-ABAWD-EXMT-STS-CD-OK TO TRUE
              WHEN WSC-NOT-FOUND
                  SET WSS-ABAWD-EXMT-STS-CD-NF TO TRUE
              WHEN OTHER
                MOVE SQLCODE            TO WSL-ERROR-VALUE
                MOVE WSC-ERROR-SELECTING-CLWIN
                  TO WSL-CALWIN-ERROR-CODE
                STRING 'ERROR IN SELECTING FROM INDV_WRK_REQR'
                       ' CWIN: '
                       WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                  SET  WSL-TERMINAL       TO TRUE
                  PERFORM 91000-ERROR
           END-EVALUATE
           .

      **Monthly*********************************************************
      * Process ABAWD_EXMT_STS_CD = 03 for 15% exemption reporting      
      ******************************************************************
       11170-PROC-ABAWD-EXMT-STS-CD.
           MOVE '11170-PROC-ABAWD-EXMT-STS-CD'       TO WSL-PARA-NAME

           IF WSH-WRK-REG-IND = WSC-YES
               MOVE WSC-YES   TO WSH-ABAWD-IND-EXT
           END-IF
           MOVE WSC-YES TO WSH-REC-FOUND3
           IF WSS-FPE-YEP
               MOVE WSC-YES       TO WSH-ABAWD-EXMT-SW
               MOVE WSH-FIRST-DAY-OF-REPT-DT TO WSH-ABAWD-EXMT-DT
           ELSE
               MOVE WSC-NO        TO WSH-ABAWD-EXMT-SW
               MOVE SPACES        TO WSH-ABAWD-EXMT-DT
           END-IF
           .

      **Monthly*********************************************************
      * This Process checks the Individual is ABAWD
      ******************************************************************
       11200-GET-15-PCT-ABAWD-SW.
           MOVE '11200-GET-15-PCT-ABAWD-SW'       TO WSL-PARA-NAME

           MOVE SPACES TO WSS-ABAWD-WAIVER-SW
                          WSS-ABAWD-EXMT-STS-CD-SW

           EVALUATE TRUE
             WHEN WSH-FIRST-DAY-OF-REPT-DT(1:7) <
                  WSC-ABAWD-PHASE1B-DT(1:7)
                 PERFORM 11220-GET-HAS-ABAWD-SW
                 IF WSS-ABAWD-WAIVER-OK 
                     PERFORM 11230-PROC-HAS-ABAWD-SW
                 ELSE
                     MOVE WSC-NO TO WSH-ABAWD-EXMT-SW
                     MOVE SPACES TO WSH-ABAWD-EXMT-DT
                 END-IF

             WHEN WSH-FIRST-DAY-OF-REPT-DT(1:7) >
                  WSC-ABAWD-PHASE1B-DT(1:7)
                 PERFORM 11260-GET-ABAWD-EXMT-STS-CD
                 IF WSS-ABAWD-EXMT-STS-CD-OK
                     PERFORM 11270-PROC-ABAWD-EXMT-STS-CD
                 ELSE
                     MOVE WSC-NO TO WSH-ABAWD-EXMT-SW
                     MOVE SPACES TO WSH-ABAWD-EXMT-DT
                 END-IF

             WHEN WSH-FIRST-DAY-OF-REPT-DT(1:7) =
                  WSC-ABAWD-PHASE1B-DT(1:7)

                 PERFORM 11120-GET-HAS-ABAWD-SW
                 PERFORM 11160-GET-ABAWD-EXMT-STS-CD

                 EVALUATE TRUE
                   WHEN WSS-ABAWD-WAIVER-OK 
                     PERFORM 11230-PROC-HAS-ABAWD-SW

                   WHEN WSS-ABAWD-EXMT-STS-CD-OK
                     PERFORM 11270-PROC-ABAWD-EXMT-STS-CD

                   WHEN OTHER
                     MOVE WSC-NO TO WSH-ABAWD-EXMT-SW
                     MOVE SPACES TO WSH-ABAWD-EXMT-DT
                 END-EVALUATE
           END-EVALUATE
           .

      **Quarterly and SAR***********************************************
      * Get the has ABAWD waiver switch for 15% exemption reporting     
      * Usage of this switch is discontinued with ABAWD Phase1B         
      ** CR4667 - Per DBA's removed order by eff_end_dt desc            
      ******************************************************************
       11220-GET-HAS-ABAWD-SW.
           MOVE '11220-GET-HAS-ABAWD-SW'       TO WSL-PARA-NAME

      ******************************************************************
      *                         SQL# 85
      ******************************************************************
           EXEC SQL
              SELECT DISTINCT :WSC-1
              INTO :WSH-LZ
              FROM
                 INDV_WRK_REQR A
              WHERE
                     A.CWIN              = :WSH-AG-INDV-CWIN
                 AND A.HAS_ABAWD_WVER_SW = :WSC-YES
                 AND A.EFF_BGN_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(A.EFF_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND (A.FS_USE_EFF_MNTH  <= :WSH-REPORTING-MONTH
                      OR A.FS_USE_EFF_MNTH IS NULL
                     )
           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE
           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                  SET WSS-ABAWD-WAIVER-OK TO TRUE

              WHEN WSC-NOT-FOUND
                  SET WSS-ABAWD-WAIVER-NF TO TRUE

              WHEN OTHER
                MOVE SQLCODE            TO WSL-ERROR-VALUE
                MOVE WSC-ERROR-SELECTING-CLWIN
                  TO WSL-CALWIN-ERROR-CODE
                STRING 'ERROR IN SELECTING FROM INDV_WRK_REQR'
                       ' CWIN: '
                       WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                  SET  WSL-TERMINAL       TO TRUE
                  PERFORM 91000-ERROR
           END-EVALUATE
           .

      **Quarterly and SAR***********************************************
      * Process the ABAWD waiver switch for 15% exemption reporting     
      ******************************************************************
       11230-PROC-HAS-ABAWD-SW.
           MOVE '11230-PROC-HAS-ABAWD-SW'       TO WSL-PARA-NAME

           IF WSH-WRK-REG-IND = WSC-YES
               MOVE WSC-YES   TO WSH-ABAWD-IND-EXT
           END-IF
           MOVE WSC-YES TO WSH-REC-FOUND3
           IF WSS-FPE-YEP
               MOVE WSC-YES       TO WSH-ABAWD-EXMT-SW
               MOVE WSH-FIRST-DAY-OF-REPT-DT TO WSH-ABAWD-EXMT-DT
           ELSE
               MOVE WSC-NO        TO WSH-ABAWD-EXMT-SW
               MOVE SPACES        TO WSH-ABAWD-EXMT-DT
           END-IF
           .

      **Quarterly and SAR***********************************************
      * Check for ABAWD_EXMT_STS_CD = 03 for 15% exemption reporting    
      * Usage of this switch introduced with ABAWD Phase1B              
      ******************************************************************
       11260-GET-ABAWD-EXMT-STS-CD.
           MOVE '11260-GET-ABAWD-EXMT-STS-CD'       TO WSL-PARA-NAME
      ******************************************************************
      *                         SQL# 270
      ******************************************************************
           EXEC SQL
              SELECT DISTINCT :WSC-1
              INTO :WSH-LZ
              FROM
                 INDV_WRK_REQR A
              WHERE
                     A.CWIN            = :WSH-AG-INDV-CWIN
                 AND ABAWD_EXMT_STS_CD = :WSC-03 
                 AND NVL(ABAWD_EXMT_BGN_DT,
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')) <= 
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD') 
                 AND NVL(ABAWD_EXMT_END_DT,F_HIGH_DT) >= 
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND (A.FS_USE_EFF_MNTH  <= :WSH-REPORTING-MONTH
                      OR A.FS_USE_EFF_MNTH IS NULL
                     )
           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE
           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                  SET WSS-ABAWD-EXMT-STS-CD-OK TO TRUE
              WHEN WSC-NOT-FOUND
                  SET WSS-ABAWD-EXMT-STS-CD-NF TO TRUE
              WHEN OTHER
                MOVE SQLCODE            TO WSL-ERROR-VALUE
                MOVE WSC-ERROR-SELECTING-CLWIN
                  TO WSL-CALWIN-ERROR-CODE
                STRING 'ERROR IN SELECTING FROM INDV_WRK_REQR'
                       ' CWIN: '
                       WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                  SET  WSL-TERMINAL       TO TRUE
                  PERFORM 91000-ERROR
           END-EVALUATE
           .

      **Quarterly and SAR***********************************************
      * Process ABAWD_EXMT_STS_CD = 03 for 15% exemption reporting      
      ******************************************************************
       11270-PROC-ABAWD-EXMT-STS-CD.
           MOVE '11270-PROC-ABAWD-EXMT-STS-CD'       TO WSL-PARA-NAME

           IF WSH-WRK-REG-IND = WSC-YES
               MOVE WSC-YES   TO WSH-ABAWD-IND-EXT
           END-IF
           MOVE WSC-YES TO WSH-REC-FOUND3
           IF WSS-FPE-YEP
               MOVE WSC-YES       TO WSH-ABAWD-EXMT-SW
               MOVE WSH-FIRST-DAY-OF-REPT-DT TO WSH-ABAWD-EXMT-DT
           ELSE
               MOVE WSC-NO        TO WSH-ABAWD-EXMT-SW
               MOVE SPACES        TO WSH-ABAWD-EXMT-DT
           END-IF
           .

      *****************************************************************
      ** The following paragraph opens the MRB037E_AG_TIME_CLK_CUR     
      ** cursor.                                                       
      *****************************************************************
       11900-OPEN-AG-TIME-CLK-CUR.
           MOVE '11900-OPEN-AG-TIME-CLK-CUR' TO WSL-PARA-NAME

           EXEC SQL
              OPEN MRB037E_AG_TIME_CLK_CUR
           END-EXEC

           EVALUATE SQLCODE
             WHEN WSC-SQL-OK
               CONTINUE
             WHEN OTHER
               MOVE SQLCODE TO WSL-ERROR-VALUE
               MOVE WSC-ERROR-OPENING-CUR-CLWIN
                 TO WSL-CALWIN-ERROR-CODE
               STRING 'ERROR OPENING MRB037E_AG_TIME_CLK_CUR CURSOR'
                      ' CWIN: '
                      WSH-AG-INDV-CWIN
                 DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
               SET WSL-TERMINAL TO TRUE
               PERFORM 91000-ERROR
           END-EVALUATE
           .

      ******************************************************************
      *                                                                 
      ******************************************************************
       11920-FETCH-AG-TIME-CLK-CUR.
           MOVE '11920-FETCH-AG-TIME-CLK-CUR ' TO WSL-PARA-NAME
           INITIALIZE WSH-EXMT-CD

           EXEC SQL
               FETCH MRB037E_AG_TIME_CLK_CUR
               INTO :WSH-EXMT-CD
           END-EXEC

           EVALUATE SQLCODE
             WHEN WSC-SQL-OK
               CONTINUE

             WHEN WSC-NOT-FOUND
               SET WSS-END-AG-TIME-CLK-CUR TO TRUE

             WHEN OTHER
               MOVE SQLCODE TO WSL-ERROR-VALUE
               MOVE WSC-ERROR-FETCHING-CLWIN
                 TO WSL-CALWIN-ERROR-CODE
               STRING 'ERROR FETCHING MRB037E_AG_TIME_CLK_CUR CURSOR'
                      ' CWIN: '
                        WSH-AG-INDV-CWIN
                 DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
               SET  WSL-TERMINAL TO TRUE
               PERFORM 91000-ERROR
           END-EVALUATE
           .

      ***************************************************************
      ** Close the MRB037E_AG_TIME_CLK_CUR cursor.                   
      ***************************************************************
       11940-CLOSE-AG-TIME-CLK-CUR.
           MOVE '11940-CLOSE-AG-TIME-CLK-CUR ' TO WSL-PARA-NAME

           EXEC SQL
               CLOSE MRB037E_AG_TIME_CLK_CUR
           END-EXEC

           EVALUATE SQLCODE
             WHEN WSC-SQL-OK
               CONTINUE
             WHEN OTHER
               MOVE SQLCODE TO WSL-ERROR-VALUE
               MOVE WSC-ERROR-CLOSING-CUR-CLWIN
                 TO WSL-CALWIN-ERROR-CODE
               STRING 'ERROR CLOSING MRB037E_AG_TIME_CLK_CUR CURSOR'
                      ' CWIN: '
                        WSH-AG-INDV-CWIN
                   DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
               SET WSL-TERMINAL TO TRUE
               PERFORM 91000-ERROR
           END-EVALUATE
           .

      ******************************************************************
      ** This paragraph records the work registered ABAWD's both total  
      ** and new in the fiscal year.                                    
      ******************************************************************
       12000-STAT47-ABAWD-CT.
           MOVE '12000-STAT47-ABAWD-CT'      TO WSL-PARA-NAME

           INITIALIZE WSS-STAT47-CUR-SW
                      WSS-STAT47-DONE-SW
                      WSH-STAT47-EDBC-SEQ
                      WSH-STAT47-EDBC-SEQ-P
                      WSH-STAT47-ABAWD-IND
                      WSH-STAT47-ABAWD-IND-P
                      WSH-STAT47-WORK-REG-IND
                      WSH-STAT47-WORK-REG-IND-P
                      WSH-STAT47-AG-EFF-START-DT
                      WSH-STAT47-AG-EFF-START-DT-P
                      WSH-STAT47-HIDDEN-EXMT
                      WSH-STAT47-HIDDEN-EXMT-P
                      WSS-STAT47-ABAWD-SW
                      WSS-STAT47-WR-SW
                      WSS-ABAWD-SAME-SW
                      WSS-PEEK-NOT-FOUND-SW
                      WSS-ABAWD-FFY-SW
                      WSS-WR-SAME-SW
                      WSS-WR-FFY-SW
                      WSS-ABAWD-NEW-SW
                      WSS-WR-NEW-SW
                      WSS-AUTH-CUR-SW
                      WSS-AUTH-DATE-SW
                      WSH-ABAWD-TRN-CT
                      WSH-WR-TRN-CT
                      WSH-ABAWD-HIST-CT
                      WSH-WR-HIST-CT

           IF  (WSH-ABAWD-IND   = WSC-YES)
           OR ((WSH-ABAWD-IND   = WSC-EXM)
               AND (WSH-WRK-REG-IND = WSC-YES))
               SET WSS-STAT47-ABAWD-CHK TO TRUE
           END-IF 

           IF WSH-WRK-REG-IND = WSC-YES
               SET WSS-STAT47-WR-CHK TO TRUE
           END-IF

      ******************************************************************
      *                         SQL# 125
      ******************************************************************
      ***  Get the max EDBC sequence number for the data month.
           EXEC SQL
              SELECT NVL(MAX(EDBC_SEQ),:WSH-EDBC-SEQ)
              INTO :WSH-MAX-EDBC-SEQ
              FROM
                   AG_ELIG_RSLT
              WHERE
                    CS_ID        = :WSH-CS-ID
                AND PGM_TYP_CD   = :WSH-PGM-TYP-CD
                AND DELT_RCRD_SW = :WSC-NO
                AND CUR_ELIG_IND = :WSC-AUTHORIZED
                AND AG_EFF_START_DT <=
                    TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                AND NVL(AG_EFF_END_DT, F_HIGH_DT()) >=
                    TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
           END-EXEC.

      ***  MAX does not return not-found.  Not found returns null
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                 CONTINUE
               WHEN OTHER
                 MOVE SQLCODE TO WSL-ERROR-VALUE
                 MOVE WSC-ERROR-FETCHING-CLWIN
                   TO WSL-CALWIN-ERROR-CODE
                 STRING 'ERROR SELECTING MAX EDBC_SEQ FROM' 
                        ' AG_ELIG_RSLT'
                        ' CASE ID: ' WSH-CS-ID
                        ' PGM TYPE CD: ' WSH-PGM-TYP-CD
                        ' CWIN: ' WSH-AG-INDV-CWIN
                     DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                 SET  WSL-TERMINAL TO TRUE
                 PERFORM 91000-ERROR
           END-EVALUATE

      * Initialize the date window for the ABAWD FFY cursor.
           MOVE WSH-LAST-DAY-OF-REPT-DT TO WSH-LAST-DAY-ABAWD-HIST-DT

      *** Check authorization date
           PERFORM 12400-CHK-AUTH-DATE

           IF WSS-AUTH-DATE-YES
               PERFORM 12940-OPEN-STAT47-PRIOR-CUR

      ***      Fetch the first row.
               PERFORM 12950-FETCH-STAT47-PRIOR-CUR

      ***      Loop through the EDBC history for the past two months
      ***      looking for an ABAWD transition.   If a transition is
      ***      found then the ABAWD might be new.
               PERFORM 12500-CURRENT-MONTH-AUTH
                   UNTIL WSS-END-AUTH-CUR

      ***      Adjust the date window for the ABAWD FFY check.
               MOVE WSH-LAST-DAY-ABAWD-CHK-DT 
                 TO WSH-LAST-DAY-ABAWD-HIST-DT

               PERFORM 12960-CLOSE-STAT47-PRIOR-CUR

           END-IF

           PERFORM 12900-OPEN-STAT47-ABAWD-CUR

      ***  Fetch the first row.
           PERFORM 12910-FETCH-STAT47-ABAWD-CUR

      *** Check for hidden exemptions up front and virtualize
      *** the ABAWD exemption when one is found.  This block of 
      *** handles the first row before it is saved in -P
           MOVE WSC-NO TO WSH-STAT47-HIDDEN-EXMT 
           IF WSH-STAT47-AG-EFF-START-DT < WSC-ABAWD-PHASE1B-DT
           AND WSH-STAT47-ABAWD-IND <> WSC-SPACE
           AND NOT WSS-END-STAT47-CUR
              MOVE WSH-STAT47-AG-EFF-START-DT TO WSH-START-AOE-DT
              PERFORM 13000-CHECK-ABAWD-EXEMPT
              IF WSS-ABAWD-EXMT-FOUND
                 MOVE WSC-EXM TO WSH-STAT47-ABAWD-IND
                 MOVE WSC-YES TO WSH-STAT47-HIDDEN-EXMT
              ELSE
                 IF WSH-STAT47-AG-EFF-START-DT < WSC-ABAWD-PHASE1-DT
                 AND WSH-STAT47-ABAWD-IND = WSC-EXM
                 AND WSH-STAT47-WORK-REG-IND = WSC-YES
                    MOVE WSC-YES TO WSH-STAT47-ABAWD-IND
                 END-IF
              END-IF
           END-IF

      ***  Loop through the EDBC history for this case/cwin looking
      ***  for an ABAWD transition since the start of the federal
      ***  fiscal year.  
           PERFORM 12100-STAT47-TALLY
               UNTIL WSS-END-STAT47-CUR
                  OR WSS-STAT47-DONE

      ***  BREAK IN AID
      ***  Perform break in aid after history and before FFY peek
           PERFORM 14000-BREAK-IN-AID

      ***  PEEK BEHIND FFY
      ***  If the program reaches the end of cursor having found one 
      ***  transition then the ABAWD is new unless the FFY peek finds 
      ***  a transition between September and October.
      ***  Changes to support break in aid EDBC history mean that the
      ***  That the end of the cursor is always reached.   
      ***  The Peek logic is only needed when ABAWD is checked 
      ***  to the end of the cursor.

           IF  WSS-STAT47-ABAWD-HIST
           AND WSH-ABAWD-HIST-CT = WSC-ZERO-N
               IF WSH-ABAWD-IND = WSC-ABAWD
               OR WSH-ABAWD-IND = WSC-EXM
                   IF WSH-ABAWD-TRN-CT = WSC-1
                       SET WSS-ABAWD-NEW TO TRUE
                   END-IF
               END-IF
           END-IF

           IF WSS-STAT47-ABAWD-CHK
               IF WSH-ABAWD-IND = WSC-ABAWD
               OR WSH-ABAWD-IND = WSC-EXM
                   IF WSH-ABAWD-TRN-CT = WSC-1
                       SET WSS-ABAWD-NEW TO TRUE
                   END-IF
      *** If the program reaches the end of the cursor with zero
      *** transitions and no prior ABAWD in the FFY the case can 
      *** be new if the ABAWD is not a carryover from the prior year
                   IF WSH-ABAWD-TRN-CT = WSC-ZERO-N
                   AND WSS-STAT47-ABAWD-CHK
                       PERFORM 12020-PEEK-BEHIND-FFY-CURTAIN
                       SET WSS-ZT-RAN TO TRUE
                       EVALUATE TRUE
                         WHEN WSS-PEEK-NOT-FOUND
                             SET WSS-ABAWD-NEW TO TRUE 
 
      ***                ABAWD E to ABAWD Y
                         WHEN WSH-ABAWD-IND          = WSC-ABAWD
                          AND WSH-STAT47-ABAWD-IND-Q = WSC-EXM
                             SET WSS-ABAWD-NEW TO TRUE 
 
      ***                ABAWD null to ABAWD Y
                         WHEN WSH-ABAWD-IND          = WSC-ABAWD
                          AND WSH-STAT47-ABAWD-IND-Q = WSC-SPACE
                             SET WSS-ABAWD-NEW TO TRUE 
                         WHEN OTHER
                             MOVE SPACES TO WSS-ABAWD-NEW-SW
                       END-EVALUATE 
                   END-IF
               END-IF
           END-IF

           IF  WSS-STAT47-WR-HIST
           AND WSH-WR-HIST-CT = WSC-ZERO-N
               IF WSH-WR-TRN-CT = WSC-1
                   SET WSS-WR-NEW TO TRUE
               END-IF
           END-IF

           IF WSS-STAT47-WR-CHK
               IF WSH-WR-TRN-CT = WSC-1
                   SET WSS-WR-NEW TO TRUE
               END-IF

      *** If the program reaches the end of the cursor with zero
      *** transitions and no prior WR in the FFY the case can 
      *** be new if the WR is not a carryover from the prior year
               IF WSH-WR-TRN-CT = WSC-ZERO-N
               AND WSS-STAT47-WR-CHK
                   IF NOT WSS-ZT-RAN 
                       PERFORM 12020-PEEK-BEHIND-FFY-CURTAIN
                   END-IF

                   EVALUATE TRUE
                     WHEN WSS-PEEK-NOT-FOUND
                       SET WSS-WR-NEW TO TRUE

                     WHEN WSH-STAT47-WORK-REG-IND-Q = WSC-YES
                       MOVE SPACES TO WSS-WR-NEW-SW

                     WHEN WSH-STAT47-WORK-REG-IND-Q <> WSC-YES
                       SET WSS-WR-NEW TO TRUE 
                   END-EVALUATE 
               END-IF

               MOVE SPACES TO WSS-ZT-RAN-SW 

           END-IF

           PERFORM 12930-CLOSE-STAT47-ABAWD-CUR
           .

      ******************************************************************
      ** In the case of zero transitions the case could be new or it    
      ** could be carried over from a prior year.                       
      ******************************************************************
       12020-PEEK-BEHIND-FFY-CURTAIN.
           MOVE '12020-PEEK-BEHIND-FFY-CURTAIN' TO WSL-PARA-NAME

           INITIALIZE WSH-MAX-AG-EFF-START-DT
                      WSH-MAX-AG-EFF-START-DT-I

      ******************************************************************
      *                         SQL# 220
      ******************************************************************

           EXEC SQL
              SELECT TO_CHAR(MAX(B.AG_EFF_START_DT),'YYYY-MM-DD')
              INTO :WSH-MAX-AG-EFF-START-DT
                   :WSH-MAX-AG-EFF-START-DT-I
              FROM
                    AG_INDV_ELIG_RSLT A
                   ,AG_ELIG_RSLT      B
              WHERE
                    A.CS_ID        = :WSH-CS-ID
                AND A.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                AND A.CWIN         = :WSH-AG-INDV-CWIN
                AND A.CS_ID        = B.CS_ID
                AND A.PGM_TYP_CD   = B.PGM_TYP_CD
                AND A.EDBC_SEQ     = B.EDBC_SEQ
                AND B.DELT_RCRD_SW = :WSC-NO
                AND A.ELIG_STS_CD  = :WSC-PASS
                AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
                AND AG_EFF_START_DT <
                    TO_DATE(:WSH-FIRST-DAY-OF-FFY-X,'YYYY-MM-DD')
           END-EXEC.
 
      ***  MAX does not return not-found.  Not found returns null
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   IF WSH-MAX-AG-EFF-START-DT-I < WSC-ZERO-N
                       SET WSS-PEEK-NOT-FOUND TO TRUE
                   ELSE
                       PERFORM 12030-B4-FFY-MAX-EDBC-SEQ
                   END-IF
               WHEN OTHER
                   MOVE SQLCODE TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-FETCHING-CLWIN
                     TO WSL-CALWIN-ERROR-CODE
                   STRING 'ERROR SELECTING MAX AG_EFF_START_DT FROM' 
                          ' AG_ELIG_RSLT'
                          ' CASE ID: ' WSH-CS-ID
                          ' PGM TYPE CD: ' WSH-PGM-TYP-CD
                          ' CWIN: ' WSH-AG-INDV-CWIN
                       DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                   SET  WSL-TERMINAL TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE
           .
 
      ******************************************************************
      ** Get the max EDBC Sequence number for the effective start date  
      **
      ******************************************************************
       12030-B4-FFY-MAX-EDBC-SEQ.
           MOVE '12030-B4-FFY-MAX-EDBC-SEQ' TO WSL-PARA-NAME
 
           INITIALIZE WSH-MAX-EDBC-SEQ
 
      ******************************************************************
      *                         SQL# 230
      ******************************************************************
      ***  Get the max EDBC sequence number for the prior FFY.
           EXEC SQL
              SELECT NVL(MAX(B.EDBC_SEQ),:WSC-ZERO-N)
              INTO :WSH-MAX-EDBC-SEQ
              FROM
                    AG_INDV_ELIG_RSLT A
                   ,AG_ELIG_RSLT      B
              WHERE
                    A.CS_ID        = :WSH-CS-ID
                AND A.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                AND A.CWIN         = :WSH-AG-INDV-CWIN
                AND A.CS_ID        = B.CS_ID
                AND A.PGM_TYP_CD   = B.PGM_TYP_CD
                AND A.EDBC_SEQ     = B.EDBC_SEQ
                AND B.DELT_RCRD_SW = :WSC-NO
                AND A.ELIG_STS_CD  = :WSC-PASS
                AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
                AND AG_EFF_START_DT =
                    TO_DATE(:WSH-MAX-AG-EFF-START-DT,'YYYY-MM-DD')
           END-EXEC.
 
      ***  MAX does not return not-found.  Not found returns null
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   IF WSH-MAX-EDBC-SEQ = WSC-ZERO-N
                       SET WSS-PEEK-NOT-FOUND TO TRUE
                   ELSE
                       PERFORM 12040-B4-FFY-EDBC-DATA
                   END-IF
               WHEN OTHER
                   MOVE SQLCODE TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-FETCHING-CLWIN
                     TO WSL-CALWIN-ERROR-CODE
                   STRING 'ERROR SELECTING MAX EDBC_SEQ FROM' 
                          ' AG_ELIG_RSLT'
                          ' CASE ID: ' WSH-CS-ID
                          ' PGM TYPE CD: ' WSH-PGM-TYP-CD
                          ' CWIN: ' WSH-AG-INDV-CWIN
                       DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                   SET  WSL-TERMINAL TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE
           .
 
      ******************************************************************
      ** In the case of zero transitions the case could be new or it    
      ** could be carried over from a prior year.                       
      ******************************************************************
       12040-B4-FFY-EDBC-DATA.
           MOVE '12040-B4-FFY-EDBC-DATA' TO WSL-PARA-NAME
 
           MOVE SPACES TO WSH-STAT47-ABAWD-IND-P
                          WSH-STAT47-WORK-REG-IND-P
 
      ******************************************************************
      *                         SQL# 240
      ******************************************************************
      ***  Get the row for this EDBC sequence number.
           EXEC SQL
              SELECT NVL(A.ABAWD_IND,:WSC-SPACE)
                    ,NVL(A.WRK_REG_IND,:WSC-SPACE)
              INTO :WSH-STAT47-ABAWD-IND-Q
                  ,:WSH-STAT47-WORK-REG-IND-Q
              FROM
                    AG_INDV_ELIG_RSLT A
                   ,AG_ELIG_RSLT      B
              WHERE
                    A.CS_ID        = :WSH-CS-ID
                AND A.CWIN         = :WSH-AG-INDV-CWIN
                AND A.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                AND A.EDBC_SEQ     = :WSH-MAX-EDBC-SEQ
                AND A.CS_ID        = B.CS_ID
                AND A.PGM_TYP_CD   = B.PGM_TYP_CD
                AND A.EDBC_SEQ     = B.EDBC_SEQ
                AND B.DELT_RCRD_SW = :WSC-NO
                AND A.ELIG_STS_CD  = :WSC-PASS
                AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
           END-EXEC.
 
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-MULTIPLE-ROWS
                    CONTINUE
               WHEN WSC-NOT-FOUND
                    SET WSS-PEEK-NOT-FOUND TO TRUE
               WHEN OTHER
                 MOVE SQLCODE TO WSL-ERROR-VALUE
                 MOVE WSC-ERROR-FETCHING-CLWIN
                   TO WSL-CALWIN-ERROR-CODE
                 STRING 'ERROR SELECTING FROM' 
                        ' AG_ELIG_RSLT, AG_INDV_ELIG_RSLT'
                        ' CASE ID: ' WSH-CS-ID
                        ' PGM TYPE CD: ' WSH-PGM-TYP-CD
                        ' CWIN: ' WSH-AG-INDV-CWIN
                        ' EDBC SEQ ' WSH-MAX-EDBC-SEQ
                     DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                 SET  WSL-TERMINAL TO TRUE
                 PERFORM 91000-ERROR
           END-EVALUATE
           .
      ******************************************************************
      ** Check for a change in the ABAWD or Work Registration in the    
      ** data month (DM).   If it has changed in the data month check   
      ** for additional changes since the beginning of the federal      
      ** fiscal year.                                                   
      ******************************************************************
       12100-STAT47-TALLY.
           MOVE '12100-STAT47-TALLY'      TO WSL-PARA-NAME

      *** Save the current row so transitions from one state to another
      *** can be detected.
           MOVE WSH-STAT47-EDBC-SEQ
             TO WSH-STAT47-EDBC-SEQ-P
           MOVE WSH-STAT47-ABAWD-IND
             TO WSH-STAT47-ABAWD-IND-P
           MOVE WSH-STAT47-WORK-REG-IND
             TO WSH-STAT47-WORK-REG-IND-P
           MOVE WSH-STAT47-AG-EFF-START-DT
             TO WSH-STAT47-AG-EFF-START-DT-P
           MOVE WSH-STAT47-HIDDEN-EXMT
             TO WSH-STAT47-HIDDEN-EXMT-P
      *** Fetch the next row
           PERFORM 12910-FETCH-STAT47-ABAWD-CUR

      *** Report ABAWDs, new ABAWDs in fiscal year
      *** New Work Registrants in fiscal year
      *** The nature of changes to these values.
      *** These values may not change at all.   

      *** Detect a change in the data month.
      *** Rows that matter:  ABAWD Y and ABAWD E
      *** Changes that matter
      *** Blank to Y
      *** Blank to E
      *** Changes that don't matter
      *** Any value to Blank.

      ***  End processing when end of cursor reached
           IF NOT WSS-END-STAT47-CUR
               IF WSS-STAT47-ABAWD-CHK
               OR WSS-STAT47-ABAWD-HIST
                   PERFORM 12200-STAT47-ABAWD-CHK
               END-IF

               IF WSS-STAT47-WR-CHK
               OR WSS-STAT47-WR-HIST
                   PERFORM 12300-STAT47-WRK-REG-CHK
               END-IF

               IF WSS-STAT47-ABAWD-SW = SPACES
               AND WSS-STAT47-WR-SW   = SPACES
                   SET WSS-STAT47-DONE TO TRUE
               END-IF
           END-IF
          .
      ******************************************************************
      ** Check for changes since the beginning of the FFY               
      ** If WSS-SAME is set throughout the data month then the search   
      ** is complete and it is not a new ABAWD.                         
      ** If WSS-TRANSITION is set in the data month then it may be a    
      ** new ABAWD.  Scan for transitions in a previous month.          
      ******************************************************************
       12200-STAT47-ABAWD-CHK.
           MOVE '12200-STAT47-ABAWD-CHK'      TO WSL-PARA-NAME

           MOVE SPACES TO WSS-ABAWD-SAME-SW

      *** Check for hidden exemptions up front and virtualize
      *** the ABAWD exemption when one is found. 
           MOVE WSC-NO TO WSH-STAT47-HIDDEN-EXMT
           IF WSH-STAT47-AG-EFF-START-DT < WSC-ABAWD-PHASE1B-DT
           AND WSH-STAT47-ABAWD-IND <> WSC-SPACE
              MOVE WSH-STAT47-AG-EFF-START-DT TO WSH-START-AOE-DT
              PERFORM 13000-CHECK-ABAWD-EXEMPT
              IF WSS-ABAWD-EXMT-FOUND
                 MOVE WSC-EXM TO WSH-STAT47-ABAWD-IND
                 MOVE WSC-YES TO WSH-STAT47-HIDDEN-EXMT
              ELSE
                 IF WSH-STAT47-AG-EFF-START-DT < WSC-ABAWD-PHASE1-DT
                 AND WSH-STAT47-ABAWD-IND = WSC-EXM
                 AND WSH-STAT47-WORK-REG-IND = WSC-YES
                    MOVE WSC-YES TO WSH-STAT47-ABAWD-IND
                 END-IF
              END-IF
           END-IF

           EVALUATE TRUE
               WHEN WSH-STAT47-ABAWD-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND   = WSC-YES
                   SET WSS-ABAWD-SAME TO TRUE

               WHEN WSH-STAT47-ABAWD-IND-P    = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND      = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND   = WSC-YES
                    EVALUATE TRUE
                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-YES
                       AND WSH-STAT47-HIDDEN-EXMT   = WSC-YES
                          SET WSS-ABAWD-SAME TO TRUE

                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-NO
                       AND WSH-STAT47-HIDDEN-EXMT   = WSC-NO
                          SET WSS-ABAWD-SAME TO TRUE

                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-NO
                       AND WSH-STAT47-HIDDEN-EXMT   = WSC-YES
                          EVALUATE TRUE
                            WHEN WSS-STAT47-ABAWD-CHK
                              ADD +1 TO WSH-ABAWD-TRN-CT
                            WHEN WSS-STAT47-ABAWD-HIST
                              ADD +1 TO WSH-ABAWD-HIST-CT
                          END-EVALUATE
                          
                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-YES
                       AND WSH-STAT47-HIDDEN-EXMT   = WSC-NO
                          CONTINUE
                    END-EVALUATE

      *** Null to ABAWD.
               WHEN WSH-STAT47-ABAWD-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND   = WSC-SPACE
                   EVALUATE TRUE
                     WHEN WSS-STAT47-ABAWD-CHK
                       ADD +1 TO WSH-ABAWD-TRN-CT
                     WHEN WSS-STAT47-ABAWD-HIST
                       ADD +1 TO WSH-ABAWD-HIST-CT
                    END-EVALUATE

      *** Null to exempt work registered.
               WHEN WSH-STAT47-ABAWD-IND-P    = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND      = WSC-SPACE
                    EVALUATE TRUE
                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-YES
                          CONTINUE

                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-NO
                          EVALUATE TRUE
                            WHEN WSS-STAT47-ABAWD-CHK
                              ADD +1 TO WSH-ABAWD-TRN-CT
                            WHEN WSS-STAT47-ABAWD-HIST
                              ADD +1 TO WSH-ABAWD-HIST-CT
                          END-EVALUATE
                    END-EVALUATE

      *** Exempt to exempt work registered.
               WHEN WSH-STAT47-ABAWD-IND-P    = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND      = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND  <> WSC-YES
                    EVALUATE TRUE
                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-YES
                       AND WSH-STAT47-HIDDEN-EXMT   = WSC-YES
                          SET WSS-ABAWD-SAME TO TRUE

                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-NO
                          EVALUATE TRUE
                            WHEN WSS-STAT47-ABAWD-CHK
                              ADD +1 TO WSH-ABAWD-TRN-CT
                            WHEN WSS-STAT47-ABAWD-HIST
                              ADD +1 TO WSH-ABAWD-HIST-CT
                          END-EVALUATE

                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-YES
                       AND WSH-STAT47-HIDDEN-EXMT   = WSC-NO
                          CONTINUE
                    END-EVALUATE

      *** Exempt exempt to ABAWD work registered.
               WHEN WSH-STAT47-ABAWD-IND-P    = WSC-YES
                AND WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND      = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND   = WSC-EXM
                   EVALUATE TRUE
                     WHEN WSS-STAT47-ABAWD-CHK
                       ADD +1 TO WSH-ABAWD-TRN-CT
                     WHEN WSS-STAT47-ABAWD-HIST
                       ADD +1 TO WSH-ABAWD-HIST-CT
                   END-EVALUATE

      *** Exempt work registered to ABAWD work registered.
               WHEN WSH-STAT47-ABAWD-IND-P    = WSC-YES
                AND WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND      = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND   = WSC-YES
                   EVALUATE TRUE
                     WHEN WSS-STAT47-ABAWD-CHK
                       ADD +1 TO WSH-ABAWD-TRN-CT
                     WHEN WSS-STAT47-ABAWD-HIST
                       ADD +1 TO WSH-ABAWD-HIST-CT
                   END-EVALUATE

               WHEN OTHER
                      CONTINUE

           END-EVALUATE

      *** For ABAWDs
      *** ABAWD indicator same in current data month - keep looking.
      *** 
      *** ABAWD indicator non ABAWD in current data month.   
      *** Might be a new ABAWD.  Continue Search for earlier transition
      *** 
      *** ABAWD indicator same in previous month - Not a new ABAWD
      *** This check is needed to prevent a transition from being 
      *** counted in later months.
      *** 
      *** ABAWD indicator non ABAWD in previous month   
      *** Might be a new ABAWD.   Search for earlier transition.
      *** Need to track detection until in a month prior to
      *** the current data month.   If ABAWD then not new.

      *** Same does not mean same.   
      *** ABAWD=E and WR is the same as ABAWD=Y and WR
           IF WSH-ABAWD-TRN-CT = WSC-ZERO-N
           AND WSS-STAT47-ABAWD-CHK
               IF  WSH-STAT47-AG-EFF-START-DT(1:7) < 
                   WSH-FIRST-DAY-OF-REPT-DT(1:7)
                   IF ((WSH-STAT47-ABAWD-IND     = WSC-EXM
                   OR   WSH-STAT47-ABAWD-IND     = WSC-YES)
                   AND  WSH-STAT47-WORK-REG-IND  = WSC-YES)
                   AND ((WSH-ABAWD-IND           = WSC-EXM
                   OR   WSH-ABAWD-IND            = WSC-YES)
                   AND  WSH-WRK-REG-IND          = WSC-YES)
                       SET WSS-STAT47-ABAWD-HIST TO TRUE
                   END-IF
               END-IF
           END-IF 

           IF WSH-ABAWD-TRN-CT > WSC-1
               MOVE SPACES TO WSS-STAT47-ABAWD-SW
           END-IF
          .

      ******************************************************************
      ** Check for changes since the beginning of the federal fiscal    
      ** year                                                           
      ******************************************************************
       12300-STAT47-WRK-REG-CHK.
           MOVE '12300-STAT47-WRK-REG-CHK'    TO WSL-PARA-NAME

           MOVE SPACES TO WSS-WR-SAME-SW 

           EVALUATE TRUE
               WHEN WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-WORK-REG-IND   = WSC-YES
                   SET WSS-WR-SAME TO TRUE

               WHEN WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-WORK-REG-IND  <> WSC-YES
                   EVALUATE TRUE
                     WHEN WSS-STAT47-WR-CHK
                       ADD +1 TO WSH-WR-TRN-CT
                     WHEN WSS-STAT47-WR-HIST
                       ADD +1 TO WSH-WR-HIST-CT
                   END-EVALUATE
           END-EVALUATE

           IF WSH-WR-TRN-CT = WSC-ZERO-N
           IF  WSH-STAT47-AG-EFF-START-DT(1:7) < 
               WSH-FIRST-DAY-OF-REPT-DT(1:7)
               IF WSH-WRK-REG-IND = WSH-STAT47-WORK-REG-IND
                       SET WSS-STAT47-WR-HIST TO TRUE
                   END-IF 
               END-IF
           END-IF

           IF WSH-WR-TRN-CT > WSC-1
               MOVE SPACES TO WSS-STAT47-WR-SW
           END-IF
          .
      *****************************************************************
      *  Cases created in a prior month and authorized in the current  
      *  will have the ABAWD transition in a prior month.              
      *  If the case is authorized in the current data month and not   
      *  authorized in a previous data month then we know that the     
      *  has not been on the 17E Caseload extract until the current    
      *  data month.                                                   
      *  Check two previous data months for an abawd/work registration 
      *  transition.   If found then report the transition as new in   
      *  the current data month.                                       
      *****************************************************************
       12400-CHK-AUTH-DATE.
           MOVE '12400-CHK-AUTH-DATE' TO WSL-PARA-NAME

      ******************************************************************
      *                         SQL# 180
      ******************************************************************
      *** IF THE CASE IS AUTHORIZED IN THE CURRENT DATA MONTH
           EXEC SQL
               SELECT DISTINCT :WSC-1
               INTO :WSH-LZ 
               FROM
                   AG_INDV_ELIG_RSLT A
                  ,AG_ELIG_RSLT      B
                  ,AG_AUTH           U
               WHERE 
                     A.CS_ID        = :WSH-CS-ID
                 AND A.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                 AND A.CS_ID        = B.CS_ID
                 AND A.CS_ID        = U.CS_ID
                 AND A.PGM_TYP_CD   = B.PGM_TYP_CD
                 AND A.PGM_TYP_CD   = U.PGM_TYP_CD
                 AND A.EDBC_SEQ     = B.EDBC_SEQ
                 AND A.EDBC_SEQ     = U.EDBC_SEQ
                 AND B.DELT_RCRD_SW = :WSC-NO
                 AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
                 AND A.ELIG_STS_CD  = :WSC-PASS

                 AND B.AG_EFF_START_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND B.AG_EFF_START_DT >=
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(B.AG_EFF_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')

                 AND U.CNFRM_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND U.CNFRM_DT >=
                     TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
           END-EXEC.

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                 SET WSS-AUTH-DATE-YES TO TRUE
               WHEN WSC-NOT-FOUND
                 CONTINUE
               WHEN OTHER
                 MOVE SQLCODE TO WSL-ERROR-VALUE
                 MOVE WSC-ERROR-FETCHING-CLWIN
                   TO WSL-CALWIN-ERROR-CODE
                 STRING 'ERROR SELECTING AUTH-DATE FROM' 
                        ' AG_AUTH'
                        ' CASE ID: ' WSH-CS-ID
                        ' PGM TYPE CD: ' WSH-PGM-TYP-CD
                        ' CWIN: ' WSH-AG-INDV-CWIN
                     DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                 SET  WSL-TERMINAL TO TRUE
                 PERFORM 91000-ERROR
           END-EVALUATE

      ******************************************************************
      *                         SQL# 190
      ******************************************************************
      *** AND THE CASE WAS NOT AUTHORIZED IN A PREVIOUS DATA MONTH
           EXEC SQL
               SELECT DISTINCT :WSC-1
               INTO :WSH-LZ
               FROM
                   AG_INDV_ELIG_RSLT A
                  ,AG_ELIG_RSLT      B
                  ,AG_AUTH           U
               WHERE 
                     A.CS_ID        = :WSH-CS-ID
                 AND A.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                 AND A.CS_ID        = B.CS_ID
                 AND A.CS_ID        = U.CS_ID
                 AND A.PGM_TYP_CD   = B.PGM_TYP_CD
                 AND A.PGM_TYP_CD   = U.PGM_TYP_CD
                 AND A.EDBC_SEQ     = B.EDBC_SEQ
                 AND A.EDBC_SEQ     = U.EDBC_SEQ
                 AND B.DELT_RCRD_SW = :WSC-NO
                 AND B.CUR_ELIG_IND IN 
                     (:WSC-AUTHORIZED, :WSC-CANCELLED)
                 AND A.ELIG_STS_CD  = :WSC-PASS

                 AND B.AG_EFF_START_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-PRV-RPT-DT,'YYYY-MM-DD')

                 AND U.CNFRM_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-PRV-RPT-DT,'YYYY-MM-DD')
           END-EXEC.

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                 MOVE SPACES TO WSS-AUTH-DATE-SW
               WHEN WSC-NOT-FOUND
                 CONTINUE
               WHEN OTHER
                 MOVE SQLCODE TO WSL-ERROR-VALUE
                 MOVE WSC-ERROR-FETCHING-CLWIN
                   TO WSL-CALWIN-ERROR-CODE
                 STRING 'ERROR SELECTING AUTH-DATE FROM' 
                        ' AG_AUTH'
                        ' CASE ID: ' WSH-CS-ID
                        ' PGM TYPE CD: ' WSH-PGM-TYP-CD
                        ' CWIN: ' WSH-AG-INDV-CWIN
                     DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                 SET  WSL-TERMINAL TO TRUE
                 PERFORM 91000-ERROR
           END-EVALUATE
          .
      *****************************************************************
      ** The following paragraph parses the EDBC history of cases that 
      ** that were authorized in the current data month.               
      *****************************************************************
       12500-CURRENT-MONTH-AUTH.
           MOVE '12500-CURRENT-MONTH-AUTH' TO WSL-PARA-NAME

      *** Save the current row so transitions from one state to another
      *** can be detected.
           MOVE WSH-STAT47-EDBC-SEQ
             TO WSH-STAT47-EDBC-SEQ-P
           MOVE WSH-STAT47-ABAWD-IND
             TO WSH-STAT47-ABAWD-IND-P
           MOVE WSH-STAT47-WORK-REG-IND
             TO WSH-STAT47-WORK-REG-IND-P
           MOVE WSH-STAT47-AG-EFF-START-DT
             TO WSH-STAT47-AG-EFF-START-DT-P

      *** Fetch the next row
           PERFORM 12950-FETCH-STAT47-PRIOR-CUR

      *** Check for hidden exemptions up front and virtualize
      *** the ABAWD exemption when one is found. 
           MOVE WSC-NO TO WSH-STAT47-HIDDEN-EXMT
           IF WSH-STAT47-AG-EFF-START-DT < WSC-ABAWD-PHASE1B-DT
           AND WSH-STAT47-ABAWD-IND <> WSC-SPACE
           AND NOT WSS-END-AUTH-CUR
              MOVE WSH-STAT47-AG-EFF-START-DT TO WSH-START-AOE-DT
              PERFORM 13000-CHECK-ABAWD-EXEMPT
              IF WSS-ABAWD-EXMT-FOUND
                 MOVE WSC-EXM TO WSH-STAT47-ABAWD-IND
                 MOVE WSC-YES TO WSH-STAT47-HIDDEN-EXMT
              ELSE
                 IF WSH-STAT47-AG-EFF-START-DT < WSC-ABAWD-PHASE1-DT
                 AND WSH-STAT47-ABAWD-IND = WSC-EXM
                 AND WSH-STAT47-WORK-REG-IND = WSC-YES
                    MOVE WSC-YES TO WSH-STAT47-ABAWD-IND
                 END-IF
              END-IF
           END-IF

      *** Rows that matter:  ABAWD Y and ABAWD E
      *** Changes that matter
      *** Blank to Y
      *** Blank to E
      *** Changes that don't matter
      *** Any value to Blank.

           IF NOT WSS-END-AUTH-CUR
               IF WSS-STAT47-ABAWD-CHK
                   PERFORM 12600-AUTH-ABAWD-CHK
               END-IF

               IF WSS-STAT47-WR-CHK
                   PERFORM 12700-AUTH-WRK-REG-CHK
               END-IF
           END-IF
          .
      ******************************************************************
      ** Check for an ABAWD transition within the two previous months   
      ** If a transition is found then the ABAWD might be new.          
      ******************************************************************
       12600-AUTH-ABAWD-CHK.
           MOVE '12600-AUTH-ABAWD-CHK'      TO WSL-PARA-NAME

           MOVE SPACES TO WSS-ABAWD-SAME-SW

      *** Check for hidden exemptions up front and virtualize
      *** the ABAWD exemption when one is found. 
           MOVE WSC-NO TO WSH-STAT47-HIDDEN-EXMT
           IF WSH-STAT47-AG-EFF-START-DT < WSC-ABAWD-PHASE1B-DT
           AND WSH-STAT47-ABAWD-IND <> WSC-SPACE
              MOVE WSH-STAT47-AG-EFF-START-DT TO WSH-START-AOE-DT
              PERFORM 13000-CHECK-ABAWD-EXEMPT
              IF WSS-ABAWD-EXMT-FOUND
                 MOVE WSC-EXM TO WSH-STAT47-ABAWD-IND
                 MOVE WSC-YES TO WSH-STAT47-HIDDEN-EXMT
              ELSE
                 IF WSH-STAT47-AG-EFF-START-DT < WSC-ABAWD-PHASE1-DT
                 AND WSH-STAT47-ABAWD-IND = WSC-EXM
                 AND WSH-STAT47-WORK-REG-IND = WSC-YES
                    MOVE WSC-YES TO WSH-STAT47-ABAWD-IND
                 END-IF
              END-IF
           END-IF

           EVALUATE TRUE
               WHEN WSH-STAT47-ABAWD-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND   = WSC-YES
                   SET WSS-ABAWD-SAME TO TRUE

               WHEN WSH-STAT47-ABAWD-IND-P    = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND      = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND   = WSC-YES
                    EVALUATE TRUE
                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-YES
                       AND WSH-STAT47-HIDDEN-EXMT   = WSC-YES
                          SET WSS-ABAWD-SAME TO TRUE

                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-NO
                       AND WSH-STAT47-HIDDEN-EXMT   = WSC-NO
                          SET WSS-ABAWD-SAME TO TRUE

                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-NO
                       AND WSH-STAT47-HIDDEN-EXMT   = WSC-YES
                          ADD +1 TO WSH-ABAWD-TRN-CT

                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-YES
                       AND WSH-STAT47-HIDDEN-EXMT   = WSC-NO
                          CONTINUE
                    END-EVALUATE

      *** Null to ABAWD.
               WHEN WSH-STAT47-ABAWD-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND   = WSC-SPACE
                   ADD +1 TO WSH-ABAWD-TRN-CT

      *** Null to exempt work registered.
      *** Possible hidden exemption not relevant because the WR
      *** transition is counted in any event.
               WHEN WSH-STAT47-ABAWD-IND-P    = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND      = WSC-SPACE
                    EVALUATE TRUE
                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-YES
                          CONTINUE

                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-NO
                          ADD +1 TO WSH-ABAWD-TRN-CT
                    END-EVALUATE

      *** Exempt to exempt work registered.
               WHEN WSH-STAT47-ABAWD-IND-P    = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND      = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND  <> WSC-YES
                    EVALUATE TRUE
                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-YES
                       AND WSH-STAT47-HIDDEN-EXMT   = WSC-YES
                          SET WSS-ABAWD-SAME TO TRUE

                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-NO
                          ADD +1 TO WSH-ABAWD-TRN-CT

                      WHEN WSH-STAT47-HIDDEN-EXMT-P = WSC-YES
                       AND WSH-STAT47-HIDDEN-EXMT   = WSC-NO
                          CONTINUE
                    END-EVALUATE

      *** Exempt to ABAWD work registered.
               WHEN WSH-STAT47-ABAWD-IND-P    = WSC-YES
                AND WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND      = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND   = WSC-EXM
                   ADD +1 TO WSH-ABAWD-TRN-CT

      *** Exempt work registered to ABAWD work registered.
               WHEN WSH-STAT47-ABAWD-IND-P    = WSC-YES
                AND WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-ABAWD-IND      = WSC-EXM
                AND WSH-STAT47-WORK-REG-IND   = WSC-YES
                  ADD +1 TO WSH-ABAWD-TRN-CT

               WHEN OTHER
                   CONTINUE
           END-EVALUATE

           IF WSH-ABAWD-TRN-CT > WSC-1
              MOVE SPACES TO WSS-STAT47-ABAWD-SW
           END-IF
          .

      ******************************************************************
      ** Check for changes in the previous two months.                  
      ******************************************************************
       12700-AUTH-WRK-REG-CHK.
           MOVE '12700-AUTH-WRK-REG-CHK'    TO WSL-PARA-NAME

           MOVE SPACES TO WSS-WR-SAME-SW 

           EVALUATE TRUE
               WHEN WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-WORK-REG-IND   = WSC-YES
                   SET WSS-WR-SAME TO TRUE

               WHEN WSH-STAT47-WORK-REG-IND-P = WSC-YES
                AND WSH-STAT47-WORK-REG-IND  <> WSC-YES
                   ADD +1 TO WSH-WR-TRN-CT
           END-EVALUATE

           IF WSH-WR-TRN-CT > WSC-1
               MOVE SPACES TO WSS-STAT47-WR-SW
           END-IF
          .

      *****************************************************************
      ** The following paragraph opens the MRB037E_STAT47_ABAWD_CUR    
      ** cursor.                                                       
      *****************************************************************
       12900-OPEN-STAT47-ABAWD-CUR.
           MOVE '12900-OPEN-STAT47-ABAWD-CUR' TO WSL-PARA-NAME

           EXEC SQL
              OPEN MRB037E_STAT47_ABAWD_CUR
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                CONTINUE
              WHEN OTHER
                MOVE SQLCODE TO WSL-ERROR-VALUE
                MOVE WSC-ERROR-OPENING-CUR-CLWIN
                  TO WSL-CALWIN-ERROR-CODE
                STRING 'ERROR OPENING MRB037E_STAT47_ABAWD_CUR CURSOR'
                     ' CS-ID: ' WSH-CS-ID 
                     ' CWIN: ' WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                SET WSL-TERMINAL TO TRUE
                PERFORM 91000-ERROR
           END-EVALUATE
           .

      ******************************************************************
      * This fetches rows for the current case/cwin to determine        
      * if the ABAWD or work registration indicators are newly set in   
      * the current reporting period and not previously set during the  
      * federal fiscal year                                             
      ******************************************************************
       12910-FETCH-STAT47-ABAWD-CUR.
           MOVE '12910-FETCH-STAT47-ABAWD-CUR ' TO WSL-PARA-NAME
           INITIALIZE WSH-STAT47-EDBC-SEQ
                      WSH-STAT47-ABAWD-IND
                      WSH-STAT47-WORK-REG-IND
                      WSH-STAT47-AG-EFF-START-DT

           EXEC SQL
               FETCH MRB037E_STAT47_ABAWD_CUR
                   INTO :WSH-STAT47-EDBC-SEQ
                       ,:WSH-STAT47-ABAWD-IND
                       ,:WSH-STAT47-WORK-REG-IND
                       ,:WSH-STAT47-AG-EFF-START-DT
           END-EXEC

           EVALUATE SQLCODE
             WHEN WSC-SQL-OK
               CONTINUE

             WHEN WSC-NOT-FOUND
               SET WSS-END-STAT47-CUR TO TRUE

             WHEN OTHER
               MOVE SQLCODE TO WSL-ERROR-VALUE
               MOVE WSC-ERROR-FETCHING-CLWIN
                 TO WSL-CALWIN-ERROR-CODE
               STRING 'ERROR FETCHING MRB037E_STAT47_ABAWD_CUR CURSOR'
                      ' CS-ID: ' WSH-CS-ID 
                      ' CWIN: ' WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
               SET  WSL-TERMINAL TO TRUE
               PERFORM 91000-ERROR
           END-EVALUATE
           .

      ***************************************************************
      ** Close the MRB037E_STAT47_ABAWD_CUR cursor.                  
      ***************************************************************
       12930-CLOSE-STAT47-ABAWD-CUR.
           MOVE '12930-CLOSE-STAT47-ABAWD-CUR ' TO WSL-PARA-NAME

           EXEC SQL
               CLOSE MRB037E_STAT47_ABAWD_CUR
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                   CONTINUE
              WHEN OTHER
                MOVE SQLCODE TO WSL-ERROR-VALUE
                MOVE WSC-ERROR-CLOSING-CUR-CLWIN
                  TO WSL-CALWIN-ERROR-CODE
                STRING 'ERROR CLOSING MRB037E_STAT47_ABAWD_CUR CURSOR'
                       ' CS-ID: ' WSH-CS-ID 
                       ' CWIN: ' WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                SET WSL-TERMINAL TO TRUE
                PERFORM 91000-ERROR
           END-EVALUATE
           .

      ***PRIOR*********************************************************
      ** The following paragraph opens the MRB037E_STAT47_PRIOR_CUR    
      ** cursor.                                                       
      *****************************************************************
       12940-OPEN-STAT47-PRIOR-CUR.
           MOVE '12940-OPEN-STAT47-PRIOR-CUR' TO WSL-PARA-NAME

           EXEC SQL
              OPEN MRB037E_STAT47_PRIOR_CUR
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                  CONTINUE
              WHEN OTHER
                MOVE SQLCODE TO WSL-ERROR-VALUE
                MOVE WSC-ERROR-OPENING-CUR-CLWIN
                  TO WSL-CALWIN-ERROR-CODE
                STRING 'ERROR OPENING MRB037E_STAT47_PRIOR_CUR CURSOR'
                       ' CS-ID: ' WSH-CS-ID 
                       ' CWIN: ' WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                SET WSL-TERMINAL TO TRUE
                PERFORM 91000-ERROR
           END-EVALUATE
           .

      ***PRIOR*********************************************************
      * This fetches rows for the current case/cwin to determine       
      * if the ABAWD or work registration indicators are newly set in  
      * the previous reporting period                                  
      *****************************************************************
       12950-FETCH-STAT47-PRIOR-CUR.
           MOVE '12950-FETCH-STAT47-PRIOR-CUR ' TO WSL-PARA-NAME
           INITIALIZE WSH-STAT47-EDBC-SEQ
                      WSH-STAT47-ABAWD-IND
                      WSH-STAT47-WORK-REG-IND
                      WSH-STAT47-AG-EFF-START-DT

           EXEC SQL
               FETCH MRB037E_STAT47_PRIOR_CUR
                   INTO :WSH-STAT47-EDBC-SEQ
                       ,:WSH-STAT47-ABAWD-IND
                       ,:WSH-STAT47-WORK-REG-IND
                       ,:WSH-STAT47-AG-EFF-START-DT
           END-EXEC

           EVALUATE SQLCODE
             WHEN WSC-SQL-OK
               CONTINUE

             WHEN WSC-NOT-FOUND
               SET WSS-END-AUTH-CUR TO TRUE

             WHEN OTHER
               MOVE SQLCODE TO WSL-ERROR-VALUE
               MOVE WSC-ERROR-FETCHING-CLWIN
                 TO WSL-CALWIN-ERROR-CODE
               STRING 'ERROR FETCHING MRB037E_STAT47_PRIOR_CUR CURSOR'
                      ' CS-ID: ' WSH-CS-ID 
                      ' CWIN: ' WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
               SET WSL-TERMINAL TO TRUE
               PERFORM 91000-ERROR
           END-EVALUATE
           .

      ***PRIOR*********************************************************
      ** Close the MRB037E_STAT47_PRIOR_CUR cursor.                    
      *****************************************************************
       12960-CLOSE-STAT47-PRIOR-CUR.
           MOVE '12960-CLOSE-STAT47-PRIOR-CUR ' TO WSL-PARA-NAME

           EXEC SQL
               CLOSE MRB037E_STAT47_PRIOR_CUR
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                   CONTINUE
              WHEN OTHER
                MOVE SQLCODE TO WSL-ERROR-VALUE
                MOVE WSC-ERROR-CLOSING-CUR-CLWIN
                  TO WSL-CALWIN-ERROR-CODE
                STRING 'ERROR CLOSING MRB037E_STAT47_PRIOR_CUR CURSOR'
                       ' CS-ID: ' WSH-CS-ID 
                       ' CWIN: ' WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                SET WSL-TERMINAL TO TRUE
                PERFORM 91000-ERROR
           END-EVALUATE
           .
      *****************************************************************
      * The paragraph looks for following ABAWD exemptions             
      * Pregnancy and Living in a household with a child under 18      
      * ABAWD Only Exemption                                           
      * WSH-LAST-DAY-AOE-DT and WSH-FIRST-DAY-AOE-DT                   
      * must be initialized by the calling paragraph                   
      *****************************************************************
       13000-CHECK-ABAWD-EXEMPT.
           MOVE '13000-CHECK-ABAWD-EXEMPT ' TO WSL-PARA-NAME
           INITIALIZE  WSS-ABAWD-EXMT-SW

      * TO_DATE(WSH-START-AOE-DT,'YYYY-MM-DD')
      * Add minus one month to the last_day date then add one day to 
      * get the first day of the month.
           EXEC SQL
                SELECT
                  TO_CHAR(LAST_DAY(ADD_MONTHS
                  (TO_DATE(:WSH-START-AOE-DT,'YYYY-MM-DD'),-1))+1,
                  'YYYY-MM-DD')
                  ,TO_CHAR(LAST_DAY
                  (TO_DATE(:WSH-START-AOE-DT,'YYYY-MM-DD')),
                  'YYYY-MM-DD') 
                INTO
                    :WSH-FIRST-DAY-AOE-DT,
                    :WSH-LAST-DAY-AOE-DT
                FROM DUAL
           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   CONTINUE
               WHEN OTHER
                 MOVE SQLCODE          TO WSL-ERROR-VALUE
                 MOVE WSC-ERROR-SELECTING-CLWIN
                   TO WSL-CALWIN-ERROR-CODE
                 STRING 'ERROR SELECTING AOE DATE FROM DUAL'
                        ' CS-ID: ' WSH-CS-ID 
                        ' CWIN: ' WSH-AG-INDV-CWIN
                     DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                 SET  WSL-TERMINAL          TO TRUE
                 PERFORM 91000-ERROR
             END-EVALUATE

           PERFORM 13020-CHECK-PREG-END-DT 
           IF NOT WSS-ABAWD-EXMT-FOUND
               PERFORM 13040-CHECK-PREG-EFF-END-DT
           END-IF

      ***  CHILD UNDER 18 IN HH Validation
           EXEC SQL 
               SELECT DISTINCT: WSC-1
               INTO :WSH-LZ
               FROM AG_INDV_ELIG_RSLT A
                   ,AG_ELIG_RSLT B
               WHERE A.CS_ID        = :WSH-CS-ID
                 AND B.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                 AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
                 AND B.DELT_RCRD_SW = :WSC-NO
                 AND B.AG_EFF_START_DT <= 
                     TO_DATE(:WSH-LAST-DAY-AOE-DT,'YYYY-MM-DD')
                 AND NVL(B.AG_EFF_END_DT,F_HIGH_DT) >=
                     TO_DATE(:WSH-FIRST-DAY-AOE-DT,'YYYY-MM-DD')
                 AND A.CS_ID    = B.CS_ID
                 AND A.EDBC_SEQ = B.EDBC_SEQ
                 AND ( (A.PRM_PRTCP_STS_CD IN
                       (:WSC-IN,:WSC-MI,:WSC-IE,:WSC-SN)
                       )
                    OR (  A.PRM_PRTCP_STS_CD = :WSC-EX
                        AND EXISTS
                           (SELECT 1
                            FROM AG_INDV_ELIG_RSN C
                            WHERE C.CS_ID    = A.CS_ID
                              AND C.EDBC_SEQ = A.EDBC_SEQ
                              AND C.CWIN     = A.CWIN
                              AND C.RSN_COD  = :WSC-FAS051)
                       )
                     )
                   AND A.INDV_TYP_CD = :WSC-CHILD
           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    SET WSS-ABAWD-EXMT-FOUND TO TRUE
               WHEN WSC-NOT-FOUND
                    CONTINUE
               WHEN OTHER
                   MOVE SQLCODE           TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-SELECTING-CLWIN
                     TO WSL-CALWIN-ERROR-CODE
                   STRING 'ERROR SELECTING CHILD IN HH QUERY'
                          ' CASE ID: ' WSH-CS-ID 
                          ' CWIN: ' WSH-AG-INDV-CWIN
                       DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                   SET  WSL-TERMINAL          TO TRUE
                   PERFORM 91000-ERROR
             END-EVALUATE
           .

      *****************************************************************
      * The paragraph looks for following ABAWD exemptions             
      * Pregnancy END DATE                                             
      *****************************************************************
       13020-CHECK-PREG-END-DT.
           MOVE '13020-CHECK-PREG-END-DT ' TO WSL-PARA-NAME

      ***  PREGNANCY Validation
           EXEC SQL
               SELECT DISTINCT :WSC-1
                 INTO :WSH-LZ
                 FROM INDV_PREG
                 WHERE CWIN = :WSH-AG-INDV-CWIN
                   AND EFF_BGN_DT <= 
                       TO_DATE(:WSH-LAST-DAY-AOE-DT,'YYYY-MM-DD')
                   AND NVL(PREG_END_DT, F_HIGH_DT) >=
                       TO_DATE(:WSH-FIRST-DAY-AOE-DT,'YYYY-MM-DD')
                   AND NVL(PREG_END_DT, F_HIGH_DT) <=
                       TO_DATE(:WSH-LAST-DAY-AOE-DT,'YYYY-MM-DD')
           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   SET WSS-ABAWD-EXMT-FOUND TO TRUE
               WHEN WSC-NOT-FOUND
                   CONTINUE
               WHEN OTHER
                 MOVE SQLCODE          TO WSL-ERROR-VALUE
                 MOVE WSC-ERROR-SELECTING-CLWIN
                   TO WSL-CALWIN-ERROR-CODE
                 STRING 'ERROR SELECTING FROM INDV_PREG TABLE'
                        ' CS-ID ' WSH-CS-ID
                        ' CWIN: ' WSH-AG-INDV-CWIN
                     DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                 SET  WSL-TERMINAL          TO TRUE
                 PERFORM 91000-ERROR
           END-EVALUATE
           .

      *****************************************************************
      * The paragraph looks for following ABAWD exemptions             
      * Pregnancy EFFECTIVE END DATE                                   
      *****************************************************************
       13040-CHECK-PREG-EFF-END-DT.
           MOVE '13040-CHECK-PREG-EFF-END-DT ' TO WSL-PARA-NAME

      ***  PREGNANCY Validation
           EXEC SQL
               SELECT DISTINCT :WSC-1
                 INTO :WSH-LZ
                 FROM INDV_PREG
                 WHERE CWIN = :WSH-AG-INDV-CWIN
                   AND EFF_BGN_DT <= 
                       TO_DATE(:WSH-LAST-DAY-AOE-DT,'YYYY-MM-DD')
                   AND NVL(EFF_END_DT, F_HIGH_DT) >=
                       TO_DATE(:WSH-FIRST-DAY-AOE-DT,'YYYY-MM-DD')
                   AND NVL(EFF_END_DT, F_HIGH_DT) <=
                       TO_DATE(:WSH-LAST-DAY-AOE-DT,'YYYY-MM-DD')
                   AND PREG_END_DT IS NULL
           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   SET WSS-ABAWD-EXMT-FOUND TO TRUE
               WHEN WSC-NOT-FOUND
                   CONTINUE
               WHEN OTHER
                 MOVE SQLCODE          TO WSL-ERROR-VALUE
                 MOVE WSC-ERROR-SELECTING-CLWIN
                   TO WSL-CALWIN-ERROR-CODE
                 STRING 'ERROR SELECTING FROM INDV_PREG TABLE'
                        ' CS-ID ' WSH-CS-ID
                        ' CWIN: ' WSH-AG-INDV-CWIN
                     DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                 SET  WSL-TERMINAL          TO TRUE
                 PERFORM 91000-ERROR
           END-EVALUATE
           .
      ***Break in Aid***************************************************
      ** This paragraph searches individual assistance for breaks       
      ** in aid.   Each break in aid is a transition to ABAWD or        
      ** ABAWD Exempt                                                   
      ** bgn dt after the first in the data month - break in aid        
      **                                                                
      ** bgn dt before the first of the data month - not a break in aid 
      **                                                                
      ** bgn dt on first of the month and prior end dt on last day      
      ** of previous month - Not a break in aid.                        
      **                                                                
      ** bgn dt on first of the month and prior end dt before           
      ** last day of previous month - Break in aid.                     
      **                                                                
      ******************************************************************
       14000-BREAK-IN-AID.
           MOVE '14000-BREAK-IN-AID' TO WSL-PARA-NAME

           SET WSS-BIA-ABAWD-CHK TO TRUE
           SET WSS-BIA-WR-CHK    TO TRUE

           PERFORM 14900-OPEN-STAT47-BIA-CUR

      ***  Fetch the first row.
           PERFORM 14920-FETCH-STAT47-BIA-CUR

      ***  If the aid started before the start of the FFY then
      ***  there is no break in aid.
           IF WSH-IA-BGN-DT < WSH-FIRST-DAY-OF-FFY-X
               SET WSS-BIA-DONE TO TRUE
           END-IF

           MOVE WSH-AG-EFF-START-DT TO WSH-AG-EFF-START-DAY-02
           MOVE WSC-02              TO WSH-AG-EFF-START-DAY-02(9:2)

      ***  Loop through the individual aid history for this case/cwin
      ***  looking for a resumption of aid after a break in aid in the
      ***  federal fiscal year.
           PERFORM 14100-PARSE-INDV-AID
               UNTIL WSS-END-BIA-CUR
                  OR WSS-BIA-DONE

           PERFORM 14940-CLOSE-STAT47-BIA-CUR

           IF WSS-BIA-ABAWD-HIST
               SET WSS-STAT47-ABAWD-HIST TO TRUE
           END-IF

           IF WSS-BIA-WR-HIST
               SET WSS-STAT47-WR-HIST    TO TRUE
           END-IF
           .

      ***Break in Aid**************************************************
      ** Process the INDV_ASST rows looking for breaks in aid.         
      **                                                               
      ** Breaks in aid before the data month.   These need to be       
      ** counted as they would have been a break in aid when they      
      ** occurred.  Note this logic different dates.                   
      **                                                               
      ** bgn dt after the first of the month.   Break in aid           
      **                                                               
      ** bgn dt on first of the month and prior end dt on              
      ** last day of the previous month - Not a break in aid.          
      **                                                               
      ** bgn dt on first in the month and prior end dt before          
      ** last day of previous month - Break in aid.                    
      *****************************************************************
       14100-PARSE-INDV-AID.
           MOVE '14100-PARSE-INDV-AID' TO WSL-PARA-NAME

      ***  Move the current row to the previously fetched row.
           MOVE WSH-IA-BGN-DT TO WSH-IA-BGN-DT-P
           MOVE WSH-IA-END-DT TO WSH-IA-END-DT-P
           MOVE WSH-LAST-DAY-BIA-DT   TO WSH-LAST-DAY-BIA-DT-P
           MOVE WSH-LAST-DAY-BIA-DT-P TO WSH-FIRST-DAY-BIA-DT-P
           MOVE WSC-01                TO WSH-FIRST-DAY-BIA-DT-P(9:2)

      ***  Fetch the next row.
           PERFORM 14920-FETCH-STAT47-BIA-CUR
           SET WSS-SKIP-BIA TO TRUE

      **   Set the first day of the month the aid resumes.
      **   Last day was returned by the fetch statement.
           MOVE WSH-IA-BGN-DT       TO WSH-FIRST-DAY-BIA-DT
           MOVE WSC-01              TO WSH-FIRST-DAY-BIA-DT(9:2)

           MOVE WSH-ABAWD-TRN-CT TO WSH-ABAWD-TRN-CT-D
           MOVE WSH-WR-TRN-CT    TO WSH-WR-TRN-CT-D

      ***  Skip break in aid check when resumption of aid was 
      ***  indirectly detected by partial month or when a transition
      ***  coincides with resumption of aid on the first of the
      ***  month
           IF  NOT WSS-END-BIA-CUR
             EVALUATE TRUE

      ***      Skip break in aid check when transitions found in EDBC
      ***      in current data month
      ***      Skip break in aid check regardless of day of month 
      ***      when resumption of aid occurs in same YYYY-MM as 
      ***      ag effective start date
                WHEN WSH-IA-BGN-DT-P(1:7) = WSH-AG-EFF-START-DT(1:7)
                AND (WSH-ABAWD-TRN-CT > 0
                  OR WSH-WR-TRN-CT    > 0)
                 SET WSS-SKIP-BIA TO TRUE

      ***      Do break in aid check when no transitions found in EDBC
      ***      in current data month
                WHEN WSH-IA-BGN-DT-P(1:7) = WSH-AG-EFF-START-DT(1:7)
                AND WSH-ABAWD-TRN-CT = 0
                AND WSH-WR-TRN-CT    = 0
                 SET WSS-DO-BIA TO TRUE

      ***      Do break in aid when resumption of aid is less than
      ***      the second of the month and above conditions not met
      ***      This ensures a full check of history because the bgn dt
      ***      is not tied to the eligibility YYYY-MM
               WHEN WSH-IA-BGN-DT-P < WSH-AG-EFF-START-DAY-02
                 SET WSS-DO-BIA TO TRUE

      ***      
      ***      
               WHEN OTHER
                 SET WSS-SKIP-BIA TO TRUE
             END-EVALUATE

             IF WSS-DO-BIA
                   PERFORM 14200-PROCESS-BIA-ROW
             END-IF

             IF WSH-IA-BGN-DT <= WSH-FIRST-DAY-OF-FFY-X
                 SET WSS-BIA-DONE TO TRUE
             END-IF
           END-IF
           .

      ******************************************************************
      ** A break in aid was detected.   Determine if the case-CWIN was  
      ** ABAWD or Work Registered when aid resumed.                     
      ******************************************************************
       14200-PROCESS-BIA-ROW.
           MOVE '14200-PROCESS-BIA-ROW' TO WSL-PARA-NAME

      ***  Calculate difference between prior beg date and end date
           EXEC SQL
               SELECT TO_DATE(:WSH-IA-BGN-DT-P,'YYYY-MM-DD') - 
                      TO_DATE(:WSH-IA-END-DT,'YYYY-MM-DD')
                 INTO :WSH-IA-DIFF
                 FROM DUAL
           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   CONTINUE
               WHEN OTHER
                 MOVE SQLCODE          TO WSL-ERROR-VALUE
                 MOVE WSC-ERROR-SELECTING-CLWIN
                   TO WSL-CALWIN-ERROR-CODE
                 STRING 'ERROR SELECTING DATE DIFFERENCE'
                        ' CS-ID ' WSH-CS-ID
                        ' CWIN: ' WSH-AG-INDV-CWIN
                        ' BGN-DT-P ' WSH-IA-BGN-DT-P
                        ' END-DT ' WSH-IA-END-DT
                     DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                 SET  WSL-TERMINAL          TO TRUE
                 PERFORM 91000-ERROR
           END-EVALUATE

           MOVE WSH-IA-DIFF TO WSH-IA-DIFF-D

      ***  When the difference between the begin date more recent row
      ***  and the end date on the previous row is more than one day 
      ***  there is a break in aid.   The difference is expressed as 
      ***  date arthmetic in the break in aid cursor.
      ***  TO_DATE(:WSH-IA-BGN-DT-P,'YYYY-MM-DD') - END_DT

           IF WSH-IA-DIFF > WSC-1-N
              PERFORM 14220-BIA-EDBC-DATA
              IF WSH-IA-BGN-DT-P < WSH-FIRST-DAY-OF-REPT-DT
                  SET WSS-BIA-ABAWD-HIST TO TRUE
                  SET WSS-BIA-WR-HIST TO TRUE
              END-IF

              IF WSH-STAT47-WRK-REG-IND-B = WSC-YES
                  PERFORM 14300-CHECK-ABAWD-ONLY-EXMT
                  IF WSS-BIA-WR-HIST
                      ADD +1 TO WSH-WR-HIST-CT
                      IF WSS-BIA-ABAWD-EXMT-NO
                          IF WSH-STAT47-ABAWD-IND-B <> WSC-SPACE
                              ADD +1 TO WSH-ABAWD-HIST-CT
                          END-IF
                      END-IF
                  ELSE
                      ADD +1 TO WSH-WR-TRN-CT
                      IF WSS-BIA-ABAWD-EXMT-NO
                          IF WSH-STAT47-ABAWD-IND-B <> WSC-SPACE
                              ADD +1 TO WSH-ABAWD-TRN-CT
                          END-IF
                      END-IF
                  END-IF
              END-IF
           END-IF
           .

      ******************************************************************
      ** A break in aid was detected.   Determine if the case-CWIN was  
      ** ABAWD or Work Registered when aid resumed.                     
      ******************************************************************
       14220-BIA-EDBC-DATA.
           MOVE '14220-BIA-EDBC-DATA' TO WSL-PARA-NAME

           MOVE SPACES TO WSH-STAT47-ABAWD-IND-B
                          WSH-STAT47-WRK-REG-IND-B

           EXEC SQL
              SELECT TO_CHAR(MAX(B.AG_EFF_START_DT),'YYYY-MM-DD')
              INTO :WSH-MAX-AG-EFF-START-DT
                   :WSH-MAX-AG-EFF-START-DT-I
              FROM
                    AG_INDV_ELIG_RSLT A
                   ,AG_ELIG_RSLT      B
              WHERE
                    A.CS_ID        = :WSH-CS-ID
                AND A.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                AND A.CWIN         = :WSH-AG-INDV-CWIN
                AND A.CS_ID        = B.CS_ID
                AND A.PGM_TYP_CD   = B.PGM_TYP_CD
                AND A.EDBC_SEQ     = B.EDBC_SEQ
                AND B.DELT_RCRD_SW = :WSC-NO
                AND A.ELIG_STS_CD  = :WSC-PASS
                AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
                AND B.AG_EFF_START_DT <= 
                    TO_DATE(:WSH-LAST-DAY-BIA-DT-P,'YYYY-MM-DD')
                AND NVL(B.AG_EFF_END_DT,F_HIGH_DT) >=
                    TO_DATE(:WSH-FIRST-DAY-BIA-DT,'YYYY-MM-DD')
           END-EXEC.
 
      ***  MAX does not return not-found.  Not found returns null
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   IF WSH-MAX-AG-EFF-START-DT-I >= WSC-ZERO-N
                       PERFORM 14230-BIA-EDBC-SEQ
                   END-IF
               WHEN OTHER
                   MOVE SQLCODE TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-FETCHING-CLWIN
                     TO WSL-CALWIN-ERROR-CODE
                   STRING 'ERROR SELECTING MAX AG_EFF_START_DT FROM' 
                          ' AG_ELIG_RSLT'
                          ' CASE ID: ' WSH-CS-ID
                          ' PGM TYPE CD: ' WSH-PGM-TYP-CD
                          ' CWIN: ' WSH-AG-INDV-CWIN
                       DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                   SET  WSL-TERMINAL TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE
           .

      ******************************************************************
      ** A break in aid was detected.   Determine the EDBC sequence     
      ** number so the ABAWD and WR indicators can be selected.         
      ******************************************************************
       14230-BIA-EDBC-SEQ.
           MOVE '14230-BIA-EDBC-SEQ' TO WSL-PARA-NAME

      ******************************************************************
      *                         SQL# 260
      ******************************************************************
      ***  Get the max EDBC sequence number for month aid resumes.
      ***  MAX does not return not-found.  Not found returns null
           EXEC SQL
              SELECT NVL(MAX(B.EDBC_SEQ),:WSC-ZERO-N)
              INTO :WSH-BIA-EDBC-SEQ
              FROM
                    AG_INDV_ELIG_RSLT A
                   ,AG_ELIG_RSLT      B
              WHERE
                    A.CS_ID        = :WSH-CS-ID
                AND A.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                AND A.CWIN         = :WSH-AG-INDV-CWIN
                AND A.CS_ID        = B.CS_ID
                AND A.PGM_TYP_CD   = B.PGM_TYP_CD
                AND A.EDBC_SEQ     = B.EDBC_SEQ
                AND B.DELT_RCRD_SW = :WSC-NO
                AND A.ELIG_STS_CD  = :WSC-PASS
                AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
                AND B.AG_EFF_START_DT =
                    TO_DATE(:WSH-MAX-AG-EFF-START-DT,'YYYY-MM-DD')
           END-EXEC.
 
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                   IF WSH-MAX-EDBC-SEQ > WSC-ZERO-N
                       PERFORM 14240-BIA-GET-INDICATORS
                   END-IF
               WHEN OTHER
                   MOVE SQLCODE TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-FETCHING-CLWIN
                     TO WSL-CALWIN-ERROR-CODE
                   STRING 'ERROR SELECTING MAX EDBC_SEQ FROM' 
                          ' AG_ELIG_RSLT'
                          ' CASE ID: ' WSH-CS-ID
                          ' PGM TYPE CD: ' WSH-PGM-TYP-CD
                          ' CWIN: ' WSH-AG-INDV-CWIN
                          ' BIA FIRST DAY ' WSH-FIRST-DAY-BIA-DT
                          ' BIA LAST DAY ' WSH-LAST-DAY-BIA-DT-P
                       DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                   SET  WSL-TERMINAL TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE
           .

      ***Break in Aid**************************************************
      ** Get the ABAWD and WR indicators for the EDBC seq and date     
      *****************************************************************
       14240-BIA-GET-INDICATORS.
           MOVE '14240-BIA-GET-INDICATORS' TO WSL-PARA-NAME
      ******************************************************************
      *                         SQL# 270
      ******************************************************************
      ***  Get the row for this EDBC sequence number.
           EXEC SQL
              SELECT NVL(A.ABAWD_IND,:WSC-SPACE)
                    ,NVL(A.WRK_REG_IND,:WSC-SPACE)
              INTO :WSH-STAT47-ABAWD-IND-B
                  ,:WSH-STAT47-WRK-REG-IND-B
              FROM
                    AG_INDV_ELIG_RSLT A
                   ,AG_ELIG_RSLT      B
              WHERE
                    A.CS_ID        = :WSH-CS-ID
                AND A.CWIN         = :WSH-AG-INDV-CWIN
                AND A.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                AND A.EDBC_SEQ     = :WSH-BIA-EDBC-SEQ
                AND A.CS_ID        = B.CS_ID
                AND A.PGM_TYP_CD   = B.PGM_TYP_CD
                AND A.EDBC_SEQ     = B.EDBC_SEQ
                AND B.DELT_RCRD_SW = :WSC-NO
                AND A.ELIG_STS_CD  = :WSC-PASS
                AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
                AND B.AG_EFF_START_DT =
                    TO_DATE(:WSH-MAX-AG-EFF-START-DT,'YYYY-MM-DD')
           END-EXEC.
 
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               WHEN WSC-MULTIPLE-ROWS
               WHEN WSC-NOT-FOUND
                    CONTINUE
               WHEN OTHER
                 MOVE SQLCODE TO WSL-ERROR-VALUE
                 MOVE WSC-ERROR-FETCHING-CLWIN
                   TO WSL-CALWIN-ERROR-CODE
                 STRING 'ERROR SELECTING DATA FROM' 
                        ' AG_ELIG_RSLT, AG_INDV_ELIG_RSLT'
                        ' CASE ID: ' WSH-CS-ID
                        ' PGM TYPE CD: ' WSH-PGM-TYP-CD
                        ' CWIN: ' WSH-AG-INDV-CWIN
                        ' BIA EDBC SEQ ' WSH-BIA-EDBC-SEQ
                     DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                 SET  WSL-TERMINAL TO TRUE
                 PERFORM 91000-ERROR
           END-EVALUATE
           .

      ***Break in Aid**************************************************
      ** Check the ABAWD only exemptions for the month aid resumed.    
      *****************************************************************
       14300-CHECK-ABAWD-ONLY-EXMT.
           MOVE '14300-CHECK-ABAWD-ONLY-EXMT' TO WSL-PARA-NAME

      ***  Pregnancy or Living in a CalFresh Household with a 
      ***  child under eighteen
      ***  No need to run this query unless the ABAWD ind is E

      ***  PREGNANCY
           EXEC SQL
               SELECT DISTINCT :WSC-1
                 INTO :WSH-LZ
               FROM INDV_PREG
               WHERE CWIN = :WSH-AG-INDV-CWIN
                 AND EFF_BGN_DT <= 
                     TO_DATE(:WSH-LAST-DAY-BIA-DT-P,'YYYY-MM-DD')
                 AND NVL(EFF_END_DT,F_HIGH_DT) >=
                     TO_DATE(:WSH-FIRST-DAY-BIA-DT-P,'YYYY-MM-DD')
                 AND NVL(PREG_END_DT,F_HIGH_DT) >=
                     TO_DATE(:WSH-FIRST-DAY-BIA-DT-P,'YYYY-MM-DD')
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
                  SET WSS-BIA-ABAWD-EXMT-YES TO TRUE

              WHEN WSC-NOT-FOUND
                  SET WSS-BIA-ABAWD-EXMT-NO TO TRUE

              WHEN OTHER
                MOVE SQLCODE          TO WSL-ERROR-VALUE
                MOVE WSC-ERROR-SELECTING-CLWIN
                  TO WSL-CALWIN-ERROR-CODE
                STRING 'ERROR SELECTING FROM INDV_PREG TABLE'
                       ' CS-ID: ' WSH-CS-ID 
                       ' CWIN: ' WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                SET  WSL-TERMINAL          TO TRUE
                PERFORM 91000-ERROR
           END-EVALUATE

      ***  CHILD UNDER 18 IN HH
      ***  The prior IF statement may set the ABAWD indicator to N
      ***  No need to run this query unless the ABAWD ind is E
           IF WSS-BIA-ABAWD-EXMT-NO 
               EXEC SQL 
                   SELECT DISTINCT :WSC-1
                     INTO :WSH-LZ
                     FROM AG_INDV_ELIG_RSLT A
                         ,AG_ELIG_RSLT B
                     WHERE A.CS_ID        = :WSH-CS-ID
                       AND B.PGM_TYP_CD   = :WSH-PGM-TYP-CD
                       AND B.CUR_ELIG_IND = :WSC-AUTHORIZED
                       AND B.DELT_RCRD_SW = :WSC-NO
                       AND B.AG_EFF_START_DT <= 
                           TO_DATE(:WSH-LAST-DAY-BIA-DT-P,'YYYY-MM-DD')
                       AND NVL(B.AG_EFF_END_DT,F_HIGH_DT) >=
                           TO_DATE(:WSH-FIRST-DAY-BIA-DT-P,'YYYY-MM-DD')
                       AND A.CS_ID    = B.CS_ID
                       AND A.EDBC_SEQ = B.EDBC_SEQ
                       AND (   (A.PRM_PRTCP_STS_CD IN
                               (:WSC-IN,:WSC-MI,:WSC-IE,:WSC-SN)
                               )
                            OR (    A.PRM_PRTCP_STS_CD = :WSC-EX
                                AND EXISTS
                                   (SELECT 1
                                    FROM AG_INDV_ELIG_RSN C
                                    WHERE C.CS_ID    = A.CS_ID
                                      AND C.EDBC_SEQ = A.EDBC_SEQ
                                      AND C.CWIN     = A.CWIN
                                      AND C.RSN_COD  = :WSC-FAS051)
                               )
                           )
                       AND A.INDV_TYP_CD = :WSC-CHILD
               END-EXEC

               EVALUATE SQLCODE
                  WHEN WSC-SQL-OK
                      SET WSS-BIA-ABAWD-EXMT-YES TO TRUE

                  WHEN WSC-NOT-FOUND
                      SET WSS-BIA-ABAWD-EXMT-NO TO TRUE

                   WHEN OTHER
                       MOVE SQLCODE           TO WSL-ERROR-VALUE
                       MOVE WSC-ERROR-SELECTING-CLWIN
                         TO WSL-CALWIN-ERROR-CODE
                       STRING 'ERROR SELECTING CHILD IN HH QUERY'
                              ' CS-ID: ' WSH-CS-ID 
                              ' CWIN: ' WSH-AG-INDV-CWIN
                         DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                       SET  WSL-TERMINAL          TO TRUE
                       PERFORM 91000-ERROR
               END-EVALUATE
           END-IF
           .

      ***Break in Aid**************************************************
      ** Open the MRB037E_STAT47_PRIOR_CUR cursor.                     
      *****************************************************************
       14900-OPEN-STAT47-BIA-CUR.
           MOVE '14900-OPEN-STAT47-BIA-CUR' TO WSL-PARA-NAME

           INITIALIZE WSS-END-BIA-CUR-SW
                      WSS-BIA-DONE-SW

           EXEC SQL
               OPEN MRB037E_STAT47_BIA_CUR
           END-EXEC

           EVALUATE SQLCODE
             WHEN WSC-SQL-OK
               CONTINUE

             WHEN OTHER
               MOVE SQLCODE TO WSL-ERROR-VALUE
               MOVE WSC-ERROR-FETCHING-CLWIN
                 TO WSL-CALWIN-ERROR-CODE
               STRING 'ERROR OPENING MRB037E_STAT47_BIA_CUR CURSOR'
                      ' CS-ID ' WSH-CS-ID
                      ' CWIN: ' WSH-AG-INDV-CWIN
                   DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
               SET  WSL-TERMINAL TO TRUE
               PERFORM 91000-ERROR
           END-EVALUATE
           .

      ***Break in Aid**************************************************
      ** Fetch the MRB037E_STAT47_PRIOR_CUR cursor.                    
      *****************************************************************
       14920-FETCH-STAT47-BIA-CUR.
           MOVE '14920-FETCH-STAT47-BIA-CUR' TO WSL-PARA-NAME

           INITIALIZE WSH-IA-BGN-DT
                      WSH-IA-END-DT
                      WSH-IA-DIFF

           EXEC SQL
               FETCH MRB037E_STAT47_BIA_CUR
                   INTO :WSH-IA-BGN-DT
                       ,:WSH-IA-END-DT
                       ,:WSH-LAST-DAY-BIA-DT
           END-EXEC

           EVALUATE SQLCODE
             WHEN WSC-SQL-OK
               CONTINUE

             WHEN WSC-NOT-FOUND
               SET WSS-END-BIA-CUR TO TRUE

             WHEN OTHER
               MOVE SQLCODE TO WSL-ERROR-VALUE
               MOVE WSC-ERROR-FETCHING-CLWIN
                 TO WSL-CALWIN-ERROR-CODE
               STRING 'ERROR FETCHING MRB037E_STAT47_BIA_CUR CURSOR'
                      ' CS-ID ' WSH-CS-ID
                      ' CWIN: ' WSH-AG-INDV-CWIN
                   DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
               SET  WSL-TERMINAL TO TRUE
               PERFORM 91000-ERROR
           END-EVALUATE
           .

      ***Break in Aid**************************************************
      ** Close the MRB037E_STAT47_PRIOR_CUR cursor.                    
      *****************************************************************
       14940-CLOSE-STAT47-BIA-CUR.
           MOVE '14940-CLOSE-STAT47-BIA-CUR' TO WSL-PARA-NAME

           EXEC SQL
               CLOSE MRB037E_STAT47_BIA_CUR
           END-EXEC

           EVALUATE SQLCODE
             WHEN WSC-SQL-OK
               CONTINUE

             WHEN OTHER
               MOVE SQLCODE TO WSL-ERROR-VALUE
               MOVE WSC-ERROR-FETCHING-CLWIN
                 TO WSL-CALWIN-ERROR-CODE
               STRING 'ERROR CLOSING MRB037E_STAT47_BIA_CUR CURSOR'
                      ' CS-ID ' WSH-CS-ID
                      ' CWIN: ' WSH-AG-INDV-CWIN
                   DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
               SET  WSL-TERMINAL TO TRUE
               PERFORM 91000-ERROR
           END-EVALUATE
           .

      ******************************************************************
      ** This paragraph fetches ABAWD individuals in the month.         
      ******************************************************************
       20050-FETCH-MR0037B-AG-RSLT.
           MOVE '20050-FETCH-MR0037B-AG-RSLT'      TO WSL-PARA-NAME

           INITIALIZE  WSD-AG-INDV-ELIG-RSLT
                       WSH-ELIG-STS-CD
                       WSH-AG-INDV-CWIN
                       WSH-ABAWD-IND
                       WSH-EDBC-SEQ
                       WSH-WRK-REG-IND
                       WSH-AG-EFF-START-DT
      *=================================================================
      * Fetch next row from cursor MR0037A_ELIG_RSLT_CUR
           EXEC SQL
             FETCH MR0037A_ELIG_RSLT_CUR
              INTO
                  :WSD-AG-INDV-ELIG-RSLT.WSD-CWIN
                  :WSD-AG-INDV-ELIG-RSLT.WSD-CWIN-I
                 ,:WSD-AG-INDV-ELIG-RSLT.WSD-ABAWD-IND
                  :WSD-AG-INDV-ELIG-RSLT.WSD-ABAWD-IND-I
                 ,:WSD-AG-INDV-ELIG-RSLT.WSD-ELIG-STS-CD
                  :WSD-AG-INDV-ELIG-RSLT.WSD-ELIG-STS-CD-I
                 ,:WSD-AG-INDV-ELIG-RSLT.WSD-EDBC-SEQ
                  :WSD-AG-INDV-ELIG-RSLT.WSD-EDBC-SEQ-I
                 ,:WSD-AG-INDV-ELIG-RSLT.WSD-WRK-REG-IND
                  :WSD-AG-INDV-ELIG-RSLT.WSD-WRK-REG-IND-I
                 ,:WSD-AG-ELIG-RSLT.WSD-INC-RPT-MTHD-IND
                  :WSD-AG-ELIG-RSLT.WSD-INC-RPT-MTHD-IND-I
                 ,:WSD-AG-ELIG-RSLT.WSD-AG-EFF-START-DT
                  :WSD-AG-ELIG-RSLT.WSD-AG-EFF-START-DT-I
           END-EXEC

           MOVE WSH-CS-ID                      TO WSL-IDENTIFIER
           SET  WSL-CS                         TO TRUE
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
               MOVE WSD-CWIN        OF WSD-AG-INDV-ELIG-RSLT
                                    TO WSH-AG-INDV-CWIN

               MOVE WSD-ABAWD-IND   OF WSD-AG-INDV-ELIG-RSLT
                                    TO WSH-ABAWD-IND
               MOVE WSD-WRK-REG-IND OF WSD-AG-INDV-ELIG-RSLT
                                    TO WSH-WRK-REG-IND
               MOVE WSD-AG-EFF-START-DT OF WSD-AG-ELIG-RSLT
                 TO WSH-AG-EFF-START-DT

               EVALUATE TRUE
                   WHEN WSH-ABAWD-IND = SPACES
                       MOVE WSC-NO TO WSH-ABAWD-IND

                   WHEN WSH-ABAWD-IND = WSC-ABAWD
                       CONTINUE

                   WHEN WSH-ABAWD-IND = WSC-EXM
                       CONTINUE  

                   WHEN OTHER
                       MOVE WSC-NO TO WSH-ABAWD-IND
               END-EVALUATE

               MOVE WSD-ELIG-STS-CD OF WSD-AG-INDV-ELIG-RSLT
                                    TO WSH-ELIG-STS-CD
               MOVE WSD-EDBC-SEQ    OF WSD-AG-INDV-ELIG-RSLT
                                    TO WSH-EDBC-SEQ
               MOVE WSD-INC-RPT-MTHD-IND  OF WSD-AG-ELIG-RSLT
                                    TO WSH-INC-RPT-MTHD-IND

               PERFORM 10000-APPLICATION-LOGIC

             WHEN WSC-NOT-FOUND
               SET WSS-END-OF-CUR1 TO TRUE
             WHEN OTHER
               MOVE SQLCODE            TO WSL-ERROR-VALUE
               MOVE WSC-ERROR-SELECTING-CLWIN
                   TO WSL-CALWIN-ERROR-CODE
               STRING 'ERROR IN FETCHING MR0037B_AG_ELIG_RSLT_CUR'
                      ' CS-ID: ' WSH-CS-ID 
                      ' CWIN: ' WSH-AG-INDV-CWIN
                  DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
               SET  WSL-TERMINAL       TO TRUE
               PERFORM 91000-ERROR
           END-EVALUATE
           .

      *=================================================================
      *The following paragraph reads a record from the Input data
      *file.
      *=================================================================
       20000-READ-PROCESS.
           MOVE '20000-READ-PROCESS' TO WSL-PARA-NAME

           READ MR0017E-CSLOAD-MOVEMNT-FILE
                INTO WSH-MR0017-CSLOAD-MOVEMNT-REC
                AT END SET WSS-END-OF-FILE TO TRUE
           END-READ

           EVALUATE WSH-MR0017E-FILE-STATUS
               WHEN WSC-FILE-OK
                    PERFORM 20100-PROCESS-IP-FILE-RECORD
               WHEN WSC-END-OF-FILE
                    SET WSS-END-OF-FILE TO TRUE
               WHEN OTHER
                    MOVE WSC-ERROR-READING-CLWIN
                      TO WSL-CALWIN-ERROR-CODE
                   MOVE 'ERROR READING MR0017E-CSLOAD-MOVEMNT-FILE'
                     TO WSL-MISC-ERROR-TXT
                    SET WSL-TERMINAL TO TRUE
                    PERFORM 91000-ERROR
           END-EVALUATE
           .

      *****************************************************************
      *                   Process Input Record
      *****************************************************************
       20100-PROCESS-IP-FILE-RECORD.
           MOVE '20100-PROCESS-IP-FILE-RECORD' TO WSL-PARA-NAME

           INITIALIZE WSH-CS-ID
                      WSH-PGM-TYP-CD
                      WSH-PGM-AID-CD
                      WSH-FUT-EDBC-SEQ
                      WSH-FS-DISC-DT

           MOVE WSH-MR0017-CS-ID            TO WSH-CS-ID
           MOVE WSH-MR0017-PGM-AID-CD       TO WSH-PGM-AID-CD
           MOVE WSH-MR0017-PGM-TYP-CD       TO WSH-PGM-TYP-CD
           MOVE WSH-MR0017-FUTURE-EDBC-SEQ  TO WSH-FUT-EDBC-SEQ
           MOVE WSH-MR0017-APP-DT           TO WSH-APP-DT

              PERFORM 02010-OPEN-AG-RSLT-CUR
              SET WSS-BGN-OF-CUR1 TO TRUE
              PERFORM 20050-FETCH-MR0037B-AG-RSLT
                      UNTIL WSS-END-OF-CUR1
              PERFORM 90100-CLOSE-CUR
           .
      *****************************************************************
      ** This process retrives Registant name (Individual Name) from
      *  individual.
      *****************************************************************
       20600-GET-INDV-NAME.
           MOVE '20600-GET-INDV-NAME' TO WSL-PARA-NAME

           INITIALIZE WSD-LAST-NM  OF WSD-INDV
                      WSD-FIRST-NM OF WSD-INDV
                      WSH-INDV-LAST-NM
                      WSH-INDV-FIRST-NM
                      WSH-INDV-FULL-NM
      ****************************************************************
      *                        SQL#  130
      ****************************************************************
      * Select name from Individual
      *****************************************************************
           EXEC SQL
              SELECT
                  LAST_NM
                 ,FIRST_NM
              INTO
                 :WSD-INDV.WSD-LAST-NM
                 :WSD-INDV.WSD-LAST-NM-I
                ,:WSD-INDV.WSD-FIRST-NM
                 :WSD-INDV.WSD-FIRST-NM-I
              FROM
                 INDV
              WHERE
                     CWIN        = :WSH-AG-INDV-CWIN
                 AND EFF_BGN_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')

           END-EXEC

           MOVE WSH-AG-INDV-CWIN               TO WSL-IDENTIFIER
           SET  WSL-CWIN                       TO TRUE
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    MOVE WSD-LAST-NM    OF  WSD-INDV
                                        TO  WSH-INDV-LAST-NM
                    MOVE WSD-FIRST-NM   OF  WSD-INDV
                                        TO  WSH-INDV-FIRST-NM
                    STRING WSH-INDV-LAST-NM
                          DELIMITED BY SPACE
                     ", " WSH-INDV-FIRST-NM
                          DELIMITED BY SPACE
                          INTO WSH-INDV-FULL-NM
                   END-STRING
               WHEN WSC-NOT-FOUND
                    MOVE SQLCODE               TO WSL-ERROR-VALUE
                    MOVE WSC-NOT-FOUND-CLWIN   TO WSL-CALWIN-ERROR-CODE
                    STRING "ERROR DUE TO CWIN NOT FOUND IN INDV TABLE"
                           " CWIN: "
                           WSH-AG-INDV-CWIN
                           DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                    SET WSL-NON-FATAL          TO TRUE
                    PERFORM 91000-ERROR
               WHEN WSC-MULTIPLE-ROWS
                    MOVE SQLCODE               TO WSL-ERROR-VALUE
                    MOVE WSC-MULTIPLE-ROWS-CLWIN
                      TO WSL-CALWIN-ERROR-CODE
                    STRING "ERROR DUE TO MULTIPLE ROWS FOUND "
                           "IN INDV TABLE FOR CWIN: "
                           WSH-AG-INDV-CWIN
                           DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                    SET WSL-NON-FATAL          TO TRUE
                    PERFORM 91000-ERROR
               WHEN OTHER
                    MOVE SQLCODE               TO WSL-ERROR-VALUE
                    MOVE WSC-ERROR-SELECTING-CLWIN
                      TO WSL-CALWIN-ERROR-CODE
                    MOVE "ERROR SELECTING A ROW FROM INDV TABLE  "
                                     TO WSL-MISC-ERROR-TXT
                    SET WSL-TERMINAL           TO TRUE
                    PERFORM 91000-ERROR
           END-EVALUATE
           .

      *****************************************************************
      ** This process provides Case name of the case Number.
      *****************************************************************
      *                        SQL#  140
      ******************************************************************
       20700-GET-CASE-NAME.
           MOVE '20700-GET-CASE-NAME' TO WSL-PARA-NAME
      **PTEST 10699
           INITIALIZE WSD-LAST-NM  OF WSD-CS
                      WSD-FIRST-NM OF WSD-CS
                      WSH-CS-LAST-NM
                      WSH-CS-FIRST-NM
                      WSH-CS-FULL-NM
      ****************************************************************
      * Select name from Case
      *****************************************************************
           EXEC SQL
              SELECT
                  LAST_NM
                 ,FIRST_NM
              INTO
                  :WSD-CS.WSD-LAST-NM
                  :WSD-CS.WSD-LAST-NM-I
                 ,:WSD-CS.WSD-FIRST-NM
                  :WSD-CS.WSD-FIRST-NM-I
              FROM
                 CS
              WHERE
                     CS_ID = :WSH-CS-ID
                 AND EFF_BGN_DT <=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                 AND NVL(EFF_END_DT, F_HIGH_DT()) >=
                     TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')

           END-EXEC

           MOVE WSH-CS-ID                      TO WSL-IDENTIFIER
           SET  WSL-CS                         TO TRUE
           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    MOVE WSD-LAST-NM   OF WSD-CS
                                       TO WSH-CS-LAST-NM
                    MOVE WSD-FIRST-NM  OF WSD-CS
                                       TO WSH-CS-FIRST-NM
                    STRING WSH-CS-LAST-NM
                         DELIMITED BY SPACE
                    ", " WSH-CS-FIRST-NM
                         DELIMITED BY SPACE
                         INTO  WSH-CS-FULL-NM
                    END-STRING
               WHEN WSC-NOT-FOUND
                    MOVE SQLCODE               TO WSL-ERROR-VALUE
                    MOVE WSC-NOT-FOUND-CLWIN   TO WSL-CALWIN-ERROR-CODE
                    STRING "ERROR DUE TO ROW NOT FOUND IN CS TABLE"
                           " Case ID: "
                           WSH-CS-ID
                           DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                    SET WSL-NON-FATAL          TO TRUE
                    PERFORM 91000-ERROR
               WHEN WSC-MULTIPLE-ROWS
                    MOVE SQLCODE               TO WSL-ERROR-VALUE
                    MOVE WSC-MULTIPLE-ROWS-CLWIN
                      TO WSL-CALWIN-ERROR-CODE
                    MOVE
                    "ERROR DUE TO MULTIPLE ROWS FOUND IN CS TABLE"
                                  TO WSL-MISC-ERROR-TXT
                    SET WSL-NON-FATAL          TO TRUE
                    PERFORM 91000-ERROR
               WHEN OTHER
                    MOVE SQLCODE               TO WSL-ERROR-VALUE
                    MOVE WSC-ERROR-SELECTING-CLWIN
                      TO WSL-CALWIN-ERROR-CODE
                    MOVE "ERROR SELECTING A ROW FROM CS TABLE  "
                                     TO WSL-MISC-ERROR-TXT
                    SET WSL-TERMINAL           TO TRUE
                    PERFORM 91000-ERROR
           END-EVALUATE
           .

      ******************************************************************
      ** Following subprocess search RT_ACT_TYP reference
      ******************************************************************
       30300-SEARCH-ACT-TYP-DESC.
           MOVE '30300-SEARCH-ACT-TYP-DESC' TO WSL-PARA-NAME

            SET WSI-ACT-TYP         TO WSC-1
            SEARCH WSD-RT-ACT-TYP
            AT END
                  MOVE 'NOT FOUND'      TO WSH-MRB037-ES-ACT-TYP
             WHEN WSD-ACT-TYP-CD        OF WSD-RT-ACT-TYP(WSI-ACT-TYP)
                                        =  WSH-MRB037-ES-ACT-TYP-CD

                  MOVE WSD-ACT-TYP-DESC OF WSD-RT-ACT-TYP (WSI-ACT-TYP)
                                        TO WSH-MRB037-ES-ACT-TYP
            END-SEARCH
            .

      *****************************************************************
      * The following paragraph gets the job retention switch          
      *                                                                
      *****************************************************************
       30400-GET-JOB-RETENTION.
           MOVE '30400-GET-JOB-RETENTION '      TO WSL-PARA-NAME

           MOVE SPACES TO WSS-JOB-RETN-ACPT-SW

      ******************************************************************
      * This retrieves Job Retention of Individuals.                    
      * Note:  It is assumed that once job retention is accepted it     
      * will remain accepted for the duration of employment             
      ******************************************************************
      *                        SQL# 150                                 
      ******************************************************************
           EXEC SQL
              SELECT :WSC-YES
              INTO :WSS-JOB-RETN-ACPT-SW
              FROM INDV_EMP
              WHERE CWIN                 = :WSH-AG-INDV-CWIN
                AND JOB_RETN_SVC_ACPT_SW = :WSC-YES
                AND EFF_BGN_DT <=
                    TO_DATE(:WSH-LAST-DAY-OF-REPT-DT,'YYYY-MM-DD')
                AND NVL(EFF_END_DT,F_HIGH_DT()) >=
                    TO_DATE(:WSH-FIRST-DAY-OF-REPT-DT,'YYYY-MM-DD')
           END-EXEC

           EVALUATE SQLCODE
              WHEN WSC-SQL-OK
              WHEN WSC-MULTIPLE-ROWS
                   CONTINUE
              WHEN WSC-NOT-FOUND
                   MOVE SPACES TO WSS-JOB-RETN-ACPT-SW
              WHEN OTHER
                   MOVE SQLCODE TO WSL-ERROR-VALUE
                   MOVE WSC-ERROR-SELECTING-CLWIN
                     TO WSL-CALWIN-ERROR-CODE
                   STRING 'ERROR SELECTING INDV_EMP'
                          ' WSH-AG-INDV-CWIN: '
                            WSH-AG-INDV-CWIN
                     DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
                   SET WSL-TERMINAL TO TRUE
                   PERFORM 91000-ERROR
           END-EVALUATE
           .

      ***************************************************************
      ** Populate MRA037E record variables
      ***************************************************************
       50000-POPULATE-MRA037E-EXT.
           MOVE '50000-POPULATE-MRA037E-EXT' TO WSL-PARA-NAME

           INITIALIZE WSH-MRA037E-EXTRACT-REC

           MOVE WSH-CS-ID               TO  WSH-MRA037-CS-ID
           MOVE WSH-AG-INDV-CWIN        TO  WSH-MRA037-CWIN
           MOVE WSH-LAST-DAY-OF-REPT-MM  TO WSH-MRA037-ABD-IDT-MNTH

           MOVE WSH-CS-FULL-NM          TO  WSH-MRA037-CS-FULL-NM
           MOVE WSH-INDV-FULL-NM        TO  WSH-MRA037-INDV-FULL-NM
           MOVE WSH-PGM-AID-CD          TO  WSH-MRA037-PGM-AID-CD
           MOVE WSH-MR0017-PA-NA-IND    TO  WSH-MRA037-FS-TYPE
           MOVE WSH-MR0017-CASELOAD-NUM TO  WSH-MRA037-CSLD-NO
           MOVE WSH-ABAWD-EXMT-SW       TO  WSH-MRA037-ABAWD-EXMT-SW
           IF WSH-ABAWD-EXMT-DT  = SPACES
              CONTINUE
           ELSE
              INITIALIZE WSH-TEMP-DT
              MOVE WSH-ABAWD-EXMT-DT        TO WSH-TEMP-DT
              PERFORM  50240-FORMAT-DT
              MOVE WSH-FORMATT-DT          TO  WSH-MRA037-ABAWD-EXMT-DT
           END-IF

           MOVE SPACES TO WSH-ABAWD-EXMT-SW
                          WSH-ABAWD-EXMT-DT

           MOVE WSH-FS-DISC-SW          TO  WSH-MRA037-FS-DISC-SW
           MOVE WSH-FS-DISC-DT          TO  WSH-MRA037-FS-DISC-DT
           MOVE WSH-MNTH-BGN-SW         TO  WSH-MRA037-MNTH-BEG-SW
           MOVE WSH-APP-DT              TO  WSH-MRA037-APP-DT

           IF WSH-ABAWD-IND-EXT = SPACES
               MOVE WSH-ABAWD-IND TO WSH-MRA037-ABAWD-IND
           ELSE
               MOVE WSH-ABAWD-IND-EXT TO WSH-MRA037-ABAWD-IND
               MOVE SPACES TO WSH-ABAWD-IND-EXT
           END-IF
           IF WSS-ABAWD-NEW
               MOVE WSC-YES TO WSH-MRA037-ABAWD-NEW-IND
               MOVE SPACES TO WSS-ABAWD-NEW-SW
           END-IF

           MOVE WSH-WRK-REG-IND TO WSH-MRA037-WRK-REG-IND
           IF WSS-WR-NEW
               MOVE WSC-YES TO WSH-MRA037-WRK-REG-NEW-IND
               MOVE SPACES TO WSS-WR-NEW-SW
           END-IF 

           PERFORM 82000-WRITE-MRA037E-EXTRACT
           .

      ******************************************************************
      *Following paragraph formats any date to mm/dd/ccyy format.
      ******************************************************************
       50240-FORMAT-DT.
           MOVE '50240-FORMAT-DT'          TO WSL-PARA-NAME

           INITIALIZE WSH-FORMATTED-DT
           MOVE WSH-TEMP-DT-DD             TO WSH-FORMATT-DT-DD
           MOVE WSH-TEMP-DT-MM             TO WSH-FORMATT-DT-MM
           MOVE WSH-TEMP-DT-CCYY           TO WSH-FORMATT-DT-CCYY
           .

      ******************************************************************
      ** Populate MRB037E record variables
      *****************************************************************
       50010-POPULATE-MRB037E-EXT.
           MOVE '50010-POPULATE-MRB037E-EXT'   TO WSL-PARA-NAME

           INITIALIZE WSH-MRB037E-EXTRACT-REC

           MOVE WSH-CS-ID              TO  WSH-MRB037-CS-ID
           MOVE WSH-AG-INDV-CWIN       TO  WSH-MRB037-CWIN
           MOVE WSH-ACT-ACTL-BGN-MM    TO  WSH-MRB037-ACTY-ACTL-MNTH
           MOVE WSH-PGM-AID-CD         TO  WSH-MRB037-PGM-AID-CD
           MOVE WSH-MR0017-PA-NA-IND   TO  WSH-MRB037-FS-TYPE
           MOVE WSH-CS-FULL-NM         TO  WSH-MRB037-CS-FULL-NM
           MOVE WSH-INDV-FULL-NM       TO  WSH-MRB037-INDV-FULL-NM
           MOVE WSH-ES-TYP-CD          TO  WSH-MRB037-ES-ACT-TYP-CD
           MOVE WSH-ES-PGM-ACT-DESC    TO  WSH-MRB037-ES-ACT-TYP-DESC
           MOVE WSH-ACTL-BGN-DT        TO  WSH-MRB037-ES-ACT-BEG-DT
           IF  WSH-ACT-ACTL-END-DT  = SPACES
               CONTINUE
           ELSE

              INITIALIZE WSH-TEMP-DT
              MOVE WSH-ACT-ACTL-END-DT   TO WSH-TEMP-DT
              PERFORM  50240-FORMAT-DT
              MOVE WSH-FORMATT-DT        TO  WSH-MRB037-ES-ACT-END-DT
           END-IF
           MOVE WSH-MR0017-PA-NA-IND     TO  WSH-MRB037-FS-TYPE
           MOVE WSH-MR0017-CASELOAD-NUM  TO  WSH-MRB037-CSLD-NO

           PERFORM 30300-SEARCH-ACT-TYP-DESC

           IF WSH-ABAWD-IND = WSC-YES
              MOVE WSC-YES  TO  WSH-MRB037-ABAWD-SW
           ELSE
              MOVE WSC-NO   TO  WSH-MRB037-ABAWD-SW
           END-IF

           MOVE WSH-NEW-PARTC-SW         TO WSH-MRB037-NEW-PARTC-SW
           MOVE WSS-NEW-PLACEMENT-SW     TO WSH-MRB037-NEW-PLACMT-SW
           MOVE WSH-FIRST-DAY-OF-REPT-MM TO WSH-MRB037-COMP-MNTH
           MOVE WSH-ASG-ACT-ID           TO WSH-MRB037-ASG-ACT-ID

           IF WSS-JOB-RETN-ACPT
           AND WSS-Y-NEW-PLACEMENT-SW
               MOVE WSC-YES TO WSH-MRB037-JOB-RETN-ACPT-SW
               MOVE WSC-JOB-RETN-DESC TO WSH-MRB037-JOB-RETN-DESC
           ELSE
               MOVE SPACES TO WSH-MRB037-JOB-RETN-ACPT-SW
                              WSH-MRB037-JOB-RETN-DESC
           END-IF

           PERFORM 82100-WRITE-MRB037E-EXTRACT
           .

      ****************************************************************
      *The following paragraph populates MR0099E extract.
      ****************************************************************
       03200-CREATE-MR0099E.
           MOVE '03200-CREATE-MR0099E'         TO WSL-PARA-NAME

           PERFORM 69910-OPEN-MR0099E
           INITIALIZE WSH-MR0099-REPORTING-PERIOD-REC
           MOVE WSC-MRA037E                TO WSH-MR0099-EXTRACT-ID
           MOVE WSH-FIRST-DAY-OF-REPT-DT   TO WSH-TEMP-DT
           MOVE WSH-TEMP-DT-MM             TO WSH-MR0099-BEGIN-MM
                                              WSH-MR0099-REPORT-BEGIN-MM
                                              WSH-MR0099-MONTH
           MOVE WSH-TEMP-DT-DD             TO WSH-MR0099-BEGIN-DD
                                              WSH-MR0099-REPORT-BEGIN-DD
           MOVE WSH-TEMP-DT-CCYY           TO WSH-MR0099-BEGIN-YYYY
                                            WSH-MR0099-REPORT-BEGIN-YYYY
           MOVE WSH-TEMP-DT-YY             TO WSH-MR0099-YEAR

           MOVE WSH-LAST-DAY-OF-REPT-DT    TO WSH-TEMP-DT1
           MOVE WSH-TEMP-DT1-MM             TO WSH-MR0099-END-MM
           MOVE WSH-TEMP-DT1-DD             TO WSH-MR0099-END-DD
           MOVE WSH-TEMP-DT1-CCYY           TO WSH-MR0099-END-YYYY
           PERFORM 69920-WRITE-MR0099E

           MOVE WSC-MRB037E                TO WSH-MR0099-EXTRACT-ID
           PERFORM 69920-WRITE-MR0099E

           INITIALIZE WSH-MR0099-REPORTING-PERIOD-REC
           MOVE WSC-MRA037Q TO  WSH-MR0099-EXTRACT-ID
           MOVE WSH-FIRST-DAY-OF-QTR-YR
             TO WSH-MR0099-BEGIN-YYYY
                WSH-MR0099-REPORT-BEGIN-YYYY
           MOVE WSH-FIRST-DAY-OF-QTR-MM
             TO WSH-MR0099-BEGIN-MM
                WSH-MR0099-REPORT-BEGIN-MM
                WSH-MR0099-MONTH
                WSH-MR0099-START-QUARTER-MONTH
           MOVE WSH-FIRST-DAY-OF-QTR-DD
             TO WSH-MR0099-BEGIN-DD
                WSH-MR0099-REPORT-BEGIN-DD
           MOVE WSH-FIRST-DAY-OF-QTR-YY   TO WSH-MR0099-YEAR
           MOVE WSH-LAST-DAY-OF-QTR-YR    TO WSH-MR0099-END-YYYY
           MOVE WSH-LAST-DAY-OF-QTR-MM    TO WSH-MR0099-END-MM
                                            WSH-MR0099-END-QUARTER-MONTH
           MOVE WSH-LAST-DAY-OF-QTR-DD    TO WSH-MR0099-END-DD
           MOVE WSH-FIRST-DAY-OF-FED-FISCAL-YY
                                        TO WSH-MR0099-START-FISCAL-YEAR

           MOVE WSH-LAST-DAY-OF-FED-FISCAL-YY
                                        TO WSH-MR0099-END-FISCAL-YEAR
           PERFORM 69920-WRITE-MR0099E
           MOVE WSC-MRB037Q TO  WSH-MR0099-EXTRACT-ID
           PERFORM 69920-WRITE-MR0099E

           PERFORM 69930-CLOSE-MR0099E
           .

      *****************************************************************
      ** Writes a record into MRA037E Extract
      *****************************************************************
       82000-WRITE-MRA037E-EXTRACT.
           MOVE '82000-WRITE-MRB037E-EXTRACT' TO WSL-PARA-NAME

           WRITE WSH-MRA037E-REC FROM
                 WSH-MRA037E-EXTRACT-REC
           END-WRITE

           IF WSH-MRA037E-FILE-STATUS = WSC-FILE-OK
              CONTINUE
           ELSE
              MOVE WSC-ERROR-WRITING-CLWIN TO WSL-CALWIN-ERROR-CODE
              STRING 'ERROR WRITING TO MRA37E-EXTRACT-FILE: '
                      WSH-MRA037E-FILE-STATUS
                 DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
              END-STRING
              SET WSL-TERMINAL TO TRUE
              PERFORM 91000-ERROR
           END-IF
           .

      *****************************************************************
      ** Writes a record into MRB037E Extract
      *****************************************************************
       82100-WRITE-MRB037E-EXTRACT.
           MOVE '82100-WRITE-MRB037E-EXTRACT' TO WSL-PARA-NAME

           WRITE WSH-MRB037E-REC FROM
                 WSH-MRB037E-EXTRACT-REC
           END-WRITE

           IF WSH-MRB037E-FILE-STATUS = WSC-FILE-OK
              CONTINUE
           ELSE
              MOVE WSC-ERROR-WRITING-CLWIN TO WSL-CALWIN-ERROR-CODE
              STRING 'ERROR WRITING TO MRB037E-EXTRACT-FILE: '
                      WSH-MRB037E-FILE-STATUS
                 DELIMITED BY SIZE INTO WSL-MISC-ERROR-TXT
              END-STRING
              SET WSL-TERMINAL TO TRUE
              PERFORM 91000-ERROR
           END-IF
           .

      ****************************************************************
      *The following copybook contains the logic to create the extract
      *MR0099E.
      ****************************************************************

       COPY MRP099C.

      * Batch control summary paragraphs
       COPY MRP105C.

      * Commit paragraph copybook
       COPY AA0058C.

      ****************************************************************
      *The following copybook contains the code to call the error log
      *subroutine AA0016S
      ****************************************************************
       COPY AA0054C.
      *=================================================================
      *       The folloiwng paragraph closes the open files.
      *=================================================================
       90000-CLOSE.
           MOVE '90000-CLOSE' TO WSL-PARA-NAME

           CLOSE MRA037E-ABAWD-QUARTERLY-FILE
           IF WSH-MRA037E-FILE-STATUS = WSC-FILE-OK
              CONTINUE
           ELSE
              MOVE WSC-ERROR-CLOSING-CLWIN  TO WSL-CALWIN-ERROR-CODE
              MOVE 'ERROR IN CLOSING MRA037E-ABAWD-QUARTERLY-FILE'
                TO WSL-MISC-ERROR-TXT
              SET WSL-TERMINAL              TO TRUE
              PERFORM 91000-ERROR
           END-IF

           CLOSE MRB037E-FSET-QUARTERLY-FILE
           IF WSH-MRB037E-FILE-STATUS = WSC-FILE-OK
              CONTINUE
           ELSE
              MOVE WSC-ERROR-CLOSING-CLWIN  TO WSL-CALWIN-ERROR-CODE
              MOVE 'ERROR IN CLOSING MRB037E-FSET-QUARTERLY-FILE'
                TO WSL-MISC-ERROR-TXT
              SET WSL-TERMINAL              TO TRUE
              PERFORM 91000-ERROR
           END-IF

           CLOSE MR0017E-CSLOAD-MOVEMNT-FILE
           IF WSH-MR0017E-FILE-STATUS = WSC-FILE-OK
              CONTINUE
           ELSE
              MOVE WSC-ERROR-CLOSING-CLWIN  TO WSL-CALWIN-ERROR-CODE
              MOVE 'ERROR IN CLOSING MR0017E-CSLOAD-MOVEMNT-FILE'
                TO WSL-MISC-ERROR-TXT
              SET WSL-TERMINAL              TO TRUE
              PERFORM 91000-ERROR
           END-IF

           SET WSS-END-OF-PROCESSING TO TRUE
           PERFORM 89999-COMMIT-FREQ
           PERFORM 99999-GOBACK
           .
      ******************************************************************
       90100-CLOSE-CUR.
           MOVE '90100-CLOSE-CUR' TO WSL-PARA-NAME

           EXEC SQL
              CLOSE MR0037A_ELIG_RSLT_CUR
           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN OTHER
                    MOVE SQLCODE TO WSL-ERROR-VALUE
                    MOVE WSC-ERROR-CLOSING-CUR-CLWIN
                      TO WSL-CALWIN-ERROR-CODE
                    MOVE 'ERROR IN CLOSING MR0037A_ELIG_RSLT_CUR'
                      TO WSL-MISC-ERROR-TXT
                    SET WSL-TERMINAL TO TRUE
                    PERFORM 91000-ERROR
           END-EVALUATE
           .

      ***************************************************************
       90150-CLOSE-CUR.
           MOVE '90150-CLOSE-CUR' TO WSL-PARA-NAME

           EXEC SQL
              CLOSE MRB037E_ES_ASG_ACT_CUR
           END-EXEC

           EVALUATE SQLCODE
               WHEN WSC-SQL-OK
                    CONTINUE
               WHEN OTHER
                    MOVE SQLCODE TO WSL-ERROR-VALUE
                    MOVE WSC-ERROR-CLOSING-CUR-CLWIN
                      TO WSL-CALWIN-ERROR-CODE
                    MOVE 'ERROR IN CLOSING MRB037E_ES_ASG_ACT_CUR'
                      TO WSL-MISC-ERROR-TXT
                    SET WSL-TERMINAL TO TRUE
                    PERFORM 91000-ERROR
           END-EVALUATE
           .

      ******************************************************************
      *The following paragraph stops the execution of the program and
      *returns the control to the OS
      *****************************************************************
       99999-GOBACK.
      ****************************************************************
      *The following copybook contains the code to call the audit trail
      *subroutine AA0056S.
      ****************************************************************
           COPY AA0056C.
           GOBACK
           .
